0:df_with_heildarþekja <- bind_rows(df, sums_row)
0:df_wider <- df_with_heildarþekja |>
0:pivot_wider(
0:names_from = Year,  # Use Year as column names
0:values_from = Mean  # Use Mean as the values in the table
0:)
0:df_wider
0:sums_row
0:hreinsad
0:dflong <- hreinsad %>%
0:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28", "R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62") &
0:!species %in% "Ber klöpp" &
0:!Type %in% c("Grænþörungar", "Cyanobacteria")) |>
0:#select(-c(`1976`, `1997`, `2006`, `2011`, `1999`,`2014`, `2017`)) |>
0:pivot_longer(cols = c(`2020`, `2023`,`1976`, `1997`, `2006`, `2011`, `1999`,`2014`, `2017`),
0:names_to = "Year",
0:values_to = "Coverage")
0:df <- dflong |>
0:ddply(.(Type,Year,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
0:ddply(.(Type,Year),summarize,Mean=mean(Summa, na.rm=TRUE))
0:dflong
0:lapply(split, function)
0:lapply(split(dflong, dflong$Year), function(x) uniqe(x$species))
0:lapply(split(dflong, dflong$Year), function(x) unique(x$species))
0:lapply(split(dflong, dflong$Year), function(x) table(x$species))
0:lapply(split(dflong, dflong$Year), function(x) str(table(x$species)))
0:lapply(split(dflong, dflong$Year), function(x) sum(table(x$species)))
0:lapply(split(dflong, dflong$Year), function(x) n(x$species))
0:lapply(split(dflong, dflong$Year), function(x) length(x$species))
0:lapply(split(dflong, dflong$Year), function(x) length(unique(x$species)))
0:lapply(split(dflong, dflong$Year), function(x) unique(x$species))
0:str(dflong)
0:ddply(dflong,"Year",summarise(NumberOfSpecies = n_distinct(species)))
0:ddply(dflong,"Year",summarise(NumberOfSpecies = n_distinct("species")))
0:ddply(dflong,"Year",summarise,NumberOfSpecies = n_distinct("species"))
0:ddply(dflong,"Year",summarise,NumberOfSpecies = length("species"))
0:ddply(dflong,"Year",summarise,NumberOfSpecies = length((species)))
0:ddply(dflong,"Year",summarise,NumberOfSpecies = length(unique(species)))
0:lapply(split(dflong, dflong$Year), function(x) length(unique(x$species[is.na(x$Coverage==TRUE])))
0:lapply(split(dflong, dflong$Year), function(x) length(unique(x$species[is.na(x$Coverage==TRUE)])))
0:lapply(split(dflong, dflong$Year), function(x) length(unique(x$species[is.na(x$Coverage==FALSE)])))
0:lapply(split(dflong[is.na(dflong$Coverage==FALSE)], dflong$Year), function(x) length(unique(x$species)))
0:lapply(split(dflong[is.na(dflong$Coverage==FALSE),], dflong$Year), function(x) length(unique(x$species)))
0:lapply(split(dflong, dflong$Year), function(x) length(unique(x$species[!is.na(x$Coverage)])))
0:lapply(split(dflong[is.na(dflong$Coverage),], dflong$Year), function(x) length(unique(x$species)))
0:lapply(split(dflong[!is.na(dflong$Coverage), ], dflong$Year), function(x) length(unique(x$species)))
0:lapply(split(dflong[!is.na(dflong$Coverage), ], dflong$Year), function(x) unique(x$species))
0:split(dflong[!is.na(dflong$Coverage), ]
0:split(dflong[!is.na(dflong$Coverage), ])
0:split(dflong[!is.na(dflong$Coverage), ], dflong$Year)
0:dflong
0:split(dflong, dflong$Year)
0:dflong_Engin_NA <- dflong[dflong[is.na(dflong$Coverage==FALSE),]]
0:dflong_Engin_NA <- dflong[dflong[!is.na(dflong$Coverage),]]
0:dflong_Engin_NA <- dflong[dflong[!is.na(dflong$Coverage),]
0:dflong_Engin_NA <- dflong[!is.na(dflong$Coverage),]
0:Aralisti <- split(dflong_Engin_NA, dflong_Engin_NA$Year)
0:Aralisti
0:lapply(split(Aralisti, function(x) length(unique(x$species)))
0:lapply(Aralisti, function(x) length(unique(x$species)))
0:Aralisti$1976
0:Aralisti$'1976'
0:Aralisti$'1976'$species
0:(Aralisti$'1976'$species)unique()
0:unique(Aralisti$'1976'$species)
0:str(Aralisti$'1976'$species)
0:str(Aralisti$'2023'$species)
0:unique(Aralisti$'1976'$species)
0:ddply(Aralisti$'1976',.(species),summarise, Sum=sum(coverage))
0:ddply(Aralisti$'1976',.(species),summarise, Sum=sum(Coverage, na.rm = T))
0:lapply(Aralisti, function(x) length(unique(x$species)))
0:lapply(Aralisti, function(x) length(unique(x$Reitir)))
0:lapply(Aralisti, function(x) length(unique(x$Reitir)))
0:lapply(Aralisti, function(x) length(unique(x$Reitur)))
0:dflong <- hreinsad %>%
0:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28", "R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62") &
0:!species %in% "Ber klöpp" &
0:!Type %in% c("Grænþörungar", "Cyanobacteria")) |>
0:#select(-c(`1976`, `1997`, `2006`, `2011`, `1999`,`2014`, `2017`)) |>
0:pivot_longer(cols = c(`2020`, `2023`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`),
0:names_to = "Year",
0:values_to = "Coverage")
0:dflong_Engin_NA <- dflong[!is.na(dflong$Coverage),]
0:Aralisti <- split(dflong_Engin_NA, dflong_Engin_NA$Year)
0:lapply(Aralisti, function(x) length(unique(x$species)))
0:dflong
0:dflong <- hreinsad %>%
0:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28", "R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62") &
0:!species %in% "Ber klöpp" &
0:!Type %in% c("Grænþörungar", "Cyanobacteria")) |>
0:#select(-c(`1976`, `1997`, `2006`, `2011`, `1999`,`2014`, `2017`)) |>
0:select(-c(`1999`)) |>
0:pivot_longer(cols = c(`2020`, `2023`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`),
0:names_to = "Year",
0:values_to = "Coverage")
0:dflong
0:summary(dflong)
0:dflong_Engin_NA <- dflong[!is.na(dflong$Coverage),]
0:Aralisti <- split(dflong_Engin_NA, dflong_Engin_NA$Year)
0:lapply(Aralisti, function(x) length(unique(x$species)))
0:ddply(dflong_Engin_NA,.(Year),summarise, fjoldi=n(species))
0:ddply(dflong_Engin_NA,.(Year species), summarise, Fjoldi = length(species))
0:ddply(dflong_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
0:DT::datatable(ddply(dflong_Engin_NA,.(Year, species), summarise, Fjoldi = length(species)))
0:DT::datatable(ddply(dflong_Engin_NA,.(Year, species, Reitur), summarise, Fjoldi = length(species)))
0:unique(dflong_Engin_NA$species)
0:ddply(dflong_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
0:ddply(dflong_Engin_NA,.(Year, species), summarise, Fjoldi = mean(species))
0:# View the result
0:print(df_longer)
0:dflong%>%
0:ggplot(aes(x = Type, y = Mean)) +
0:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =1,position="dodge")  +
0:xlab("") + ylab("") + labs(fill = "", title = "Hei", caption = "Meðalþekja mosa, blað- og runnfléttna auk meðalheildarþekju og meðaltegundafjölda í öllum föstum reitum sem metnir hafa verið síðan 1976 (alls x reitir") +
0:theme_minimal() +
0:scale_fill_brewer(palette = "Set1") +
0:scale_y_continuous(labels = scales::label_dollar(prefix = "", suffix = " \n%"))
0:df_wider_with_sums
0:lapply(Aralisti, function(x) length(unique(x$species)))
0:df <- dflong_Engin_NA |>
0:ddply(.(Type,Year,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
0:ddply(.(Type,Year),summarize,Mean=mean(Summa, na.rm=TRUE))
0:df
0:ddply(dflong_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
0:lapply(Aralisti, function(x) length(unique(x$species)))
0:df <- dflong_Engin_NA |>
0:ddply(.(Type,Year,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
0:ddply(.(Type,Year),summarize,Mean=mean(Summa, na.rm=TRUE))
0:df_summary <- df |>
0:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
0:df_summary
0:Aralisti_fjoldi_teg <- lapply(Aralisti, function(x) length(unique(x$species)))
0:Aralisti_fjoldi_teg <- lapply(Aralisti, function(x) length(unique(x$species)))
0:Aralisti_fjoldi_teg
0:Aralisti_fjoldi_teg <- lapply(Aralisti, function(x) length(unique(x$species))) |> unlist
0:Aralisti_fjoldi_teg <- lapply(Aralisti, function(x) length(unique(x$species))) |> unlist()
0:Aralisti_fjoldi_teg
0:str(Aralisti_fjoldi_teg)
0:Aralisti_fjoldi_teg <- lapply(Aralisti, function(x) length(unique(x$species))) |>
0:unlist() |>
0:data.frame(
0:Year = names(Aralisti_fjoldi_teg),
0:FjoldiTeg = as.integer(Aralisti_fjoldi_teg)
0:)
0:Aralisti_fjoldi_teg <- lapply(Aralisti, function(x) length(unique(x$species))) |>
0:unlist() |>
0:data.frame(
0:Year = names(Aralisti_fjoldi_teg),
0:FjoldiTeg = as.integer(Aralisti_fjoldi_teg)
0:)
0:lapply(Aralisti, function(x) length(unique(x$species)))
0:Aralisti_fjoldi_teg <- lapply(Aralisti, function(x) length(unique(x$species))) |>
0:unlist() |>
0:data.frame(
0:Year = names(),
0:FjoldiTeg = as.integer()
0:)
0:lapply(Aralisti, function(x) length(unique(x$species))) |>
0:unlist() |>
0:data.frame(
0:Year = names(),
0:FjoldiTeg = as.integer()
0:)
0:# Heildarfjöldi tegunda á ári:
0:Aralisti <- split(dflong_Engin_NA, dflong_Engin_NA$Year)
0:Aralisti_fjoldi_teg <- lapply(Aralisti, function(x) length(unique(x$species))) |>
0:unlist() |>
0:data.frame(
0:Year = names(),
0:FjoldiTeg = as.integer()
0:)
0:Aralisti
0:Aralisti_fjoldi_teg <- lapply(Aralisti, function(x) length(unique(x$species))) |> unlist()
0:Aralisti_df <- data.frame(
0:Year = names(Aralisti_fjoldi_teg),
0:Qnt = as.integer(Aralisti_fjoldi_teg)
0:)
0:Aralisti_df <- data.frame(
0:Year = names(Aralisti_fjoldi_teg),
0:FjoldiTeg = as.integer(Aralisti_fjoldi_teg)
0:)
0:ddply(dflong_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
0:sums_row
0:Aralisti_df
0:Aralisti_df %>%
0:mutate(Type = "FjoldiTeg",  # Add a Type column with all values as "FjoldiTeg"
0:Mean = FjoldiTeg) %>%
0:select(Type, Year, Mean)
0:Aralisti_df <- data.frame(
0:Year = names(Aralisti_fjoldi_teg),
0:FjoldiTeg = as.integer(Aralisti_fjoldi_teg)
0:) %>%
0:mutate(Type = "FjoldiTeg",  # Add a Type column with all values as "FjoldiTeg"
0:Mean = FjoldiTeg) %>%
0:select(Type, Year, Mean)
0:Aralisti_df
0:dflong_Engin_NA
0:df <- dflong_Engin_NA |>
0:ddply(.(Type,Year,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
0:ddply(.(Type,Year),summarize,Mean=mean(Summa, na.rm=TRUE))
0:df
0:df_summary <- df |>
0:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
0:sums_row <- df_summary %>%
0:mutate(Type = "Heildarþekja") |>
0:select(Type, Year, Mean)
0:df_summary
0:sums_row
0:sums_row <- df_summary %>%
0:mutate(Type = "Heildarþekja") |>
0:select(Type, Year, Mean)
0:combined_df <- bind_rows(sums_row, Aralisti_adjusted)
0:df_with_heildarþekja <- bind_rows(df, combined_df)
0:combined_df <- bind_rows(sums_row, Aralisti_adjusted)
0:combined_df <- bind_rows(sums_row, Aralisti_df)
0:df_with_heildarþekja <- bind_rows(df, combined_df)
0:df_with_heildarþekja
0:df_wider <- df_with_heildarþekja |>
0:pivot_wider(
0:names_from = Year,  # Use Year as column names
0:values_from = Mean  # Use Mean as the values in the table
0:)
0:df_wider
0:df_with_heildarþekja%>%
0:ggplot(aes(x = Type, y = Mean)) +
0:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =1,position="dodge")  +
0:xlab("") + ylab("") + labs(fill = "", title = "Hei", caption = "Meðalþekja mosa, blað- og runnfléttna auk meðalheildarþekju og meðaltegundafjölda í öllum föstum reitum sem metnir hafa verið síðan 1976 (alls x reitir") +
0:theme_minimal() +
0:scale_fill_brewer(palette = "Set1") +
0:scale_y_continuous(labels = scales::label_dollar(prefix = "", suffix = " \n%"))
0:df_with_heildarþekja%>%
0:ggplot(aes(x = Type, y = Mean)) +
0:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6,position="dodge")  +
0:xlab("") + ylab("") + labs(fill = "", title = "Hei", caption = "Meðalþekja mosa, blað- og runnfléttna auk meðalheildarþekju og meðaltegundafjölda í öllum föstum reitum sem metnir hafa verið síðan 1976 (alls x reitir") +
0:theme_minimal() +
0:scale_fill_brewer(palette = "Set1") +
0:scale_y_continuous(labels = scales::label_dollar(prefix = "", suffix = " \n%"))
0:p1 <- df_with_heildarþekja%>%
0:ggplot(aes(x = Type, y = Mean)) +
0:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6,position="dodge")  +
0:xlab("") + ylab("") + labs(fill = "", title = "Hei", caption = "Meðalþekja mosa, blað- og runnfléttna auk meðalheildarþekju og meðaltegundafjölda í öllum föstum reitum sem metnir hafa verið síðan 1976 (alls x reitir") +
0:theme_minimal() +
0:scale_fill_brewer(palette = "Set1") +
0:scale_y_continuous(labels = scales::label_dollar(prefix = "", suffix = " \n%"))
0:str(p1)
0:str(df_with_heildarþekja)
0:unique(df_with_heildarþekja$Type)
0:# Ensure Type is ordered as desired
0:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "FjoldiTeg"))
0:# Plot
0:ggplot(df_with_heildarþekja, aes(x = Type, y = Mean)) +
0:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
0:scale_fill_brewer(palette = "Set1") +
0:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
0:# Example secondary axis (e.g., double the Mean for illustration)
0:sec.axis = sec_axis(~ . * 2, name = "Secondary Axis")) +
0:labs(title = "Hei",
0:caption = "Meðalþekja mosa, blað- og runnfléttna auk meðalheildarþekju og meðaltegundafjölda í öllum föstum reitum sem metnir hafa verið síðan 1976 (alls x reitir)",
0:y = "Primary Axis", x = "") +
0:theme_minimal()
0:str(Aralisti)
0:library(ggplot2)
0:library(scales)
0:# Assuming df_with_heildarþekja is your dataset
0:# First, you might need to normalize your 'Mean' values for 'FjoldiTeg' to make them comparable with percentages
0:# This example assumes 'Mean' for 'FjoldiTeg' is already appropriately scaled or transformed
0:# Plot with faceting
0:ggplot(df_with_heildarþekja, aes(x = Year, y = Mean, fill = Type)) +
0:geom_bar(stat = "identity", position = position_dodge(), color = "black", linewidth = 0.6) +
0:facet_wrap(~Type, scales = "free_y") +  # Separate panels for each Type with independent y-axes
0:scale_fill_brewer(palette = "Set1") +
0:labs(title = "Title Here",
0:caption = "Caption Here",
0:x = "",
0:y = "") +
0:theme_minimal() +
0:scale_y_continuous(labels = label_percent(suffix = "%"))  # Assuming non-'FjoldiTeg' Types are percentages
0:# Assuming you've transformed 'FjoldiTeg' values or decided on an illustrative secondary axis
0:ggplot(df_with_heildarþekja, aes(x = Type, y = Mean)) +
0:geom_bar(aes(fill = Year), stat = "identity", position = position_dodge(), color = "black", linewidth = 0.6) +
0:scale_fill_brewer(palette = "Set1") +
0:scale_y_continuous(name = "Percentage",
0:labels = label_percent(suffix = "%"),
0:sec.axis = sec_axis(~., name = "Counts")) +  # For illustration only
0:labs(title = "Title Here",
0:caption = "Caption: 'FjoldiTeg' represents counts. Other values are percentages.",
0:x = "",
0:y = "") +
0:theme_minimal()
0:Aralisti_fjoldi_teg <- lapply(Aralisti, function(x) length(unique(x$species))/length(unique(x$Reitur))) |> unlist()
0:Aralisti_df <- data.frame(
0:Year = names(Aralisti_fjoldi_teg),
0:FjoldiTeg = as.integer(Aralisti_fjoldi_teg)
0:) %>%
0:mutate(Type = "FjoldiTeg",  # Add a Type column with all values as "FjoldiTeg"
0:Mean = FjoldiTeg) %>%
0:select(Type, Year, Mean)
0:Aralisti_df
0:Aralisti
0:lapply(Aralisti, function(x) length(unique(x$species))/length(unique(x$Reitur)))
0:lapply(Aralisti, function(x) length(unique(x$species)))
0:lapply(Aralisti, function(x) length(unique(x$Reitur)))
0:str(dflong_Engin_NA)
0:species_counts <- dflong_Engin_NA %>%
0:group_by(Reitur, Year) %>%
0:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
0:species_counts
0:library(dplyr)
0:species_counts <- dflong_Engin_NA %>%
0:group_by(Reitur, Year) %>%
0:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
0:species_counts
0:# Calculate the mean number of species for every Reitur across Years
0:mean_species_per_reitur <- species_counts %>%
0:group_by(Reitur) %>%
0:summarise(MeanSpeciesCount = mean(SpeciesCount))
0:mean_species_per_reitur
0:species_counts
0:# Calculate the mean number of species for every Reitur across Years
0:mean_species_per_reitur <- species_counts %>%
0:group_by(Reitur, Year) %>%
0:summarise(MeanSpeciesCount = mean(SpeciesCount))
0:mean_species_per_reitur
0:# Calculate the mean number of species for every Reitur across Years
0:mean_species_per_reitur <- species_counts %>%
0:group_by(Year) %>%
0:summarise(MeanSpeciesCount = mean(SpeciesCount))
0:mean_species_per_reitur
0:# Calculate the mean number of species for every Reitur across Years
0:mean_species_per_year <- species_counts %>%
0:group_by(Year) %>%
0:summarise(MeanSpeciesCount = mean(SpeciesCount))
0:species_counts
0:df_summary
0:mean_species_per_year
0:# Calculate the mean number of species for every Reitur across Years
0:mean_species_per_year <- species_counts %>%
0:group_by(Year) %>%
0:summarise(Mean = mean(SpeciesCount))
0:df
0:df_summary
0:combined_df <- bind_rows(sums_row, mean_species_per_year)
0:combined_df
0:# Calculate the mean number of species for every Reitur across Years
0:mean_species_per_year <- species_counts %>%
0:group_by(Year) %>%
0:summarise(Mean = mean(SpeciesCount)) |>
0:mutate(Type = "Tegundafjöldi")
0:combined_df <- bind_rows(sums_row, mean_species_per_year)
0:combined_df
0:df_with_heildarþekja <- bind_rows(df, combined_df)
0:p1 <- df_with_heildarþekja%>%
0:ggplot(aes(x = Type, y = Mean)) +
0:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6,position="dodge")  +
0:xlab("") + ylab("") + labs(fill = "", title = "Hei", caption = "Meðalþekja mosa, blað- og runnfléttna auk meðalheildarþekju og meðaltegundafjölda í öllum föstum reitum sem metnir hafa verið síðan 1976 (alls x reitir") +
0:theme_minimal() +
0:scale_fill_brewer(palette = "Set1") +
0:scale_y_continuous(labels = scales::label_dollar(prefix = "", suffix = " \n%"))
0:library(ggplot2)
0:p1 <- df_with_heildarþekja%>%
0:ggplot(aes(x = Type, y = Mean)) +
0:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6,position="dodge")  +
0:xlab("") + ylab("") + labs(fill = "", title = "Hei", caption = "Meðalþekja mosa, blað- og runnfléttna auk meðalheildarþekju og meðaltegundafjölda í öllum föstum reitum sem metnir hafa verið síðan 1976 (alls x reitir") +
0:theme_minimal() +
0:scale_fill_brewer(palette = "Set1") +
0:scale_y_continuous(labels = scales::label_dollar(prefix = "", suffix = " \n%"))
0:p1
0:library(scales)
0:# Ensure Type is ordered as desired
0:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "FjoldiTeg"))
0:# Plot
0:ggplot(df_with_heildarþekja, aes(x = Type, y = Mean)) +
0:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
0:scale_fill_brewer(palette = "Set1") +
0:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
0:# Example secondary axis (e.g., double the Mean for illustration)
0:sec.axis = sec_axis(~ . * 2, name = "Secondary Axis")) +
0:labs(title = "Hei",
0:caption = "Meðalþekja mosa, blað- og runnfléttna auk meðalheildarþekju og meðaltegundafjölda í öllum föstum reitum sem metnir hafa verið síðan 1976 (alls x reitir)",
0:y = "Primary Axis", x = "") +
0:theme_minimal()
0:?sec_axis
0:p <- ggplot(mtcars, aes(cyl, mpg)) +
0:geom_point()
0:sec_axis
0:p <- ggplot(mtcars, aes(cyl, mpg)) +
0:geom_point()
0:p
0:p + scale_y_continuous(sec.axis = sec_axis(~ . + 10))
0:# Plot
0:ggplot(df_with_heildarþekja, aes(x = Type, y = Mean)) +
0:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
0:scale_fill_brewer(palette = "Set1") +
0:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
0:# Example secondary axis (e.g., double the Mean for illustration)
0:sec.axis = sec_axis(~ . , name = "Secondary Axis")) +
0:labs(title = "Hei",
0:caption = "Meðalþekja mosa, blað- og runnfléttna auk meðalheildarþekju og meðaltegundafjölda í öllum föstum reitum sem metnir hafa verið síðan 1976 (alls x reitir)",
0:y = "Primary Axis", x = "") +
0:theme_minimal()
0:str(df_with_heildarþekja)
0:table(df_with_heildarþekja$Type)
0:# Plot
0:ggplot(df_with_heildarþekja, aes(x = Type, y = Mean)) +
0:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
0:scale_fill_brewer(palette = "Set1") +
0:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
0:# Example secondary axis (e.g., double the Mean for illustration)
0:sec.axis = sec_axis("FjoldiTeg" . , name = "Secondary Axis")) +
0:# Plot
0:ggplot(df_with_heildarþekja, aes(x = Type, y = Mean)) +
0:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
0:scale_fill_brewer(palette = "Set1") +
0:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
0:# Example secondary axis (e.g., double the Mean for illustration)
0:sec.axis = sec_axis(~ . +20, name = "Secondary Axis")) +
0:labs(title = "Hei",
0:caption = "Meðalþekja mosa, blað- og runnfléttna auk meðalheildarþekju og meðaltegundafjölda í öllum föstum reitum sem metnir hafa verið síðan 1976 (alls x reitir)",
0:y = "Primary Axis", x = "") +
0:theme_minimal()
0:df_with_heildarþekja%>%
0:ggplot(aes(x = Type, y = Mean)) +
0:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6,position="dodge")  +
0:xlab("") + ylab("") + labs(fill = "", title = "Hei", caption = "Meðalþekja mosa, blað- og runnfléttna auk meðalheildarþekju og meðaltegundafjölda í öllum föstum reitum sem metnir hafa verið síðan 1976 (alls x reitir") +
0:theme_minimal() +
0:scale_fill_brewer(palette = "Set1") +
0:scale_y_continuous(labels = scales::label_dollar(prefix = "", suffix = " \n%"))
0:combined_df
0:df_with_heildarþekja <- bind_rows(df, combined_df)
0:df_with_heildarþekja%>%
0:ggplot(aes(x = Type, y = Mean)) +
0:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6,position="dodge")  +
0:xlab("") + ylab("") + labs(fill = "", title = "Hei", caption = "Meðalþekja mosa, blað- og runnfléttna auk meðalheildarþekju og meðaltegundafjölda í öllum föstum reitum sem metnir hafa verið síðan 1976 (alls x reitir") +
0:theme_minimal() +
0:scale_fill_brewer(palette = "Set1") +
0:scale_y_continuous(labels = scales::label_dollar(prefix = "", suffix = " \n%"))
0:# Ensure Type is ordered as desired
0:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
0:# Plot
0:ggplot(df_with_heildarþekja, aes(x = Type, y = Mean)) +
0:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
0:scale_fill_brewer(palette = "Set1") +
0:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
0:# Example secondary axis (e.g., double the Mean for illustration)
0:sec.axis = sec_axis(~ . , name = "Secondary Axis")) +
0:labs(title = "Hei",
0:caption = "Meðalþekja mosa, blað- og runnfléttna auk meðalheildarþekju og meðaltegundafjölda í öllum föstum reitum sem metnir hafa verið síðan 1976 (alls x reitir)",
0:y = "Primary Axis", x = "") +
0:theme_minimal()
0:# Plot
0:ggplot(df_with_heildarþekja, aes(x = Type, y = Mean)) +
0:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
0:scale_fill_brewer(palette = "Set1") +
0:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
0:# Example secondary axis (e.g., double the Mean for illustration)
0:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
0:labs(title = "",
0:caption = "Meðalþekja mosa, blað- og runnfléttna auk meðalheildarþekju og meðaltegundafjölda í öllum föstum reitum sem metnir hafa verið síðan 1976 (alls x reitir)",
0:y = "Meðalþekja", x = "") +
0:theme_minimal()
0:# Plot
0:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean)) +
0:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
0:scale_fill_brewer(palette = "Set1") +
0:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
0:# Example secondary axis (e.g., double the Mean for illustration)
0:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
0:labs(title = "",
0:caption = "Meðalþekja mosa, blað- og runnfléttna auk meðalheildarþekju og meðaltegundafjölda í öllum föstum reitum sem metnir hafa verið síðan 1976 (alls x reitir)",
0:y = "Meðalþekja", x = "") +
0:theme_minimal()
0:ggsave("mynd4.png", plot = my_plot, width = 11.7, height = 8.3, dpi = 300, units = "in")
0:data <- read.csv("gogn/hreinsad.csv", check.names = F)
0:unique(data$Type)
0:data |> filter(species %in% "Ber klöpp")
0:FogS <- FogS <- read.csv("gogn/Reitir_myndir_lykill.csv", encoding = "latin1")
0:KM <- read.csv("gogn/coverkm.csv", check.names = F)
0:data <- read.csv("gogn/hreinsad.csv", check.names = F)
0:joined_data <- data %>%
0:left_join(KM, by = "Reitur") %>%
0:select(species, Type, Reitur, km, everything())
0:library(tidyverse)
0:FogS <- FogS <- read.csv("gogn/Reitir_myndir_lykill.csv", encoding = "latin1")
0:KM <- read.csv("gogn/coverkm.csv", check.names = F)
0:data <- read.csv("gogn/hreinsad.csv", check.names = F)
0:joined_data <- data %>%
0:left_join(KM, by = "Reitur") %>%
0:select(species, Type, Reitur, km, everything())
0:KM
0:tibble(KM)
0:joined_data <- data %>%
0:left_join(KM, by = "Reitur") %>%
0:select(species, Type, Reitur, km, everything())
0:data[49,]
0:tibble(data)
0:?left_join
0:joined_data <- data %>%
0:left_join(KM, by = "Reitur") %>%
0:select(species, Type, Reitur, km, everything())
0:FogS <- FogS <- read.csv("gogn/Reitir_myndir_lykill.csv", encoding = "latin1")
0:FogS <- FogS <- read.csv("gogn/Reitir_myndir_lykill.csv", encoding = "latin1")
0:KM <- read.csv("gogn/coverkm.csv", check.names = F)
0:FogS <- FogS <- read.csv("gogn/Reitir_myndir_lykill.csv", encoding = "latin1")
0:KM <- read.csv("gogn/coverkm.csv", check.names = F)
0:data <- read.csv("gogn/hreinsad.csv", check.names = F)
0:joined_data <- data %>%
0:left_join(KM, by = "Reitur") %>%
0:select(species, Type, Reitur, km, everything())
0:library(tidyverse)
0:joined_data <- data %>%
0:left_join(KM, by = "Reitur") %>%
0:select(species, Type, Reitur, km, everything())
1707216103293:library(tidyverse)
1707216149078:FogS <- FogS <- read.csv("gogn/Reitir_myndir_lykill.csv", encoding = "latin1")
1707216149856:KM <- read.csv("gogn/coverkm.csv", check.names = F)
1707216150337:data <- read.csv("gogn/hreinsad.csv", check.names = F)
1707216153689:joined_data <- data %>%
1707216153706:left_join(KM, by = "Reitur") %>%
1707216153722:select(species, Type, Reitur, km, everything())
1707216175141:data$species
1707216180533:claxx(data$species)
1707216183963:class(data$species)
1707216188981:class(KM$species)
1707216230885:joined_data <- data %>%
1707216230902:left_join(KM, by = "Reitur") %>%
1707216230918:select(species, Type, Reitur, km, everything())
1707216235364:rlang::last_error()
1707216240598:rlang::last_trace()
1707217627298:# Step 1: Perform the join
1707217627319:joined_data <- left_join(data, KM, by = "Reitur")
1707217627351:# Check column names here
1707217627371:print(colnames(joined_data))
1707217627408:# Step 2: If 'species' is present, proceed to select
1707217627430:if("species" %in% colnames(joined_data)) {
1707217627450:joined_data <- select(joined_data, species, Type, Reitur, km, everything())
1707217627469:} else {
1707217627488:print("Column 'species' not found after join.")
1707217627509:}
1707218439558:FogS$Fluor <- ifelse(is.na(FogS$Fluor)==TRUE,0,1)
1707218440036:FogS$Brennisteinn <- ifelse(is.na(FogS$Brennisteinn)==TRUE,0,1)
1707218571006:joined_data <- data %>%
1707218571024:left_join(KM, by = c("Reitur", "Type", "species")) %>%
1707218571039:select(species, Type, Reitur, km, everything())
1707218689961:identical(joined_data$`2020.x`,joined_data$`2020.y`)
1707218713121:joined_data <- data %>%
1707218713141:left_join(KM, by = c("Reitur", "Type", "species","2020")) %>%
1707218713153:select(species, Type, Reitur, km, everything())
1707218740424:joined_data <- data %>%
1707218740446:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) %>%
1707218740462:select(species, Type, Reitur, km, everything())
1707218917215:jd <- joined_data %>%
1707218917235:left_join(FogS, by = c("Reitur","Stadur","Mynd")) %>%
1707218917250:select(species, Type, Reitur, km, Fluor, Brennisteinn, everything())
1707218953427:joined_data <- data %>%
1707218953441:left_join(KM, by = c("Reitur", "Type", "species","2020","2023"))
1707218969621:joined_data <- data %>%
1707218969643:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) %>%
1707218969660:select(species, Type, Reitur, km, everything())
1707218979145:jd <- joined_data %>%
1707218979162:left_join(FogS, by = c("Reitur","Stadur","Mynd")) %>%
1707218979178:select(species, Type, Reitur, km, Fluor, Brennisteinn, everything())
1707218990923:jd <- joined_data %>%
1707218990940:left_join(FogS, by = c("Reitur","Stadur","Mynd"))
1707219072613:KM <- read.csv("gogn/coverkm.csv", check.names = F)
1707219073046:data <- read.csv("gogn/hreinsad.csv", check.names = F)
1707219075076:joined_data <- data %>%
1707219075097:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) %>%
1707219075119:select(species, Type, Reitur, km, everything())
1707219094266:KM <- read.csv("gogn/coverkm.csv", check.names = F)
1707219094296:data <- read.csv("gogn/hreinsad.csv", check.names = F)
1707219094342:joined_data <- data %>%
1707219094358:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) %>%
1707219094374:select(species, Type, Reitur, km, everything())
1707219408461:jd_long <- joined_data |>
1707219408479:select(-c(`1999`)) |>
1707219408496:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28", "R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62")) |>
1707219408510:mutate(Type = if_else(species == "Ber klöpp", "Ber klöpp", Type))
1707219474085:unique(joined_data$Stadur)
1707219504217:joined_data[is.na(joined_data$Stadur),]
1707219642103:jd_long[is.na(jd_long$Stadur),]
1707219839987:joined_data <- data %>%
1707219840007:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) %>%
1707219840029:select(species, Type, Reitur, km, everything()) |>
1707219840052:select(-c(`1999`)) |>
1707219840071:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28", "R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62")) |>
1707219840092:mutate(Type = if_else(species == "Ber klöpp", "Ber klöpp", Type))
1707219863416:order(c(`2020`, `2023`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`))
1707219872246:c(`2020`, `2023`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`)
1707219892129:unique(joined_data$Stadur)
1707220014379:for (i in unique(joined_data$Stadur)[1]) {
1707220014428:jd_long <- joined_data |>
1707220014442:filter(Stadur %in% i) |>
1707220014459:pivot_longer(cols = c(`2020`, `2023`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`),
1707220014476:names_to = "Year",
1707220014493:values_to = "Coverage")
1707220014508:jd_long_Engin_NA <- dflong[!is.na(dflong$Coverage),]
1707220014547:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707220014562:pkg <- "package:plyr"
1707220014578:detach(pkg, character.only = TRUE)
1707220014604:species_counts <- jd_long_Engin_NA %>%
1707220014619:group_by(Reitur, Year, Stadur) %>%
1707220014635:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707220014658:# Meðalfjöldi tegunda í reit á ári
1707220014673:mean_species_per_year <- species_counts %>%
1707220014688:group_by(Year, Stadur) %>%
1707220014704:summarise(Mean = mean(SpeciesCount)) |>
1707220014717:mutate(Type = "Tegundafjöldi")
1707220014744:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707220014760:library(plyr)
1707220014775:df <- jd_long_Engin_NA |>
1707220014791:ddply(.(Type,Year,Stadur,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707220014807:ddply(.(Type,Year,Stadur),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707220014836:#Leggja saman heildarþekju allra reita innan ára
1707220014853:df_summary <- df |>
1707220014869:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707220014883:sums_row <- df_summary %>%
1707220014900:mutate(Type = "Heildarþekja") |>
1707220014916:select(Type, Year, Mean)
1707220014942:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707220014970:df_with_heildarþekja <- bind_rows(df, combined_df)
1707220015007:library(scales)
1707220015034:# Ensure Type is ordered as desired
1707220015049:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707220015076:# Plot
1707220015094:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean)) +
1707220015115:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707220015135:scale_fill_brewer(palette = "Set1") +
1707220015151:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707220015170:# Example secondary axis (e.g., double the Mean for illustration)
1707220015190:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707220015209:labs(title = "",
1707220015227:caption = "Meðalþekja mosa, blað- og runnfléttna auk meðalheildarþekju og meðaltegundafjölda í öllum föstum reitum sem metnir hafa verið síðan 1976 (alls x reitir)",
1707220015242:y = "Meðalþekja", x = "") +
1707220015258:theme_minimal()
1707220015284:}
1707220022006:i
1707220036156:joined_data |>
1707220036177:filter(Stadur %in% i)
1707220052196:for (i in unique(joined_data$Stadur)[1]) {
1707220052235:jd_long <- joined_data |>
1707220052251:filter(Stadur %in% i) |>
1707220052268:pivot_longer(cols = c(`2020`, `2023`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`),
1707220052286:names_to = "Year",
1707220052300:values_to = "Coverage")
1707220052317:jd_long_Engin_NA <- jd_long[!is.na(dflong$Coverage),]
1707220052354:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707220052370:pkg <- "package:plyr"
1707220052388:detach(pkg, character.only = TRUE)
1707220052416:species_counts <- jd_long_Engin_NA %>%
1707220052431:group_by(Reitur, Year, Stadur) %>%
1707220052449:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707220052477:# Meðalfjöldi tegunda í reit á ári
1707220052495:mean_species_per_year <- species_counts %>%
1707220052510:group_by(Year, Stadur) %>%
1707220052527:summarise(Mean = mean(SpeciesCount)) |>
1707220052543:mutate(Type = "Tegundafjöldi")
1707220052572:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707220052589:library(plyr)
1707220052608:df <- jd_long_Engin_NA |>
1707220052623:ddply(.(Type,Year,Stadur,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707220052639:ddply(.(Type,Year,Stadur),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707220052669:#Leggja saman heildarþekju allra reita innan ára
1707220052685:df_summary <- df |>
1707220052702:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707220052717:sums_row <- df_summary %>%
1707220052735:mutate(Type = "Heildarþekja") |>
1707220052751:select(Type, Year, Mean)
1707220052776:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707220052804:df_with_heildarþekja <- bind_rows(df, combined_df)
1707220052842:library(scales)
1707220052867:# Ensure Type is ordered as desired
1707220052882:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707220052909:# Plot
1707220052931:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean)) +
1707220052947:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707220052964:scale_fill_brewer(palette = "Set1") +
1707220052980:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707220052996:# Example secondary axis (e.g., double the Mean for illustration)
1707220053012:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707220053029:labs(title = "",
1707220053043:caption = "Meðalþekja mosa, blað- og runnfléttna auk meðalheildarþekju og meðaltegundafjölda í öllum föstum reitum sem metnir hafa verið síðan 1976 (alls x reitir)",
1707220053062:y = "Meðalþekja", x = "") +
1707220053079:theme_minimal()
1707220053105:}
1707220083619:jd_long <- joined_data |>
1707220083636:filter(Stadur %in% i) |>
1707220083653:pivot_longer(cols = c(`2020`, `2023`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`),
1707220083670:names_to = "Year",
1707220083685:values_to = "Coverage")
1707220105323:for (i in unique(joined_data$Stadur)[1]) {
1707220105364:jd_long <- joined_data |>
1707220105380:filter(Stadur %in% i) |>
1707220105397:pivot_longer(cols = c(`2020`, `2023`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`),
1707220105414:names_to = "Year",
1707220105430:values_to = "Coverage")
1707220105445:jd_long_Engin_NA <- jd_long[!is.na(jd_long$Coverage),]
1707220105482:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707220105498:pkg <- "package:plyr"
1707220105515:detach(pkg, character.only = TRUE)
1707220105543:species_counts <- jd_long_Engin_NA %>%
1707220105560:group_by(Reitur, Year, Stadur) %>%
1707220105576:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707220105603:# Meðalfjöldi tegunda í reit á ári
1707220105618:mean_species_per_year <- species_counts %>%
1707220105633:group_by(Year, Stadur) %>%
1707220105649:summarise(Mean = mean(SpeciesCount)) |>
1707220105666:mutate(Type = "Tegundafjöldi")
1707220105691:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707220105708:library(plyr)
1707220105722:df <- jd_long_Engin_NA |>
1707220105738:ddply(.(Type,Year,Stadur,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707220105752:ddply(.(Type,Year,Stadur),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707220105774:#Leggja saman heildarþekju allra reita innan ára
1707220105785:df_summary <- df |>
1707220105797:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707220105808:sums_row <- df_summary %>%
1707220105820:mutate(Type = "Heildarþekja") |>
1707220105831:select(Type, Year, Mean)
1707220105856:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707220105884:df_with_heildarþekja <- bind_rows(df, combined_df)
1707220105923:library(scales)
1707220105949:# Ensure Type is ordered as desired
1707220105966:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707220105995:# Plot
1707220106011:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean)) +
1707220106029:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707220106044:scale_fill_brewer(palette = "Set1") +
1707220106061:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707220106078:# Example secondary axis (e.g., double the Mean for illustration)
1707220106096:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707220106112:labs(title = "",
1707220106127:caption = "Meðalþekja mosa, blað- og runnfléttna auk meðalheildarþekju og meðaltegundafjölda í öllum föstum reitum sem metnir hafa verið síðan 1976 (alls x reitir)",
1707220106144:y = "Meðalþekja", x = "") +
1707220106159:theme_minimal()
1707220106192:}
1707220131212:for (i in unique(joined_data$Stadur)[1]) {
1707220131259:jd_long <- joined_data |>
1707220131275:filter(Stadur %in% i) |>
1707220131292:pivot_longer(cols = c(`2020`, `2023`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`),
1707220131307:names_to = "Year",
1707220131322:values_to = "Coverage")
1707220131340:jd_long_Engin_NA <- jd_long[!is.na(jd_long$Coverage),]
1707220131376:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707220131391:# pkg <- "package:plyr"
1707220131407:# detach(pkg, character.only = TRUE)
1707220131431:species_counts <- jd_long_Engin_NA %>%
1707220131446:group_by(Reitur, Year, Stadur) %>%
1707220131459:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707220131485:# Meðalfjöldi tegunda í reit á ári
1707220131501:mean_species_per_year <- species_counts %>%
1707220131518:group_by(Year, Stadur) %>%
1707220131532:summarise(Mean = mean(SpeciesCount)) |>
1707220131548:mutate(Type = "Tegundafjöldi")
1707220131571:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707220131585:library(plyr)
1707220131602:df <- jd_long_Engin_NA |>
1707220131616:ddply(.(Type,Year,Stadur,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707220131631:ddply(.(Type,Year,Stadur),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707220131660:#Leggja saman heildarþekju allra reita innan ára
1707220131674:df_summary <- df |>
1707220131689:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707220131703:sums_row <- df_summary %>%
1707220131723:mutate(Type = "Heildarþekja") |>
1707220131737:select(Type, Year, Mean)
1707220131762:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707220131787:df_with_heildarþekja <- bind_rows(df, combined_df)
1707220131822:library(scales)
1707220131851:# Ensure Type is ordered as desired
1707220131866:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707220131892:# Plot
1707220131905:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean)) +
1707220131920:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707220131935:scale_fill_brewer(palette = "Set1") +
1707220131950:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707220131964:# Example secondary axis (e.g., double the Mean for illustration)
1707220131978:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707220131993:labs(title = "",
1707220132010:caption = "Meðalþekja mosa, blað- og runnfléttna auk meðalheildarþekju og meðaltegundafjölda í öllum föstum reitum sem metnir hafa verið síðan 1976 (alls x reitir)",
1707220132025:y = "Meðalþekja", x = "") +
1707220132038:theme_minimal()
1707220132067:}
1707220140086:p1
1707220205284:joined_data[joined_data$Stadur=="Stekkjarás",]
1707220211913:joined_data$Reitur[joined_data$Stadur=="Stekkjarás"]
1707220220125:unique(joined_data[joined_data$Stadur=="Stekkjarás",])
1707220234257:unique(joined_data$Reitur[joined_data$Stadur=="Stekkjarás",])
1707220237046:unique(joined_data$Reitur[joined_data$Stadur=="Stekkjarás"])
1707220435881:jd_long <- joined_data |>
1707220435900:filter(Stadur %in% i) |>
1707220435917:pivot_longer(cols = c(`2020`, `2023`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`),
1707220435934:names_to = "Year",
1707220435949:values_to = "Coverage")
1707220436996:jd_long_Engin_NA <- jd_long[!is.na(jd_long$Coverage),]
1707220441993:jd_long_Engin_NA
1707220457014:species_counts <- jd_long_Engin_NA %>%
1707220457032:group_by(Reitur, Year, Stadur) %>%
1707220457048:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707220471058:species_counts
1707220492570:jd_long_Engin_NA %>%
1707220492589:group_by(Reitur, Year, Stadur) %>%
1707220492603:summarise(SpeciesCount = n_distinct(species))
1707220500096:# Meðalfjöldi tegunda í reit á ári
1707220500117:mean_species_per_year <- species_counts %>%
1707220500139:group_by(Year, Stadur) %>%
1707220500156:summarise(Mean = mean(SpeciesCount)) |>
1707220500175:mutate(Type = "Tegundafjöldi")
1707220519594:environment()
1707220543668:pkg <- "package:plyr"
1707220548205:detach(pkg, character.only = TRUE)
1707220551495:# Meðalfjöldi tegunda í reit á ári
1707220551513:mean_species_per_year <- species_counts %>%
1707220551533:group_by(Year, Stadur) %>%
1707220551552:summarise(Mean = mean(SpeciesCount)) |>
1707220551570:mutate(Type = "Tegundafjöldi")
1707220561213:jd_long_Engin_NA
1707220570004:jd_long_Engin_NA %>%
1707220570023:group_by(Reitur, Year, Stadur)
1707220588939:jd_long_Engin_NA %>%
1707220588960:group_by(Reitur, Year)
1707220613767:jd_long_Engin_NA %>%
1707220613780:group_by(Reitur, Year) %>%
1707220613792:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707220746377:if ("package:plyr" %in% search()) {
1707220746394:# Detach 'plyr' if it is loaded
1707220746410:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707220746424:}
1707220762378:search()
1707220814157:species_counts <- jd_long_Engin_NA %>%
1707220814175:group_by(Reitur, Year) %>%
1707220814192:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707220817606:# Meðalfjöldi tegunda í reit á ári
1707220817626:mean_species_per_year <- species_counts %>%
1707220817644:group_by(Year) %>%
1707220817662:summarise(Mean = mean(SpeciesCount)) |>
1707220817676:mutate(Type = "Tegundafjöldi")
1707220820902:mean_species_per_year
1707220829568:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707220829589:library(plyr)
1707220835111:df <- jd_long_Engin_NA |>
1707220835133:ddply(.(Type,Year,Stadur,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707220835155:ddply(.(Type,Year,Stadur),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707220837734:#Leggja saman heildarþekju allra reita innan ára
1707220837756:df_summary <- df |>
1707220837775:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707220838343:sums_row <- df_summary %>%
1707220838365:mutate(Type = "Heildarþekja") |>
1707220838379:select(Type, Year, Mean)
1707220839117:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707220839559:df_with_heildarþekja <- bind_rows(df, combined_df)
1707220840543:library(scales)
1707220841186:# Ensure Type is ordered as desired
1707220841208:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707220841927:# Plot
1707220841945:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean)) +
1707220841962:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707220841978:scale_fill_brewer(palette = "Set1") +
1707220841993:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707220842009:# Example secondary axis (e.g., double the Mean for illustration)
1707220842025:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707220842042:labs(title = "",
1707220842060:caption = "Meðalþekja mosa, blað- og runnfléttna auk meðalheildarþekju og meðaltegundafjölda í öllum föstum reitum sem metnir hafa verið síðan 1976 (alls x reitir)",
1707220842076:y = "Meðalþekja", x = "") +
1707220842093:theme_minimal()
1707220844753:p1
1707225026393:unique(joined_data$Reitur[joined_data$Stadur=="Stekkjarás"])
1707225209043:ggplot(df_with_heildarþekja, aes(x = Type, y = Mean)) +
1707225209063:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707225209079:scale_fill_brewer(palette = "Set1") +
1707225209099:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707225209116:# Example secondary axis (e.g., double the Mean for illustration)
1707225209131:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707225209147:labs(title = "",
1707225209165:caption = "Meðalþekja mosa, blað- og runnfléttna auk meðalheildarþekju og meðaltegundafjölda í öllum föstum reitum sem metnir hafa verið síðan 1976 (alls x reitir)",
1707225209181:y = "Meðalþekja", x = "") +
1707225209196:theme_minimal()+
1707225209212:theme(legend.title = element_blank())
1707225264965:df_with_heildarþekja
1707225319372:unique(joined_data$Type)
1707225436964:joined_data <- data %>%
1707225436981:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) %>%
1707225436997:select(species, Type, Reitur, km, everything()) |>
1707225437014:select(-c(`1999`)) |>
1707225437033:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28", "R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62")) |>
1707225437051:#mutate(Type = if_else(species == "Ber klöpp", "Ber klöpp", Type)) |>
1707225437067:filter(!species %in% "Ber klöpp")
1707225445098:for (i in unique(joined_data$Stadur)[1]) {
1707225445154:jd_long <- joined_data |>
1707225445174:filter(Stadur %in% i) |>
1707225445193:pivot_longer(cols = c(`2020`, `2023`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`),
1707225445210:names_to = "Year",
1707225445227:values_to = "Coverage")
1707225445244:jd_long_Engin_NA <- jd_long[!is.na(jd_long$Coverage),]
1707225445279:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707225445294:if ("package:plyr" %in% search()) {
1707225445311:# Detach 'plyr' if it is loaded
1707225445328:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707225445346:}
1707225445376:species_counts <- jd_long_Engin_NA %>%
1707225445390:group_by(Reitur, Year) %>%
1707225445404:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707225445429:# Meðalfjöldi tegunda í reit á ári
1707225445445:mean_species_per_year <- species_counts %>%
1707225445460:group_by(Year) %>%
1707225445474:summarise(Mean = mean(SpeciesCount)) |>
1707225445488:mutate(Type = "Tegundafjöldi")
1707225445514:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707225445528:library(plyr)
1707225445543:df <- jd_long_Engin_NA |>
1707225445559:ddply(.(Type,Year,Stadur,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707225445575:ddply(.(Type,Year,Stadur),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707225445605:#Leggja saman heildarþekju allra reita innan ára
1707225445622:df_summary <- df |>
1707225445638:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707225445655:sums_row <- df_summary %>%
1707225445671:mutate(Type = "Heildarþekja") |>
1707225445686:select(Type, Year, Mean)
1707225445715:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707225445741:df_with_heildarþekja <- bind_rows(df, combined_df)
1707225445780:library(scales)
1707225445809:# Ensure Type is ordered as desired
1707225445824:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707225445852:# Plot
1707225445870:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean)) +
1707225445886:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707225445902:scale_fill_brewer(palette = "Set1") +
1707225445920:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707225445936:# Example secondary axis (e.g., double the Mean for illustration)
1707225445952:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707225445969:labs(title = "",
1707225445984:caption = "Meðalþekja mosa, blað- og runnfléttna auk meðalheildarþekju og meðaltegundafjölda í öllum föstum reitum sem metnir hafa verið síðan 1976 (alls x reitir)",
1707225446001:y = "Meðalþekja", x = "") +
1707225446018:theme_minimal()+
1707225446034:theme(legend.title = element_blank())
1707225446061:}
1707225455113:p1
1707225521852:for (i in unique(joined_data$Stadur)[2]) {
1707225521900:jd_long <- joined_data |>
1707225521915:filter(Stadur %in% i) |>
1707225521933:pivot_longer(cols = c(`2020`, `2023`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`),
1707225521949:names_to = "Year",
1707225521965:values_to = "Coverage")
1707225521980:jd_long_Engin_NA <- jd_long[!is.na(jd_long$Coverage),]
1707225522014:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707225522031:if ("package:plyr" %in% search()) {
1707225522046:# Detach 'plyr' if it is loaded
1707225522061:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707225522075:}
1707225522098:species_counts <- jd_long_Engin_NA %>%
1707225522112:group_by(Reitur, Year) %>%
1707225522128:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707225522154:# Meðalfjöldi tegunda í reit á ári
1707225522169:mean_species_per_year <- species_counts %>%
1707225522185:group_by(Year) %>%
1707225522207:summarise(Mean = mean(SpeciesCount)) |>
1707225522221:mutate(Type = "Tegundafjöldi")
1707225522247:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707225522262:library(plyr)
1707225522275:df <- jd_long_Engin_NA |>
1707225522292:ddply(.(Type,Year,Stadur,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707225522307:ddply(.(Type,Year,Stadur),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707225522333:#Leggja saman heildarþekju allra reita innan ára
1707225522348:df_summary <- df |>
1707225522366:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707225522382:sums_row <- df_summary %>%
1707225522397:mutate(Type = "Heildarþekja") |>
1707225522413:select(Type, Year, Mean)
1707225522441:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707225522470:df_with_heildarþekja <- bind_rows(df, combined_df)
1707225522506:library(scales)
1707225522533:# Ensure Type is ordered as desired
1707225522548:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707225522576:# Plot
1707225522591:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean)) +
1707225522608:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707225522623:scale_fill_brewer(palette = "Set1") +
1707225522638:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707225522653:# Example secondary axis (e.g., double the Mean for illustration)
1707225522669:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707225522686:labs(title = "",
1707225522700:caption = "Meðalþekja mosa, blað- og runnfléttna auk meðalheildarþekju og meðaltegundafjölda í öllum föstum reitum sem metnir hafa verið síðan 1976 (alls x reitir)",
1707225522716:y = "Meðalþekja", x = "") +
1707225522732:theme_minimal()+
1707225522745:theme(legend.title = element_blank())
1707225522770:}
1707225527646:p1
1707225698091:ggplot(df_with_heildarþekja, aes(x = Type, y = Mean)) +
1707225698107:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707225698121:scale_fill_brewer(palette = "Set1") +
1707225698134:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707225698148:# Example secondary axis (e.g., double the Mean for illustration)
1707225698163:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707225698178:labs(title = "",
1707225698194:y = "Meðalþekja", x = "") +
1707225698207:theme_minimal()+
1707225698222:theme(legend.title = element_blank()) +
1707225698237:annotate("text", x = Inf, y = Inf, label = i, hjust = 1, vjust = 1, size = 5, angle = 0)
1707225740652:ggplot(df_with_heildarþekja, aes(x = Type, y = Mean)) +
1707225740670:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707225740686:scale_fill_brewer(palette = "Set1") +
1707225740700:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707225740716:# Example secondary axis (e.g., double the Mean for illustration)
1707225740732:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707225740749:labs(title = "",
1707225740764:y = "Meðalþekja", x = "") +
1707225740780:theme_minimal()+
1707225740796:theme(legend.title = element_blank()) +
1707225740812:annotate("text", x = 1, y = Inf, label = i, hjust = 1, vjust = 1, size = 5, angle = 0)
1707225826889:ggplot(df_with_heildarþekja, aes(x = Type, y = Mean)) +
1707225826908:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707225826923:scale_fill_brewer(palette = "Set1") +
1707225826938:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707225826953:# Example secondary axis (e.g., double the Mean for illustration)
1707225826969:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707225826983:labs(title = "",
1707225826999:y = "Meðalþekja", x = "") +
1707225827015:theme_minimal()+
1707225827030:theme(legend.title = element_blank(),
1707225827048:legend.position = "bottomleft") +
1707225827062:annotate("text", x = 1, y = Inf, label = i, hjust = 1, vjust = 1, size = 5, angle = 0)
1707225840702:?legend.position
1707225910954:ggplot(df_with_heildarþekja, aes(x = Type, y = Mean)) +
1707225910972:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707225910988:scale_fill_brewer(palette = "Set1") +
1707225911002:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707225911016:# Example secondary axis (e.g., double the Mean for illustration)
1707225911033:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707225911048:labs(title = "",
1707225911064:y = "Meðalþekja", x = "") +
1707225911080:theme_minimal()+
1707225911095:theme(legend.title = element_blank(),
1707225911110:legend.position = "bottomright") +
1707225911125:annotate("text", x = 1, y = Inf, label = i, hjust = 1, vjust = 1, size = 5, angle = 0)
1707226038302:unique(joined_data$Reitur)
1707226086917:ggplot(df_with_heildarþekja, aes(x = Type, y = Mean)) +
1707226086935:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707226086952:scale_fill_brewer(palette = "Set1") +
1707226086967:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707226086985:# Example secondary axis (e.g., double the Mean for illustration)
1707226087003:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707226087020:labs(title = "",
1707226087037:y = "Meðalþekja", x = "") +
1707226087053:theme_minimal()+
1707226087067:theme(legend.title = element_blank(),
1707226087083:legend.position = c(1, 0), # Try adjusting this for exact positioning
1707226087098:legend.justification = c(1, 0), # Anchors the legend at the bottom-right
1707226087112:legend.box.just = "right", # Justify the legend box at the right
1707226087130:legend.margin = margin(t = 0, r = 0, b = 0, l = 0, unit = "pt"), # Adjust legend margin
1707226087146:legend.box.margin = margin(t = 0, r = 0, b = 0, l = 0, unit = "pt")) +
1707226087161:annotate("text", x = 1, y = Inf, label = i, hjust = 1, vjust = 1, size = 5, angle = 0)
1707226113603:ggplot(df_with_heildarþekja, aes(x = Type, y = Mean)) +
1707226113622:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707226113639:scale_fill_brewer(palette = "Set1") +
1707226113656:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707226113674:# Example secondary axis (e.g., double the Mean for illustration)
1707226113689:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707226113704:labs(title = "",
1707226113723:y = "Meðalþekja", x = "") +
1707226113740:theme_minimal()+
1707226113755:theme(legend.title = element_blank()) +
1707226113773:annotate("text", x = 1, y = Inf, label = i, hjust = 1, vjust = 1, size = 5, angle = 0)
1707226154693:paste(unique(joined_data$Reitur),"png",sep = ".")
1707226659326:unique(joined_data$Reitur)
1707226738215:filename <- paste(paste(unique(joined_data$Reitur), collapse="_"), "png", sep=".")
1707226741934:filename
1707226849164:library(glue)
1707226849191:glue("{paste(unique(joined_data$Reitur), collapse='_')}.png")
1707226854694:library(glue)
1707226854712:glue(i"{paste(unique(joined_data$Reitur), collapse='_')}.png")
1707226861031:library(glue)
1707226861050:glue(i,"{paste(unique(joined_data$Reitur), collapse='_')}.png")
1707226880557:library(glue)
1707226880576:glue(i,-,"{paste(unique(joined_data$Reitur), collapse='_')}.png")
1707226888223:library(glue)
1707226888242:glue(i,"-","{paste(unique(joined_data$Reitur), collapse='_')}.png")
1707226952789:for (i in unique(joined_data$Stadur)) {
1707226952837:jd_long <- joined_data |>
1707226952853:filter(Stadur %in% i) |>
1707226952869:pivot_longer(cols = c(`2020`, `2023`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`),
1707226952886:names_to = "Year",
1707226952902:values_to = "Coverage")
1707226952917:jd_long_Engin_NA <- jd_long[!is.na(jd_long$Coverage),]
1707226952951:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707226952968:if ("package:plyr" %in% search()) {
1707226952982:# Detach 'plyr' if it is loaded
1707226952999:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707226953016:}
1707226953040:species_counts <- jd_long_Engin_NA %>%
1707226953058:group_by(Reitur, Year) %>%
1707226953076:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707226953105:# Meðalfjöldi tegunda í reit á ári
1707226953120:mean_species_per_year <- species_counts %>%
1707226953138:group_by(Year) %>%
1707226953155:summarise(Mean = mean(SpeciesCount)) |>
1707226953171:mutate(Type = "Tegundafjöldi")
1707226953206:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707226953222:library(plyr)
1707226953241:df <- jd_long_Engin_NA |>
1707226953257:ddply(.(Type,Year,Stadur,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707226953272:ddply(.(Type,Year,Stadur),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707226953298:#Leggja saman heildarþekju allra reita innan ára
1707226953313:df_summary <- df |>
1707226953328:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707226953343:sums_row <- df_summary %>%
1707226953361:mutate(Type = "Heildarþekja") |>
1707226953376:select(Type, Year, Mean)
1707226953403:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707226953428:df_with_heildarþekja <- bind_rows(df, combined_df)
1707226953467:library(scales)
1707226953500:# Ensure Type is ordered as desired
1707226953521:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707226953547:# Plot
1707226953561:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean)) +
1707226953579:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707226953594:scale_fill_brewer(palette = "Set1") +
1707226953611:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707226953626:# Example secondary axis (e.g., double the Mean for illustration)
1707226953641:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707226953656:labs(title = "",
1707226953671:y = "Meðalþekja", x = "") +
1707226953687:theme_minimal()+
1707226953707:theme(legend.title = element_blank()) +
1707226953723:annotate("text", x = 1, y = Inf, label = i, hjust = 1, vjust = 1, size = 5, angle = 0)
1707226953748:Filename <-  glue(i,"-","{paste(unique(joined_data$Reitur), collapse='_')}.png")
1707226953764:ggsave(filename = Filename, plot = p1, width = 11.7, height = 8.3, dpi = 300, units = "in")
1707226953796:}
1707227062518:ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), bg = "white") +
1707227062535:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707227062552:scale_fill_brewer(palette = "Set1") +
1707227062571:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707227062590:# Example secondary axis (e.g., double the Mean for illustration)
1707227062606:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707227062623:labs(title = "",
1707227062641:y = "Meðalþekja", x = "") +
1707227062657:theme_minimal()+
1707227062671:theme(legend.title = element_blank()) +
1707227062687:annotate("text", x = 1, y = Inf, label = i, hjust = 1, vjust = 1, size = 5, angle = 0)
1707227096416:ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), bg = "white") +
1707227096437:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707227096454:scale_fill_brewer(palette = "Set1") +
1707227096468:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707227096482:# Example secondary axis (e.g., double the Mean for illustration)
1707227096498:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707227096514:labs(title = "",
1707227096530:y = "Meðalþekja", x = "") +
1707227096548:theme_minimal()+
1707227096562:theme(legend.title = element_blank()) +
1707227096576:annotate("text", x = 2, y = Inf, label = i, hjust = 1, vjust = 1, size = 5, angle = 0)
1707227120711:for (i in unique(joined_data$Stadur)) {
1707227120751:jd_long <- joined_data |>
1707227120767:filter(Stadur %in% i) |>
1707227120783:pivot_longer(cols = c(`2020`, `2023`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`),
1707227120798:names_to = "Year",
1707227120813:values_to = "Coverage")
1707227120828:jd_long_Engin_NA <- jd_long[!is.na(jd_long$Coverage),]
1707227120864:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707227120878:if ("package:plyr" %in% search()) {
1707227120893:# Detach 'plyr' if it is loaded
1707227120908:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707227120921:}
1707227120940:species_counts <- jd_long_Engin_NA %>%
1707227120952:group_by(Reitur, Year) %>%
1707227120969:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707227120993:# Meðalfjöldi tegunda í reit á ári
1707227121009:mean_species_per_year <- species_counts %>%
1707227121025:group_by(Year) %>%
1707227121040:summarise(Mean = mean(SpeciesCount)) |>
1707227121061:mutate(Type = "Tegundafjöldi")
1707227121087:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707227121104:library(plyr)
1707227121119:df <- jd_long_Engin_NA |>
1707227121135:ddply(.(Type,Year,Stadur,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707227121151:ddply(.(Type,Year,Stadur),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707227121177:#Leggja saman heildarþekju allra reita innan ára
1707227121193:df_summary <- df |>
1707227121208:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707227121226:sums_row <- df_summary %>%
1707227121243:mutate(Type = "Heildarþekja") |>
1707227121258:select(Type, Year, Mean)
1707227121288:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707227121315:df_with_heildarþekja <- bind_rows(df, combined_df)
1707227121355:library(scales)
1707227121380:# Ensure Type is ordered as desired
1707227121395:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707227121425:# Plot
1707227121443:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), bg = "white") +
1707227121458:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707227121474:scale_fill_brewer(palette = "Set1") +
1707227121489:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707227121504:# Example secondary axis (e.g., double the Mean for illustration)
1707227121520:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707227121534:labs(title = "",
1707227121549:y = "Meðalþekja", x = "") +
1707227121565:theme_minimal()+
1707227121579:theme(legend.title = element_blank()) +
1707227121596:annotate("text", x = 2, y = Inf, label = i, hjust = 1, vjust = 1, size = 5, angle = 0)
1707227121623:Filename <-  glue(i,"-","{paste(unique(df_with_heildarþekja$Reitur), collapse='_')}.png")
1707227121641:ggsave(filename = Filename, plot = p1, width = 11.7, height = 8.3, dpi = 300, units = "in")
1707227121668:}
1707227147934:unique(df_with_heildarþekja$Reitur)
1707227155046:df_with_heildarþekja
1707227189820:species_counts
1707227385073:for (i in unique(joined_data$Stadur)[6]) {
1707227385125:jd_long <- joined_data |>
1707227385142:filter(Stadur %in% i) |>
1707227385158:pivot_longer(cols = c(`2020`, `2023`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`),
1707227385175:names_to = "Year",
1707227385193:values_to = "Coverage")
1707227385211:jd_long_Engin_NA <- jd_long[!is.na(jd_long$Coverage),]
1707227385253:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707227385268:if ("package:plyr" %in% search()) {
1707227385285:# Detach 'plyr' if it is loaded
1707227385302:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707227385317:}
1707227385346:species_counts <- jd_long_Engin_NA %>%
1707227385361:group_by(Reitur, Year) %>%
1707227385381:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707227385412:# Meðalfjöldi tegunda í reit á ári
1707227385427:mean_species_per_year <- species_counts %>%
1707227385442:group_by(Year) %>%
1707227385459:summarise(Mean = mean(SpeciesCount)) |>
1707227385473:mutate(Type = "Tegundafjöldi")
1707227385499:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707227385516:library(plyr)
1707227385535:df <- jd_long_Engin_NA |>
1707227385552:ddply(.(Type,Year,Stadur,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707227385569:ddply(.(Type,Year,Stadur),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707227385596:#Leggja saman heildarþekju allra reita innan ára
1707227385613:df_summary <- df |>
1707227385630:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707227385646:sums_row <- df_summary %>%
1707227385663:mutate(Type = "Heildarþekja") |>
1707227385680:select(Type, Year, Mean)
1707227385707:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707227385732:df_with_heildarþekja <- bind_rows(df, combined_df)
1707227385773:library(scales)
1707227385800:# Ensure Type is ordered as desired
1707227385816:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707227385844:# Plot
1707227385859:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
1707227385877:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707227385893:scale_fill_brewer(palette = "Set1") +
1707227385912:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707227385926:# Example secondary axis (e.g., double the Mean for illustration)
1707227385942:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707227385958:labs(title = "",
1707227385974:y = "Meðalþekja", x = "") +
1707227385992:theme_minimal()+
1707227386011:theme(legend.title = element_blank()) +
1707227386027:annotate("text", x = 2, y = Inf, label = i, hjust = 1, vjust = 1, size = 5, angle = 0)
1707227386059:Filename <-  glue(i,"-","{paste(unique(species_counts$Reitur), collapse='_')}.png")
1707227386074:ggsave(filename = Filename, plot = p1, width = 11.7, height = 8.3, dpi = 300, units = "in")
1707227386102:}
1707227474060:for (i in unique(joined_data$Stadur)[6]) {
1707227474103:jd_long <- joined_data |>
1707227474118:filter(Stadur %in% i) |>
1707227474133:pivot_longer(cols = c(`2020`, `2023`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`),
1707227474150:names_to = "Year",
1707227474165:values_to = "Coverage")
1707227474182:jd_long_Engin_NA <- jd_long[!is.na(jd_long$Coverage),]
1707227474217:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707227474234:if ("package:plyr" %in% search()) {
1707227474250:# Detach 'plyr' if it is loaded
1707227474267:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707227474282:}
1707227474309:species_counts <- jd_long_Engin_NA %>%
1707227474321:group_by(Reitur, Year) %>%
1707227474338:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707227474364:# Meðalfjöldi tegunda í reit á ári
1707227474380:mean_species_per_year <- species_counts %>%
1707227474395:group_by(Year) %>%
1707227474412:summarise(Mean = mean(SpeciesCount)) |>
1707227474429:mutate(Type = "Tegundafjöldi")
1707227474457:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707227474472:library(plyr)
1707227474488:df <- jd_long_Engin_NA |>
1707227474507:ddply(.(Type,Year,Stadur,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707227474524:ddply(.(Type,Year,Stadur),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707227474554:#Leggja saman heildarþekju allra reita innan ára
1707227474570:df_summary <- df |>
1707227474587:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707227474603:sums_row <- df_summary %>%
1707227474620:mutate(Type = "Heildarþekja") |>
1707227474636:select(Type, Year, Mean)
1707227474662:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707227474689:df_with_heildarþekja <- bind_rows(df, combined_df)
1707227474729:library(scales)
1707227474755:# Ensure Type is ordered as desired
1707227474771:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707227474799:# Plot
1707227474814:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
1707227474831:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707227474846:scale_fill_brewer(palette = "Set1") +
1707227474863:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707227474878:# Example secondary axis (e.g., double the Mean for illustration)
1707227474894:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707227474909:labs(title = "",
1707227474925:y = "Meðalþekja", x = "") +
1707227474942:theme_minimal()+
1707227474956:theme(legend.title = element_blank(),
1707227474972:plot.background = element_rect(fill = "white", color = NA)) +
1707227474988:annotate("text", x = 2, y = Inf, label = i, hjust = 1, vjust = 1, size = 5, angle = 0)
1707227475015:Filename <-  glue(i,"-","{paste(unique(species_counts$Reitur), collapse='_')}.png")
1707227475031:ggsave(filename = Filename, plot = p1, width = 11.7, height = 8.3, dpi = 300, units = "in")
1707227475056:}
1707227585037:for (i in unique(joined_data$Stadur)) {
1707227585095:jd_long <- joined_data |>
1707227585115:filter(Stadur %in% i) |>
1707227585137:pivot_longer(cols = c(`2020`, `2023`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`),
1707227585157:names_to = "Year",
1707227585174:values_to = "Coverage")
1707227585192:jd_long_Engin_NA <- jd_long[!is.na(jd_long$Coverage),]
1707227585233:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707227585247:if ("package:plyr" %in% search()) {
1707227585262:# Detach 'plyr' if it is loaded
1707227585278:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707227585294:}
1707227585320:species_counts <- jd_long_Engin_NA %>%
1707227585337:group_by(Reitur, Year) %>%
1707227585352:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707227585379:# Meðalfjöldi tegunda í reit á ári
1707227585395:mean_species_per_year <- species_counts %>%
1707227585410:group_by(Year) %>%
1707227585425:summarise(Mean = mean(SpeciesCount)) |>
1707227585441:mutate(Type = "Tegundafjöldi")
1707227585468:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707227585484:library(plyr)
1707227585500:df <- jd_long_Engin_NA |>
1707227585517:ddply(.(Type,Year,Stadur,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707227585532:ddply(.(Type,Year,Stadur),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707227585561:#Leggja saman heildarþekju allra reita innan ára
1707227585577:df_summary <- df |>
1707227585593:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707227585609:sums_row <- df_summary %>%
1707227585625:mutate(Type = "Heildarþekja") |>
1707227585642:select(Type, Year, Mean)
1707227585669:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707227585694:df_with_heildarþekja <- bind_rows(df, combined_df)
1707227585732:library(scales)
1707227585760:# Ensure Type is ordered as desired
1707227585776:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707227585803:# Plot
1707227585818:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
1707227585834:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707227585849:scale_fill_brewer(palette = "Set1") +
1707227585865:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707227585881:# Example secondary axis (e.g., double the Mean for illustration)
1707227585897:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707227585914:labs(title = "",
1707227585930:y = "Meðalþekja", x = "") +
1707227585946:theme_minimal()+
1707227585962:theme(legend.title = element_blank(),
1707227585979:plot.background = element_rect(fill = "white", color = NA)) +
1707227585994:annotate("text", x = 2, y = Inf, label = i, hjust = 1, vjust = 1, size = 5, angle = 0)
1707227586023:Filename <-  glue(i,"-","{paste(unique(species_counts$Reitur), collapse='_')}.png")
1707227586039:ggsave(filename = Filename, plot = p1, width = 11.7, height = 8.3, dpi = 300, units = "in")
1707227586066:}
1707229106185:unique(joined_data$Stadur)
1707229122264:for (i in unique(joined_data$Stadur)7) {
1707229158081:for (i in unique(joined_data$Stadur)[7]) {
1707229158123:jd_long <- joined_data |>
1707229158136:filter(Stadur %in% i) |>
1707229158151:pivot_longer(cols = c(`2020`, `2023`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`),
1707229158168:names_to = "Year",
1707229158184:values_to = "Coverage")
1707229158199:jd_long_Engin_NA <- jd_long[!is.na(jd_long$Coverage),]
1707229158234:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707229158252:if ("package:plyr" %in% search()) {
1707229158270:# Detach 'plyr' if it is loaded
1707229158285:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707229158303:}
1707229158328:species_counts <- jd_long_Engin_NA %>%
1707229158343:group_by(Reitur, Year) %>%
1707229158358:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707229158384:# Meðalfjöldi tegunda í reit á ári
1707229158400:mean_species_per_year <- species_counts %>%
1707229158417:group_by(Year) %>%
1707229158433:summarise(Mean = mean(SpeciesCount)) |>
1707229158446:mutate(Type = "Tegundafjöldi")
1707229158471:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707229158486:library(plyr)
1707229158501:df <- jd_long_Engin_NA |>
1707229158515:ddply(.(Type,Year,Stadur,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707229158532:ddply(.(Type,Year,Stadur),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707229158560:#Leggja saman heildarþekju allra reita innan ára
1707229158577:df_summary <- df |>
1707229158593:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707229158607:sums_row <- df_summary %>%
1707229158622:mutate(Type = "Heildarþekja") |>
1707229158640:select(Type, Year, Mean)
1707229158667:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707229158694:df_with_heildarþekja <- bind_rows(df, combined_df)
1707229158731:library(scales)
1707229158759:# Ensure Type is ordered as desired
1707229158775:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707229158801:# Plot
1707229158815:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
1707229158830:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707229158848:scale_fill_brewer(palette = "Set1") +
1707229158869:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707229158888:# Example secondary axis (e.g., double the Mean for illustration)
1707229158909:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707229158927:labs(title = "",
1707229158945:y = "Meðalþekja", x = "") +
1707229158966:theme_minimal()+
1707229158985:theme(legend.title = element_blank(),
1707229159005:plot.background = element_rect(fill = "white", color = NA)) +
1707229159022:annotate("text", x = 2, y = Inf, label = i, hjust = 1, vjust = 1, size = 5, angle = 0)
1707229159053:Filename <-  glue(i,"-","{paste(unique(species_counts$Reitur), collapse='_')}.png")
1707229159071:#ggsave(filename = Filename, plot = p1, width = 11.7, height = 8.3, dpi = 300, units = "in")
1707229159089:print(Filename)
1707229159105:}
1707229174156:jd_long
1707229184855:jd_long_Engin_NA
1707229206662:species_counts
1707229216398:mean_species_per_year
1707229226870:df
1707229238191:df_summary
1707229243644:combined_df
1707229250463:df_with_heildarþekja
1707229271177:p1
1707229350358:jd_long[!complete.cases(jd_long)]
1707229354090:jd_long[!complete.cases(jd_long),]
1707229390432:jd_long[complete.cases(jd_long),]
1707229419392:jd_long[!is.na(jd_long$Type),]
1707229424302:jd_long[is.na(jd_long$Type),]
1707229443944:jd_long[is.na(jd_long$Stadur),]
1707229583192:for (i in unique(joined_data$Stadur)[7]) {
1707229583283:jd_long <- joined_data |>
1707229583302:filter(Stadur %in% i &
1707229583318:!Type %in% c("Grænþörungar", "Cyanobacteria")) |>
1707229583334:pivot_longer(cols = c(`2020`, `2023`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`),
1707229583351:names_to = "Year",
1707229583370:values_to = "Coverage")
1707229583389:jd_long_Engin_NA <- jd_long[!is.na(jd_long$Coverage),]
1707229583431:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707229583448:if ("package:plyr" %in% search()) {
1707229583464:# Detach 'plyr' if it is loaded
1707229583483:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707229583498:}
1707229583530:species_counts <- jd_long_Engin_NA %>%
1707229583551:group_by(Reitur, Year) %>%
1707229583568:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707229583594:# Meðalfjöldi tegunda í reit á ári
1707229583611:mean_species_per_year <- species_counts %>%
1707229583629:group_by(Year) %>%
1707229583643:summarise(Mean = mean(SpeciesCount)) |>
1707229583658:mutate(Type = "Tegundafjöldi")
1707229583683:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707229583697:library(plyr)
1707229583712:df <- jd_long_Engin_NA |>
1707229583727:ddply(.(Type,Year,Stadur,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707229583743:ddply(.(Type,Year,Stadur),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707229583770:#Leggja saman heildarþekju allra reita innan ára
1707229583783:df_summary <- df |>
1707229583796:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707229583812:sums_row <- df_summary %>%
1707229583825:mutate(Type = "Heildarþekja") |>
1707229583841:select(Type, Year, Mean)
1707229583869:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707229583900:df_with_heildarþekja <- bind_rows(df, combined_df)
1707229583949:library(scales)
1707229583987:# Ensure Type is ordered as desired
1707229584008:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707229584042:# Plot
1707229584061:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
1707229584079:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707229584097:scale_fill_brewer(palette = "Set1") +
1707229584113:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707229584128:# Example secondary axis (e.g., double the Mean for illustration)
1707229584143:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707229584158:labs(title = "",
1707229584173:y = "Meðalþekja", x = "") +
1707229584189:theme_minimal()+
1707229584204:theme(legend.title = element_blank(),
1707229584221:plot.background = element_rect(fill = "white", color = NA)) +
1707229584239:annotate("text", x = 2, y = Inf, label = i, hjust = 1, vjust = 1, size = 5, angle = 0)
1707229584268:Filename <-  glue(i,"-","{paste(unique(species_counts$Reitur), collapse='_')}.png")
1707229584288:#ggsave(filename = Filename, plot = p1, width = 11.7, height = 8.3, dpi = 300, units = "in")
1707229584302:print(Filename)
1707229584318:}
1707229591200:p1
1707229617193:unique(joined_data$Stadur)
1707229649752:for (i in unique(joined_data$Stadur)) {
1707229649796:jd_long <- joined_data |>
1707229649811:filter(Stadur %in% i &
1707229649825:!Type %in% c("Grænþörungar", "Cyanobacteria")) |>
1707229649841:pivot_longer(cols = c(`2020`, `2023`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`),
1707229649855:names_to = "Year",
1707229649869:values_to = "Coverage")
1707229649884:jd_long_Engin_NA <- jd_long[!is.na(jd_long$Coverage),]
1707229649919:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707229649933:if ("package:plyr" %in% search()) {
1707229649947:# Detach 'plyr' if it is loaded
1707229649962:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707229649976:}
1707229650001:species_counts <- jd_long_Engin_NA %>%
1707229650016:group_by(Reitur, Year) %>%
1707229650033:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707229650058:# Meðalfjöldi tegunda í reit á ári
1707229650076:mean_species_per_year <- species_counts %>%
1707229650093:group_by(Year) %>%
1707229650110:summarise(Mean = mean(SpeciesCount)) |>
1707229650126:mutate(Type = "Tegundafjöldi")
1707229650152:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707229650168:library(plyr)
1707229650183:df <- jd_long_Engin_NA |>
1707229650197:ddply(.(Type,Year,Stadur,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707229650212:ddply(.(Type,Year,Stadur),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707229650235:#Leggja saman heildarþekju allra reita innan ára
1707229650249:df_summary <- df |>
1707229650262:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707229650276:sums_row <- df_summary %>%
1707229650292:mutate(Type = "Heildarþekja") |>
1707229650306:select(Type, Year, Mean)
1707229650330:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707229650354:df_with_heildarþekja <- bind_rows(df, combined_df)
1707229650388:library(scales)
1707229650412:# Ensure Type is ordered as desired
1707229650426:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707229650450:# Plot
1707229650465:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
1707229650483:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707229650498:scale_fill_brewer(palette = "Set1") +
1707229650515:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707229650531:# Example secondary axis (e.g., double the Mean for illustration)
1707229650553:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707229650571:labs(title = "",
1707229650586:y = "Meðalþekja", x = "") +
1707229650601:theme_minimal()+
1707229650616:theme(legend.title = element_blank(),
1707229650631:plot.background = element_rect(fill = "white", color = NA)) +
1707229650647:annotate("text", x = 2, y = Inf, label = i, hjust = 1, vjust = 1, size = 5, angle = 0)
1707229650674:Filename <-  glue(i,"-","{paste(unique(species_counts$Reitur), collapse='_')}.png")
1707229650692:#ggsave(filename = Filename, plot = p1, width = 11.7, height = 8.3, dpi = 300, units = "in")
1707229650709:print(Filename)
1707229650724:}
1707229669272:for (i in unique(joined_data$Stadur)) {
1707229669317:jd_long <- joined_data |>
1707229669332:filter(Stadur %in% i &
1707229669349:!Type %in% c("Grænþörungar", "Cyanobacteria")) |>
1707229669363:pivot_longer(cols = c(`2020`, `2023`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`),
1707229669380:names_to = "Year",
1707229669397:values_to = "Coverage")
1707229669413:jd_long_Engin_NA <- jd_long[!is.na(jd_long$Coverage),]
1707229669452:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707229669466:if ("package:plyr" %in% search()) {
1707229669482:# Detach 'plyr' if it is loaded
1707229669496:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707229669510:}
1707229669536:species_counts <- jd_long_Engin_NA %>%
1707229669552:group_by(Reitur, Year) %>%
1707229669566:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707229669591:# Meðalfjöldi tegunda í reit á ári
1707229669605:mean_species_per_year <- species_counts %>%
1707229669621:group_by(Year) %>%
1707229669635:summarise(Mean = mean(SpeciesCount)) |>
1707229669651:mutate(Type = "Tegundafjöldi")
1707229669678:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707229669694:library(plyr)
1707229669708:df <- jd_long_Engin_NA |>
1707229669727:ddply(.(Type,Year,Stadur,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707229669742:ddply(.(Type,Year,Stadur),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707229669767:#Leggja saman heildarþekju allra reita innan ára
1707229669784:df_summary <- df |>
1707229669799:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707229669814:sums_row <- df_summary %>%
1707229669828:mutate(Type = "Heildarþekja") |>
1707229669840:select(Type, Year, Mean)
1707229669859:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707229669879:df_with_heildarþekja <- bind_rows(df, combined_df)
1707229669910:library(scales)
1707229669938:# Ensure Type is ordered as desired
1707229669953:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707229669980:# Plot
1707229669998:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
1707229670012:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707229670030:scale_fill_brewer(palette = "Set1") +
1707229670048:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707229670068:# Example secondary axis (e.g., double the Mean for illustration)
1707229670090:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707229670110:labs(title = "",
1707229670127:y = "Meðalþekja", x = "") +
1707229670146:theme_minimal()+
1707229670164:theme(legend.title = element_blank(),
1707229670181:plot.background = element_rect(fill = "white", color = NA)) +
1707229670197:annotate("text", x = 2, y = Inf, label = i, hjust = 1, vjust = 1, size = 5, angle = 0)
1707229670223:Filename <-  glue(i,"-","{paste(unique(species_counts$Reitur), collapse='_')}.png")
1707229670239:ggsave(filename = Filename, plot = p1, width = 11.7, height = 8.3, dpi = 300, units = "in")
1707229670266:}
1707229782864:unique(joined_data$Stadur)
1707230445548:jd_long <- joined_data |>
1707230445568:filter(Fluor==1 &
1707230445586:!Type %in% c("Grænþörungar", "Cyanobacteria")) |>
1707230445601:pivot_longer(cols = c(`2020`, `2023`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`),
1707230445613:names_to = "Year",
1707230445626:values_to = "Coverage")
1707230450417:jd_long_Engin_NA <- jd_long[!is.na(jd_long$Coverage),]
1707230458409:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707230458431:if ("package:plyr" %in% search()) {
1707230458448:# Detach 'plyr' if it is loaded
1707230458465:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707230458480:}
1707230460647:species_counts <- jd_long_Engin_NA %>%
1707230460668:group_by(Reitur, Year) %>%
1707230460689:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707230461977:# Meðalfjöldi tegunda í reit á ári
1707230461999:mean_species_per_year <- species_counts %>%
1707230462015:group_by(Year) %>%
1707230462031:summarise(Mean = mean(SpeciesCount)) |>
1707230462047:mutate(Type = "Tegundafjöldi")
1707230463078:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707230463097:library(plyr)
1707230464095:df <- jd_long_Engin_NA |>
1707230464112:ddply(.(Type,Year,Stadur,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707230464127:ddply(.(Type,Year,Stadur),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707230465728:#Leggja saman heildarþekju allra reita innan ára
1707230465748:df_summary <- df |>
1707230465764:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707230466768:sums_row <- df_summary %>%
1707230466792:mutate(Type = "Heildarþekja") |>
1707230466809:select(Type, Year, Mean)
1707230468778:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707230469833:df_with_heildarþekja <- bind_rows(df, combined_df)
1707230471927:library(scales)
1707230477971:# Ensure Type is ordered as desired
1707230477987:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707230518934:# Plot
1707230518951:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
1707230518975:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707230518995:scale_fill_brewer(palette = "Set1") +
1707230519015:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707230519031:# Example secondary axis (e.g., double the Mean for illustration)
1707230519047:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707230519063:labs(title = "",
1707230519079:y = "Meðalþekja", x = "") +
1707230519093:theme_minimal()+
1707230519108:theme(legend.title = element_blank(),
1707230519124:plot.background = element_rect(fill = "white", color = NA)) +
1707230519140:annotate("text", x = 2, y = Inf, label = "Þynningarsvæði F", hjust = 1, vjust = 1, size = 5, angle = 0)
1707230522602:p1
1707230592145:unique(species_counts$Reitur)
1707230736154:df <- jd_long_Engin_NA |>
1707230736177:ddply(.(Type,Year,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707230736193:ddply(.(Type,Year),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707230740824:#Leggja saman heildarþekju allra reita innan ára
1707230740846:df_summary <- df |>
1707230740861:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707230742215:sums_row <- df_summary %>%
1707230742232:mutate(Type = "Heildarþekja") |>
1707230742245:select(Type, Year, Mean)
1707230745459:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707230746347:df_with_heildarþekja <- bind_rows(df, combined_df)
1707230749616:# Ensure Type is ordered as desired
1707230749638:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707230752235:# Plot
1707230752256:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
1707230752272:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707230752288:scale_fill_brewer(palette = "Set1") +
1707230752303:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707230752321:# Example secondary axis (e.g., double the Mean for illustration)
1707230752338:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707230752354:labs(title = "",
1707230752370:y = "Meðalþekja", x = "") +
1707230752386:theme_minimal()+
1707230752403:theme(legend.title = element_blank(),
1707230752419:plot.background = element_rect(fill = "white", color = NA)) +
1707230752436:annotate("text", x = 2, y = Inf, label = "Þynningarsvæði F", hjust = 1, vjust = 1, size = 5, angle = 0)
1707230754834:p1
1707230785479:Filename <-  glue("ÞynningarsvæðiF","-","{paste(unique(species_counts$Reitur), collapse='_')}.png")
1707230787001:Filename
1707230796493:ggsave(filename = Filename, plot = p1, width = 11.7, height = 8.3, dpi = 300, units = "in")
1707230879617:jd_long <- joined_data |>
1707230879638:filter(Brennisteinn==1 &
1707230879653:!Type %in% c("Grænþörungar", "Cyanobacteria")) |>
1707230879668:pivot_longer(cols = c(`2020`, `2023`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`),
1707230879683:names_to = "Year",
1707230879699:values_to = "Coverage")
1707230879771:jd_long_Engin_NA <- jd_long[!is.na(jd_long$Coverage),]
1707230879816:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707230879832:if ("package:plyr" %in% search()) {
1707230879848:# Detach 'plyr' if it is loaded
1707230879862:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707230879882:}
1707230879912:species_counts <- jd_long_Engin_NA %>%
1707230879930:group_by(Reitur, Year) %>%
1707230879949:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707230879986:# Meðalfjöldi tegunda í reit á ári
1707230880002:mean_species_per_year <- species_counts %>%
1707230880022:group_by(Year) %>%
1707230880050:summarise(Mean = mean(SpeciesCount)) |>
1707230880071:mutate(Type = "Tegundafjöldi")
1707230880114:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707230880131:library(plyr)
1707230880168:df <- jd_long_Engin_NA |>
1707230880184:ddply(.(Type,Year,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707230880198:ddply(.(Type,Year),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707230880266:#Leggja saman heildarþekju allra reita innan ára
1707230880282:df_summary <- df |>
1707230880296:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707230880313:sums_row <- df_summary %>%
1707230880328:mutate(Type = "Heildarþekja") |>
1707230880382:select(Type, Year, Mean)
1707230880414:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707230880442:df_with_heildarþekja <- bind_rows(df, combined_df)
1707230880481:library(scales)
1707230880509:# Ensure Type is ordered as desired
1707230880523:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707230901607:# Plot
1707230901627:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
1707230901645:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707230901661:scale_fill_brewer(palette = "Set1") +
1707230901677:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707230901692:# Example secondary axis (e.g., double the Mean for illustration)
1707230901707:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707230901726:labs(title = "",
1707230901744:y = "Meðalþekja", x = "") +
1707230901760:theme_minimal()+
1707230901776:theme(legend.title = element_blank(),
1707230901793:plot.background = element_rect(fill = "white", color = NA)) +
1707230901810:annotate("text", x = 2, y = Inf, label = "Þynningarsvæði F", hjust = 1, vjust = 1, size = 5, angle = 0)
1707230903976:Filename <-  glue("ÞynningarsvæðiS","-","{paste(unique(species_counts$Reitur), collapse='_')}.png")
1707230905072:ggsave(filename = Filename, plot = p1, width = 11.7, height = 8.3, dpi = 300, units = "in")
1707231055778:joined_data[joined_data$Stadur=="Selás"]
1707231058098:joined_data[joined_data$Stadur=="Selás",]
1707231081618:joined_data[joined_data$Stadur=="Selás" & joined_data$Type=="Blað- og runnfléttur",]
1707231738659:unique(joined_data$Stadur)
1707231781467:# lúppa fyrir myndir allra staða - stöplarit: "Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"
1707231781489:for (i in unique(joined_data$Stadur)[2]) {
1707231781529:jd_long <- joined_data |>
1707231781544:filter(Stadur %in% i &
1707231781561:!Type %in% c("Grænþörungar", "Cyanobacteria")) |>
1707231781576:pivot_longer(cols = c(`2020`, `2023`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`),
1707231781592:names_to = "Year",
1707231781609:values_to = "Coverage")
1707231781624:jd_long_Engin_NA <- jd_long#[!is.na(jd_long$Coverage),]
1707231781663:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707231781678:if ("package:plyr" %in% search()) {
1707231781696:# Detach 'plyr' if it is loaded
1707231781711:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707231781724:}
1707231781749:species_counts <- jd_long_Engin_NA %>%
1707231781767:group_by(Reitur, Year) %>%
1707231781783:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707231781809:# Meðalfjöldi tegunda í reit á ári
1707231781826:mean_species_per_year <- species_counts %>%
1707231781843:group_by(Year) %>%
1707231781858:summarise(Mean = mean(SpeciesCount)) |>
1707231781873:mutate(Type = "Tegundafjöldi")
1707231781901:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707231781921:library(plyr)
1707231781936:df <- jd_long_Engin_NA |>
1707231781953:ddply(.(Type,Year,Stadur,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707231781971:ddply(.(Type,Year,Stadur),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707231781999:#Leggja saman heildarþekju allra reita innan ára
1707231782017:df_summary <- df |>
1707231782033:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707231782049:sums_row <- df_summary %>%
1707231782066:mutate(Type = "Heildarþekja") |>
1707231782081:select(Type, Year, Mean)
1707231782108:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707231782137:df_with_heildarþekja <- bind_rows(df, combined_df)
1707231782177:library(scales)
1707231782203:# Ensure Type is ordered as desired
1707231782219:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707231782249:# Plot
1707231782265:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
1707231782282:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707231782299:scale_fill_brewer(palette = "Set1") +
1707231782316:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707231782333:# Example secondary axis (e.g., double the Mean for illustration)
1707231782350:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707231782364:labs(title = "",
1707231782379:y = "Meðalþekja", x = "") +
1707231782394:theme_minimal()+
1707231782410:theme(legend.title = element_blank(),
1707231782427:plot.background = element_rect(fill = "white", color = NA)) +
1707231782442:annotate("text", x = 2, y = Inf, label = i, hjust = 1, vjust = 1, size = 5, angle = 0)
1707231782469:Filename <-  glue(i,"-","{paste(unique(species_counts$Reitur), collapse='_')}.png")
1707231782481:#ggsave(filename = Filename, plot = p1, width = 11.7, height = 8.3, dpi = 300, units = "in")
1707231782496:p1
1707231782507:}
1707231800700:p1
1707231867785:ggsave(filename = Filename, plot = p1, width = 11.7, height = 8.3, dpi = 300, units = "in")
1707232025939:# lúppa fyrir myndir allra staða - stöplarit: "Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"
1707232025964:for (i in unique(joined_data$Stadur)[2]) {
1707232026003:jd_long <- joined_data |>
1707232026020:filter(Stadur %in% i &
1707232026036:!Type %in% c("Grænþörungar", "Cyanobacteria")) |>
1707232026053:pivot_longer(cols = c(`2020`, `2023`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`),
1707232026068:names_to = "Year",
1707232026084:values_to = "Coverage")
1707232026101:jd_long_Engin_NA <- jd_long#[!is.na(jd_long$Coverage),]
1707232026140:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707232026156:if ("package:plyr" %in% search()) {
1707232026175:# Detach 'plyr' if it is loaded
1707232026191:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707232026207:}
1707232026237:species_counts <- jd_long_Engin_NA[!is.na(jd_long$Coverage),] %>%
1707232026252:group_by(Reitur, Year) %>%
1707232026269:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707232026293:# Meðalfjöldi tegunda í reit á ári
1707232026307:mean_species_per_year <- species_counts %>%
1707232026323:group_by(Year) %>%
1707232026339:summarise(Mean = mean(SpeciesCount)) |>
1707232026353:mutate(Type = "Tegundafjöldi")
1707232026379:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707232026394:library(plyr)
1707232026411:df <- jd_long_Engin_NA |>
1707232026426:ddply(.(Type,Year,Stadur,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707232026440:ddply(.(Type,Year,Stadur),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707232026465:#Leggja saman heildarþekju allra reita innan ára
1707232026482:df_summary <- df |>
1707232026497:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707232026513:sums_row <- df_summary %>%
1707232026529:mutate(Type = "Heildarþekja") |>
1707232026544:select(Type, Year, Mean)
1707232026570:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707232026600:df_with_heildarþekja <- bind_rows(df, combined_df)
1707232026640:library(scales)
1707232026668:# Ensure Type is ordered as desired
1707232026683:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707232026711:# Plot
1707232026726:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
1707232026743:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707232026759:scale_fill_brewer(palette = "Set1") +
1707232026774:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707232026791:# Example secondary axis (e.g., double the Mean for illustration)
1707232026807:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707232026822:labs(title = "",
1707232026837:y = "Meðalþekja", x = "") +
1707232026855:theme_minimal()+
1707232026870:theme(legend.title = element_blank(),
1707232026886:plot.background = element_rect(fill = "white", color = NA)) +
1707232026902:annotate("text", x = 2, y = Inf, label = i, hjust = 1, vjust = 1, size = 5, angle = 0)
1707232026929:Filename <-  glue(i,"-","{paste(unique(species_counts$Reitur), collapse='_')}.png")
1707232026950:#ggsave(filename = Filename, plot = p1, width = 11.7, height = 8.3, dpi = 300, units = "in")
1707232026969:p1
1707232026988:}
1707232029470:p1
1707232047500:ggsave(filename = Filename, plot = p1, width = 11.7, height = 8.3, dpi = 300, units = "in")
1707232503948:# lúppa fyrir myndir allra staða - stöplarit: "Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"
1707232503974:for (i in unique(joined_data$Stadur)) {
1707232504024:jd_long <- joined_data |>
1707232504039:filter(Stadur %in% i &
1707232504057:!Type %in% c("Grænþörungar", "Cyanobacteria")) |>
1707232504076:pivot_longer(cols = c(`2020`, `2023`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`),
1707232504092:names_to = "Year",
1707232504107:values_to = "Coverage")
1707232504123:jd_long_Engin_NA <- jd_long#[!is.na(jd_long$Coverage),]
1707232504164:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707232504180:if ("package:plyr" %in% search()) {
1707232504196:# Detach 'plyr' if it is loaded
1707232504213:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707232504228:}
1707232504254:species_counts <- jd_long_Engin_NA[!is.na(jd_long$Coverage),] %>%
1707232504269:group_by(Reitur, Year) %>%
1707232504287:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707232504312:# Meðalfjöldi tegunda í reit á ári
1707232504327:mean_species_per_year <- species_counts %>%
1707232504340:group_by(Year) %>%
1707232504357:summarise(Mean = mean(SpeciesCount)) |>
1707232504375:mutate(Type = "Tegundafjöldi")
1707232504401:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707232504417:library(plyr)
1707232504432:df <- jd_long_Engin_NA |>
1707232504449:ddply(.(Type,Year,Stadur,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707232504464:ddply(.(Type,Year,Stadur),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707232504492:#Leggja saman heildarþekju allra reita innan ára
1707232504506:df_summary <- df |>
1707232504522:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707232504539:sums_row <- df_summary %>%
1707232504553:mutate(Type = "Heildarþekja") |>
1707232504568:select(Type, Year, Mean)
1707232504596:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707232504622:df_with_heildarþekja <- bind_rows(df, combined_df)
1707232504659:library(scales)
1707232504686:# Ensure Type is ordered as desired
1707232504703:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707232504729:# Plot
1707232504744:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
1707232504760:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707232504773:scale_fill_brewer(palette = "Set1") +
1707232504789:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707232504806:# Example secondary axis (e.g., double the Mean for illustration)
1707232504824:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707232504841:labs(title = "",
1707232504855:y = "Meðalþekja", x = "") +
1707232504873:theme_minimal()+
1707232504888:theme(legend.title = element_blank(),
1707232504903:plot.background = element_rect(fill = "white", color = NA)) +
1707232504920:annotate("text", x = 2, y = Inf, label = i, hjust = 1, vjust = 1, size = 5, angle = 0)
1707232504952:Filename <-  glue(i,"-","{paste(unique(species_counts$Reitur), collapse='_')}.png")
1707232504971:ggsave(filename = Filename, plot = p1, width = 11.7, height = 8.3, dpi = 300, units = "in")
1707232504997:}
1707232669515:unique(joined_data$Stadur)
1707232675076:unique(joined_data$Stadur)[19]
1707232700731:# lúppa fyrir myndir allra staða - stöplarit: "Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"
1707232700752:for (i in unique(joined_data$Stadur)[19]) {
1707232700789:jd_long <- joined_data |>
1707232700804:filter(Stadur %in% i &
1707232700820:!Type %in% c("Grænþörungar", "Cyanobacteria")) |>
1707232700836:pivot_longer(cols = c(`2020`, `2023`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`),
1707232700848:names_to = "Year",
1707232700861:values_to = "Coverage")
1707232700878:jd_long_Engin_NA <- jd_long#[!is.na(jd_long$Coverage),]
1707232700914:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707232700929:if ("package:plyr" %in% search()) {
1707232700944:# Detach 'plyr' if it is loaded
1707232700958:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707232700974:}
1707232701000:species_counts <- jd_long_Engin_NA[!is.na(jd_long$Coverage),] %>%
1707232701016:group_by(Reitur, Year) %>%
1707232701030:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707232701058:# Meðalfjöldi tegunda í reit á ári
1707232701071:mean_species_per_year <- species_counts %>%
1707232701087:group_by(Year) %>%
1707232701106:summarise(Mean = mean(SpeciesCount)) |>
1707232701122:mutate(Type = "Tegundafjöldi")
1707232701149:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707232701165:library(plyr)
1707232701180:df <- jd_long_Engin_NA |>
1707232701194:ddply(.(Type,Year,Stadur,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707232701210:ddply(.(Type,Year,Stadur),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707232701235:#Leggja saman heildarþekju allra reita innan ára
1707232701253:df_summary <- df |>
1707232701270:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707232701286:sums_row <- df_summary %>%
1707232701301:mutate(Type = "Heildarþekja") |>
1707232701319:select(Type, Year, Mean)
1707232701348:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707232701375:df_with_heildarþekja <- bind_rows(df, combined_df)
1707232701412:library(scales)
1707232701437:# Ensure Type is ordered as desired
1707232701452:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707232701482:# Plot
1707232701498:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
1707232701513:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707232701531:scale_fill_brewer(palette = "Set1") +
1707232701546:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707232701562:# Example secondary axis (e.g., double the Mean for illustration)
1707232701576:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707232701590:labs(title = "",
1707232701604:y = "Meðalþekja", x = "") +
1707232701620:theme_minimal()+
1707232701636:theme(legend.title = element_blank(),
1707232701653:plot.background = element_rect(fill = "white", color = NA)) +
1707232701669:annotate("text", x = 2, y = Inf, label = i, hjust = 1, vjust = 1, size = 5, angle = 0)
1707232701699:Filename <-  glue(i,"-","{paste(unique(species_counts$Reitur), collapse='_')}.png")
1707232701715:ggsave(filename = Filename, plot = p1, width = 11.7, height = 8.3, dpi = 300, units = "in")
1707232701744:}
1707232725353:joined_data |>
1707232725365:filter(Stadur %in% i &
1707232725377:!Type %in% c("Grænþörungar", "Cyanobacteria"))
1707232901796:# lúppa fyrir myndir allra staða - stöplarit: "Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"
1707232901819:for (i in unique(joined_data$Stadur)[19]) {
1707232901858:jd_long <- joined_data |>
1707232901872:filter(Stadur %in% i &
1707232901887:!Type %in% c("Grænþörungar", "Cyanobacteria")) |>
1707232901903:select(where(~ !all(is.na(.)))) |>
1707232901918:pivot_longer(cols = c(`2020`, `2023`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`),
1707232901935:names_to = "Year",
1707232901950:values_to = "Coverage")
1707232901964:jd_long_Engin_NA <- jd_long#[!is.na(jd_long$Coverage),]
1707232902004:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707232902019:if ("package:plyr" %in% search()) {
1707232902035:# Detach 'plyr' if it is loaded
1707232902051:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707232902066:}
1707232902094:species_counts <- jd_long_Engin_NA[!is.na(jd_long$Coverage),] %>%
1707232902109:group_by(Reitur, Year) %>%
1707232902123:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707232902150:# Meðalfjöldi tegunda í reit á ári
1707232902167:mean_species_per_year <- species_counts %>%
1707232902183:group_by(Year) %>%
1707232902198:summarise(Mean = mean(SpeciesCount)) |>
1707232902215:mutate(Type = "Tegundafjöldi")
1707232902248:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707232902267:library(plyr)
1707232902284:df <- jd_long_Engin_NA |>
1707232902303:ddply(.(Type,Year,Stadur,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707232902320:ddply(.(Type,Year,Stadur),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707232902352:#Leggja saman heildarþekju allra reita innan ára
1707232902367:df_summary <- df |>
1707232902382:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707232902398:sums_row <- df_summary %>%
1707232902416:mutate(Type = "Heildarþekja") |>
1707232902431:select(Type, Year, Mean)
1707232902458:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707232902483:df_with_heildarþekja <- bind_rows(df, combined_df)
1707232902519:library(scales)
1707232902547:# Ensure Type is ordered as desired
1707232902565:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707232902592:# Plot
1707232902607:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
1707232902625:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707232902642:scale_fill_brewer(palette = "Set1") +
1707232902657:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707232902674:# Example secondary axis (e.g., double the Mean for illustration)
1707232902690:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707232902706:labs(title = "",
1707232902720:y = "Meðalþekja", x = "") +
1707232902736:theme_minimal()+
1707232902753:theme(legend.title = element_blank(),
1707232902769:plot.background = element_rect(fill = "white", color = NA)) +
1707232902786:annotate("text", x = 2, y = Inf, label = i, hjust = 1, vjust = 1, size = 5, angle = 0)
1707232902819:Filename <-  glue(i,"-","{paste(unique(species_counts$Reitur), collapse='_')}.png")
1707232902834:ggsave(filename = Filename, plot = p1, width = 11.7, height = 8.3, dpi = 300, units = "in")
1707232902864:}
1707232933666:joined_data |>
1707232933684:filter(Stadur %in% i &
1707232933703:!Type %in% c("Grænþörungar", "Cyanobacteria")) |>
1707232933720:select(where(~ !all(is.na(.)))) |>
1707232933737:pivot_longer(cols = c(`2020`, `2023`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`),
1707232933753:names_to = "Year",
1707232933769:values_to = "Coverage")
1707233095273:# lúppa fyrir myndir allra staða - stöplarit: "Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"
1707233095294:for (i in unique(joined_data$Stadur)[19]) {
1707233095333:filtered_data <- joined_data %>%
1707233095349:filter(Stadur %in% i & !Type %in% c("Grænþörungar", "Cyanobacteria")) %>%
1707233095366:select(where(~ !all(is.na(.))))
1707233095396:# Dynamically identify year columns that exist after filtering
1707233095417:year_columns <- c('1976', '1997', '2006', '2011', '2014', '2017', '2020', '2023')
1707233095438:existing_year_columns <- year_columns[year_columns %in% colnames(filtered_data)]
1707233095471:# Pivot longer only with existing year columns
1707233095488:jd_long <- filtered_data %>%
1707233095504:pivot_longer(cols = existing_year_columns, names_to = "Year", values_to = "Coverage")
1707233095531:# Assuming jd_long is what you intended to use instead of jd_long_Engin_NA
1707233095548:jd_long_Engin_NA <- jd_long#[!is.na(jd_long$Coverage),]
1707233095575:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707233095593:if ("package:plyr" %in% search()) {
1707233095611:# Detach 'plyr' if it is loaded
1707233095627:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707233095642:}
1707233095671:species_counts <- jd_long_Engin_NA[!is.na(jd_long$Coverage),] %>%
1707233095687:group_by(Reitur, Year) %>%
1707233095705:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707233095732:# Meðalfjöldi tegunda í reit á ári
1707233095747:mean_species_per_year <- species_counts %>%
1707233095763:group_by(Year) %>%
1707233095779:summarise(Mean = mean(SpeciesCount)) |>
1707233095798:mutate(Type = "Tegundafjöldi")
1707233095829:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707233095847:library(plyr)
1707233095865:df <- jd_long_Engin_NA |>
1707233095882:ddply(.(Type,Year,Stadur,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707233095899:ddply(.(Type,Year,Stadur),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707233095925:#Leggja saman heildarþekju allra reita innan ára
1707233095942:df_summary <- df |>
1707233095959:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707233095975:sums_row <- df_summary %>%
1707233095990:mutate(Type = "Heildarþekja") |>
1707233096005:select(Type, Year, Mean)
1707233096034:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707233096061:df_with_heildarþekja <- bind_rows(df, combined_df)
1707233096101:library(scales)
1707233096127:# Ensure Type is ordered as desired
1707233096146:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707233096174:# Plot
1707233096190:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
1707233096206:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707233096222:scale_fill_brewer(palette = "Set1") +
1707233096239:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707233096256:# Example secondary axis (e.g., double the Mean for illustration)
1707233096274:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707233096292:labs(title = "",
1707233096309:y = "Meðalþekja", x = "") +
1707233096327:theme_minimal()+
1707233096346:theme(legend.title = element_blank(),
1707233096361:plot.background = element_rect(fill = "white", color = NA)) +
1707233096376:annotate("text", x = 2, y = Inf, label = i, hjust = 1, vjust = 1, size = 5, angle = 0)
1707233096407:Filename <-  glue(i,"-","{paste(unique(species_counts$Reitur), collapse='_')}.png")
1707233096423:ggsave(filename = Filename, plot = p1, width = 11.7, height = 8.3, dpi = 300, units = "in")
1707233096453:}
1707233099505:p1
1707233134286:# lúppa fyrir myndir allra staða - stöplarit: "Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"
1707233134309:for (i in unique(joined_data$Stadur)) {
1707233134349:filtered_data <- joined_data %>%
1707233134365:filter(Stadur %in% i & !Type %in% c("Grænþörungar", "Cyanobacteria")) %>%
1707233134382:select(where(~ !all(is.na(.))))
1707233134412:# Dynamically identify year columns that exist after filtering
1707233134428:year_columns <- c('1976', '1997', '2006', '2011', '2014', '2017', '2020', '2023')
1707233134445:existing_year_columns <- year_columns[year_columns %in% colnames(filtered_data)]
1707233134472:# Pivot longer only with existing year columns
1707233134488:jd_long <- filtered_data %>%
1707233134504:pivot_longer(cols = existing_year_columns, names_to = "Year", values_to = "Coverage")
1707233134533:# Assuming jd_long is what you intended to use instead of jd_long_Engin_NA
1707233134549:jd_long_Engin_NA <- jd_long#[!is.na(jd_long$Coverage),]
1707233134577:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707233134592:if ("package:plyr" %in% search()) {
1707233134608:# Detach 'plyr' if it is loaded
1707233134622:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707233134637:}
1707233134664:species_counts <- jd_long_Engin_NA[!is.na(jd_long$Coverage),] %>%
1707233134679:group_by(Reitur, Year) %>%
1707233134693:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707233134720:# Meðalfjöldi tegunda í reit á ári
1707233134734:mean_species_per_year <- species_counts %>%
1707233134750:group_by(Year) %>%
1707233134765:summarise(Mean = mean(SpeciesCount)) |>
1707233134782:mutate(Type = "Tegundafjöldi")
1707233134810:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707233134826:library(plyr)
1707233134841:df <- jd_long_Engin_NA |>
1707233134856:ddply(.(Type,Year,Stadur,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707233134872:ddply(.(Type,Year,Stadur),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707233134899:#Leggja saman heildarþekju allra reita innan ára
1707233134913:df_summary <- df |>
1707233134930:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707233134945:sums_row <- df_summary %>%
1707233134961:mutate(Type = "Heildarþekja") |>
1707233134978:select(Type, Year, Mean)
1707233135009:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707233135035:df_with_heildarþekja <- bind_rows(df, combined_df)
1707233135075:library(scales)
1707233135111:# Ensure Type is ordered as desired
1707233135129:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707233135160:# Plot
1707233135180:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
1707233135195:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707233135211:scale_fill_brewer(palette = "Set1") +
1707233135227:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707233135243:# Example secondary axis (e.g., double the Mean for illustration)
1707233135260:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707233135303:labs(title = "",
1707233135325:y = "Meðalþekja", x = "") +
1707233135341:theme_minimal()+
1707233135359:theme(legend.title = element_blank(),
1707233135374:plot.background = element_rect(fill = "white", color = NA)) +
1707233135394:annotate("text", x = 2, y = Inf, label = i, hjust = 1, vjust = 1, size = 5, angle = 0)
1707233135427:Filename <-  glue(i,"-","{paste(unique(species_counts$Reitur), collapse='_')}.png")
1707233135444:ggsave(filename = Filename, plot = p1, width = 11.7, height = 8.3, dpi = 300, units = "in")
1707233135473:}
1707233289139:jd_long <- joined_data |>
1707233289158:filter(Fluor==1 &
1707233289175:!Type %in% c("Grænþörungar", "Cyanobacteria")) |>
1707233289193:pivot_longer(cols = c(`2020`, `2023`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`),
1707233289209:names_to = "Year",
1707233289225:values_to = "Coverage")
1707233289279:jd_long_Engin_NA <- jd_long#[!is.na(jd_long$Coverage),]
1707233289326:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707233289344:if ("package:plyr" %in% search()) {
1707233289361:# Detach 'plyr' if it is loaded
1707233289377:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707233289395:}
1707233289423:species_counts <- jd_long_Engin_NA[!is.na(jd_long$Coverage),] %>%
1707233289437:group_by(Reitur, Year) %>%
1707233289453:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707233289491:# Meðalfjöldi tegunda í reit á ári
1707233289507:mean_species_per_year <- species_counts %>%
1707233289521:group_by(Year) %>%
1707233289537:summarise(Mean = mean(SpeciesCount)) |>
1707233289552:mutate(Type = "Tegundafjöldi")
1707233289586:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707233289602:library(plyr)
1707233289637:df <- jd_long_Engin_NA |>
1707233289652:ddply(.(Type,Year,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707233289667:ddply(.(Type,Year),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707233289728:#Leggja saman heildarþekju allra reita innan ára
1707233289743:df_summary <- df |>
1707233289765:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707233289788:sums_row <- df_summary %>%
1707233289838:mutate(Type = "Heildarþekja") |>
1707233289860:select(Type, Year, Mean)
1707233289891:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707233289917:df_with_heildarþekja <- bind_rows(df, combined_df)
1707233289955:library(scales)
1707233289982:# Ensure Type is ordered as desired
1707233289997:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707233290026:# Plot
1707233290040:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
1707233290054:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707233290068:scale_fill_brewer(palette = "Set1") +
1707233290089:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707233290109:# Example secondary axis (e.g., double the Mean for illustration)
1707233290130:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707233290150:labs(title = "",
1707233290167:y = "Meðalþekja", x = "") +
1707233290188:theme_minimal()+
1707233290204:theme(legend.title = element_blank(),
1707233290221:plot.background = element_rect(fill = "white", color = NA)) +
1707233290235:annotate("text", x = 2, y = Inf, label = "Þynningarsvæði F", hjust = 1, vjust = 1, size = 5, angle = 0)
1707233290272:Filename <-  glue("ÞynningarsvæðiF","-","{paste(unique(species_counts$Reitur), collapse='_')}.png")
1707233290288:ggsave(filename = Filename, plot = p1, width = 11.7, height = 8.3, dpi = 300, units = "in")
1707233431819:jd_long <- joined_data |>
1707233431836:filter(Brennisteinn==1 &
1707233431854:!Type %in% c("Grænþörungar", "Cyanobacteria")) |>
1707233431865:pivot_longer(cols = c(`2020`, `2023`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`),
1707233431877:names_to = "Year",
1707233431888:values_to = "Coverage")
1707233431941:jd_long_Engin_NA <- jd_long#[!is.na(jd_long$Coverage),]
1707233431988:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707233432004:if ("package:plyr" %in% search()) {
1707233432019:# Detach 'plyr' if it is loaded
1707233432036:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707233432051:}
1707233432081:species_counts <- jd_long_Engin_NA[!is.na(jd_long$Coverage),] %>%
1707233432098:group_by(Reitur, Year) %>%
1707233432115:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707233432149:# Meðalfjöldi tegunda í reit á ári
1707233432168:mean_species_per_year <- species_counts %>%
1707233432186:group_by(Year) %>%
1707233432202:summarise(Mean = mean(SpeciesCount)) |>
1707233432219:mutate(Type = "Tegundafjöldi")
1707233432253:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707233432267:library(plyr)
1707233432300:df <- jd_long_Engin_NA |>
1707233432314:ddply(.(Type,Year,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707233432329:ddply(.(Type,Year),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707233432400:#Leggja saman heildarþekju allra reita innan ára
1707233432416:df_summary <- df |>
1707233432430:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707233432450:sums_row <- df_summary %>%
1707233432468:mutate(Type = "Heildarþekja") |>
1707233432480:select(Type, Year, Mean)
1707233432510:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707233432530:df_with_heildarþekja <- bind_rows(df, combined_df)
1707233432560:library(scales)
1707233432580:# Ensure Type is ordered as desired
1707233432594:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707233432618:# Plot
1707233432632:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
1707233432648:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707233432664:scale_fill_brewer(palette = "Set1") +
1707233432681:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707233432698:# Example secondary axis (e.g., double the Mean for illustration)
1707233432716:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707233432732:labs(title = "",
1707233432746:y = "Meðalþekja", x = "") +
1707233432759:theme_minimal()+
1707233432776:theme(legend.title = element_blank(),
1707233432791:plot.background = element_rect(fill = "white", color = NA)) +
1707233432808:annotate("text", x = 2, y = Inf, label = "Þynningarsvæði F", hjust = 1, vjust = 1, size = 5, angle = 0)
1707233432855:Filename <-  glue("ÞynningarsvæðiS","-","{paste(unique(species_counts$Reitur), collapse='_')}.png")
1707233432871:ggsave(filename = Filename, plot = p1, width = 11.7, height = 8.3, dpi = 300, units = "in")
1707233460699:jd_long <- joined_data |>
1707233460715:filter(Brennisteinn==1 &
1707233460729:!Type %in% c("Grænþörungar", "Cyanobacteria")) |>
1707233460745:pivot_longer(cols = c(`2020`, `2023`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`),
1707233460760:names_to = "Year",
1707233460777:values_to = "Coverage")
1707233460837:jd_long_Engin_NA <- jd_long#[!is.na(jd_long$Coverage),]
1707233460880:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707233460898:if ("package:plyr" %in% search()) {
1707233460914:# Detach 'plyr' if it is loaded
1707233460931:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707233460948:}
1707233460978:species_counts <- jd_long_Engin_NA[!is.na(jd_long$Coverage),] %>%
1707233460994:group_by(Reitur, Year) %>%
1707233461011:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707233461048:# Meðalfjöldi tegunda í reit á ári
1707233461065:mean_species_per_year <- species_counts %>%
1707233461081:group_by(Year) %>%
1707233461100:summarise(Mean = mean(SpeciesCount)) |>
1707233461116:mutate(Type = "Tegundafjöldi")
1707233461152:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707233461168:library(plyr)
1707233461202:df <- jd_long_Engin_NA |>
1707233461218:ddply(.(Type,Year,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707233461235:ddply(.(Type,Year),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707233461303:#Leggja saman heildarþekju allra reita innan ára
1707233461322:df_summary <- df |>
1707233461339:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707233461363:sums_row <- df_summary %>%
1707233461381:mutate(Type = "Heildarþekja") |>
1707233461401:select(Type, Year, Mean)
1707233461439:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707233461468:df_with_heildarþekja <- bind_rows(df, combined_df)
1707233461510:library(scales)
1707233461537:# Ensure Type is ordered as desired
1707233461554:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707233461581:# Plot
1707233461597:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
1707233461612:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707233461626:scale_fill_brewer(palette = "Set1") +
1707233461642:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707233461658:# Example secondary axis (e.g., double the Mean for illustration)
1707233461674:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707233461690:labs(title = "",
1707233461707:y = "Meðalþekja", x = "") +
1707233461723:theme_minimal()+
1707233461739:theme(legend.title = element_blank(),
1707233461753:plot.background = element_rect(fill = "white", color = NA)) +
1707233461768:annotate("text", x = 2, y = Inf, label = "Þynningarsvæði S", hjust = 1, vjust = 1, size = 5, angle = 0)
1707233461807:Filename <-  glue("ÞynningarsvæðiS","-","{paste(unique(species_counts$Reitur), collapse='_')}.png")
1707233461823:ggsave(filename = Filename, plot = p1, width = 11.7, height = 8.3, dpi = 300, units = "in")
1707294129781:data <- read.csv("gogn/hreinsad.csv", check.names = F)
1707294133151:joined_data <- data %>%
1707294133171:left_join(KM, by = "Reitur") %>%
1707294133190:select(species, Type, Reitur, km, everything())
1707294201301:joined_data <- data %>%
1707294201315:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) %>%
1707294201328:select(species, Type, Reitur, km, everything()) |>
1707294201341:select(-c(`1999`)) |>
1707294201352:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28", "R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62")) |>
1707294201364:#mutate(Type = if_else(species == "Ber klöpp", "Ber klöpp", Type)) |>
1707294201377:filter(!species %in% "Ber klöpp")
1707294336655:joined_data <- data %>%
1707294336677:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) %>%
1707294336694:select(species, Type, Reitur, km, everything()) |>
1707294336709:select(-c(`1999`)) |>
1707294336727:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28",
1707294336746:"R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62") &
1707294336765:Type %in% "Blað- og runnfléttur") |>
1707294336782:#mutate(Type = if_else(species == "Ber klöpp", "Ber klöpp", Type)) |>
1707294336799:filter(!species %in% "Ber klöpp") |>
1707294336817:group_by(km,Fluor,Brennisteinn,Stadur) %>%
1707294336834:summarise(CoverageChange=mean(CoverageChange, na.rm = T), .groups = 'drop')
1707294354917:search()
1707294360053:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707294360076:if ("package:plyr" %in% search()) {
1707294360097:# Detach 'plyr' if it is loaded
1707294360114:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707294360130:}
1707294365375:joined_data <- data %>%
1707294365396:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) %>%
1707294365413:select(species, Type, Reitur, km, everything()) |>
1707294365431:select(-c(`1999`)) |>
1707294365448:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28",
1707294365464:"R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62") &
1707294365483:Type %in% "Blað- og runnfléttur") |>
1707294365499:#mutate(Type = if_else(species == "Ber klöpp", "Ber klöpp", Type)) |>
1707294365516:filter(!species %in% "Ber klöpp") |>
1707294365532:group_by(km,Fluor,Brennisteinn,Stadur) %>%
1707294365548:summarise(CoverageChange=mean(CoverageChange, na.rm = T), .groups = 'drop')
1707294387930:jd_long <- data %>%
1707294387958:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) %>%
1707294387975:select(species, Type, Reitur, km, everything()) |>
1707294387991:select(-c(`1999`)) |>
1707294388006:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28",
1707294388023:"R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62") &
1707294388039:Type %in% "Blað- og runnfléttur") |>
1707294388054:#mutate(Type = if_else(species == "Ber klöpp", "Ber klöpp", Type)) |>
1707294388071:filter(!species %in% "Ber klöpp") |>
1707294388085:group_by(km,Fluor,Brennisteinn,Stadur) %>%
1707294388103:summarise(CoverageChange=mean(CoverageChange, na.rm = T), .groups = 'drop')
1707294389286:# Add regression lines
1707294389302:ggplot(jd_long, aes(x=km, y=CoverageChange)) +
1707294389319:geom_point() +
1707294389332:geom_smooth(method=lm)
1707294408586:# Add a new column for point type based on conditions
1707294408604:jd_long <- jd_long %>%
1707294408619:mutate(PointType = case_when(
1707294408636:!is.na(Fluor) ~ "Fluor",
1707294408653:!is.na(Brennisteinn) ~ "Brennisteinn",
1707294408668:TRUE ~ "Other"
1707294408684:))
1707294411060:# Plot with conditional aesthetics and a single line for "Other"
1707294411085:ggplot(jd_long, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707294411102:geom_point() + # Plot all points with conditional shapes and colors
1707294411117:geom_smooth(data = subset(jd_long, PointType == "Other"), method = "lm", se = FALSE, aes(group = 1, color = "Other")) + # Only draw line for "Other"
1707294411133:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) + # 17 is triangle, 15 is square
1707294411149:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707294411165:theme_minimal() +
1707294411180:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707294411198:x = "Distance from Source (km)",
1707294411214:y = "Coverage Change",
1707294411230:shape = "Point Type",
1707294411245:color = "Point Type") +
1707294411260:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black"))) # Adjust legend to reflect the aesthetics accurately
1707294419085:jd_long
1707294447543:as.data.frame(jd_long)
1707294579712:jd_long <- data %>%
1707294579737:left_join(KM, by = c("Reitur", "Type", "species","2020","2023", "Fluor", "Brennisteinn")) |>
1707294579753:mutate(CoverageChange = (`2020` - `2017`) ) %>%
1707294579769:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`,`2023`, `2020`)) |>
1707294579786:select(species, Type, Reitur, km, everything()) |>
1707294579803:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28",
1707294579819:"R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62") &
1707294579835:Type %in% "Blað- og runnfléttur") |>
1707294579851:#mutate(Type = if_else(species == "Ber klöpp", "Ber klöpp", Type)) |>
1707294579866:filter(!species %in% "Ber klöpp") |>
1707294579883:group_by(km,Fluor,Brennisteinn,Stadur) %>%
1707294579898:summarise(CoverageChange=mean(CoverageChange, na.rm = T), .groups = 'drop')
1707294638693:data %>%
1707294638705:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707294638717:mutate(CoverageChange = (`2020` - `2017`) ) %>%
1707294638731:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`,`2023`, `2020`)) |>
1707294638744:select(species, Type, Reitur, km, everything()) |>
1707294638757:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28",
1707294638770:"R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62") &
1707294638786:Type %in% "Blað- og runnfléttur") |>
1707294638800:#mutate(Type = if_else(species == "Ber klöpp", "Ber klöpp", Type)) |>
1707294638815:filter(!species %in% "Ber klöpp") |>
1707294638830:group_by(km,Fluor,Brennisteinn,Stadur) %>%
1707294638846:summarise(CoverageChange=mean(CoverageChange, na.rm = T), .groups = 'drop')
1707294664968:data %>%
1707294664990:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707294665005:mutate(CoverageChange = (`2020` - `2017`) ) %>%
1707294665017:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`,`2023`, `2020`)) |>
1707294665030:select(species, Type, Reitur, km, everything()) |>
1707294665046:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28",
1707294665062:"R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62") &
1707294665078:Type %in% "Blað- og runnfléttur") |>
1707294665094:filter(!species %in% "Ber klöpp") |>
1707294665110:group_by(km,Fluor,Brennisteinn,Stadur) %>%
1707294665125:summarise(CoverageChange=mean(CoverageChange, na.rm = T), .groups = 'drop')
1707294675094:data %>%
1707294675112:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707294675128:mutate(CoverageChange = (`2020` - `2017`) ) %>%
1707294675144:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`,`2023`, `2020`)) |>
1707294675158:select(species, Type, Reitur, km, everything())
1707294695167:data %>%
1707294695185:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707294695202:mutate(CoverageChange = (`2020` - `2017`) ) %>%
1707294695217:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`,`2023`, `2020`)) |>
1707294695232:select(species, Type, Reitur, km, everything()) |>
1707294695249:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28",
1707294695266:"R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62") &
1707294695282:Type %in% "Blað- og runnfléttur") |>
1707294695297:filter(!species %in% "Ber klöpp")
1707294704317:data %>%
1707294704338:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707294704354:mutate(CoverageChange = (`2020` - `2017`) ) %>%
1707294704372:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`,`2023`, `2020`)) |>
1707294704388:select(species, Type, Reitur, km, everything()) |>
1707294704405:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28",
1707294704419:"R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62") &
1707294704434:Type %in% "Blað- og runnfléttur") |>
1707294704450:filter(!species %in% "Ber klöpp") |>
1707294704467:group_by(km,Fluor,Brennisteinn,Stadur)
1707294723620:data %>%
1707294723635:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707294723648:mutate(CoverageChange = (`2020` - `2017`) ) %>%
1707294723664:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`,`2023`, `2020`)) |>
1707294723680:select(species, Type, Reitur, km, everything()) |>
1707294723697:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28",
1707294723713:"R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62") &
1707294723729:Type %in% "Blað- og runnfléttur") |>
1707294723743:filter(!species %in% "Ber klöpp") |>
1707294723758:group_by(km,Fluor,Brennisteinn,Stadur) %>%
1707294723773:summarise(CoverageChange=mean(CoverageChange, na.rm = T), .groups = 'drop')
1707294749872:jd_long <-data %>%
1707294749894:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707294749911:mutate(CoverageChange = (`2020` - `2017`) ) %>%
1707294749929:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`,`2023`, `2020`)) |>
1707294749944:select(species, Type, Reitur, km, everything()) |>
1707294749960:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28",
1707294749976:"R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62") &
1707294749993:Type %in% "Blað- og runnfléttur") |>
1707294750009:filter(!species %in% "Ber klöpp") |>
1707294750025:group_by(km,Fluor,Brennisteinn,Stadur) %>%
1707294750040:summarise(CoverageChange=mean(CoverageChange, na.rm = T), .groups = 'drop')
1707294753502:jd_long
1707294758406:# Add a new column for point type based on conditions
1707294758427:jd_long <- jd_long %>%
1707294758447:mutate(PointType = case_when(
1707294758462:!is.na(Fluor) ~ "Fluor",
1707294758478:!is.na(Brennisteinn) ~ "Brennisteinn",
1707294758491:TRUE ~ "Other"
1707294758509:))
1707294761958:jd_long
1707294811544:# Add a new column for point type based on conditions
1707294811566:jd_long <- jd_long %>%
1707294811583:mutate(PointType = case_when(
1707294811599:Fluor==1 ~ "Fluor",
1707294811616:Brennisteinn==1 ~ "Brennisteinn",
1707294811634:TRUE ~ "Other"
1707294811650:))
1707294814965:jd_long
1707294845091:# Plot with conditional aesthetics and a single line for "Other"
1707294845118:ggplot(jd_long, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707294845140:geom_point() + # Plot all points with conditional shapes and colors
1707294845157:geom_smooth(data = subset(jd_long, PointType == "Other"), method = "lm", se = FALSE, aes(group = 1, color = "Other")) + # Only draw line for "Other"
1707294845176:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) + # 17 is triangle, 15 is square
1707294845194:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707294845208:theme_minimal() +
1707294845224:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707294845242:x = "Distance from Source (km)",
1707294845255:y = "Coverage Change",
1707294845268:shape = "Point Type",
1707294845286:color = "Point Type") +
1707294845303:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black"))) # Adjust legend to reflect the aesthetics accurately
1707294933160:jd_long <-data %>%
1707294933180:left_join(KM, by = c("Reitur", "Type", "species","2020","2017")) |>
1707294933197:mutate(CoverageChange = (`2020` - `2017`) ) %>%
1707294933212:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`,`2023`, `2020`)) |>
1707294933233:select(species, Type, Reitur, km, everything()) |>
1707294933250:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28",
1707294933266:"R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62") &
1707294933282:Type %in% "Blað- og runnfléttur") |>
1707294933299:filter(!species %in% "Ber klöpp") |>
1707294933315:group_by(km,Fluor,Brennisteinn,Stadur) %>%
1707294933331:summarise(CoverageChange=mean(CoverageChange, na.rm = T), .groups = 'drop')
1707294964014:jd_long <-data %>%
1707294964034:left_join(KM, by = c("Reitur", "Type", "species","2020","2023"))
1707295000034:data %>%
1707295000052:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707295000068:mutate(CoverageChange = (`2020` - `2017`) ) %>%
1707295000083:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`,`2023`, `2020`)) |>
1707295000100:select(species, Type, Reitur, km, everything()) |>
1707295000115:filter(!Reitur %in% c("R1", "R2", "R4", "R5"
1707295013310:jd_long <-data %>%
1707295013327:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707295013341:mutate(CoverageChange = (`2020` - `2017`) ) %>%
1707295013357:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`,`2023`, `2020`)) |>
1707295013372:select(species, Type, Reitur, km, everything()) |>
1707295013388:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28",
1707295013404:"R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62") &
1707295013420:Type %in% "Blað- og runnfléttur")
1707295129574:jd_long
1707295158813:jd_long[!is.na(jd_long$CoverageChange),]
1707295202688:# Add a new column for point type based on conditions
1707295202706:jd_long <- jd_long %>%
1707295202723:mutate(PointType = case_when(
1707295202742:Fluor==1 ~ "Fluor",
1707295202757:Brennisteinn==1 ~ "Brennisteinn",
1707295202774:TRUE ~ "Other"
1707295202791:))
1707295212921:jd_long[!is.na(jd_long$CoverageChange) & jd_long$PointType=="Other" ,]
1707295232510:str(jd_long[!is.na(jd_long$CoverageChange) & jd_long$PointType=="Other" ,])
1707295324200:jd_long <-data %>%
1707295324222:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707295324244:mutate(CoverageChange = (`2020` - `2017`) ) %>%
1707295324261:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`,`2023`, `2020`)) |>
1707295324276:select(species, Type, Reitur, km, everything()) |>
1707295324291:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28",
1707295324309:"R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62") &
1707295324326:Type %in% "Blað- og runnfléttur") |>
1707295324344:filter(!species %in% "Ber klöpp") |>
1707295324358:group_by(km,Fluor,Brennisteinn,Stadur) %>%
1707295324378:summarise(CoverageChange=mean(CoverageChange, na.rm = T), .groups = 'drop')
1707295324533:# Add a new column for point type based on conditions
1707295324550:jd_long <- jd_long %>%
1707295324567:mutate(PointType = case_when(
1707295324582:Fluor==1 ~ "Fluor",
1707295324598:Brennisteinn==1 ~ "Brennisteinn",
1707295324614:TRUE ~ "Other"
1707295324633:))
1707295327013:str(jd_long[!is.na(jd_long$CoverageChange) & jd_long$PointType=="Other" ,])
1707295425599:data %>%
1707295425621:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707295425642:mutate(CoverageChange = (`2020` - `2017`) ) %>%
1707295425660:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`,`2023`, `2020`)) |>
1707295425677:select(species, Type, Reitur, km, everything()) |>
1707295425692:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28",
1707295425710:"R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62") &
1707295425727:Type %in% "Blað- og runnfléttur") |>
1707295425746:filter(!species %in% "Ber klöpp")
1707295542855:# Plot with conditional aesthetics and a single line for "Other"
1707295542873:ggplot(jd_long, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707295542888:geom_point() + # Plot all points with conditional shapes and colors
1707295542905:geom_smooth(data = subset(jd_long, PointType == "Other"), method = "lm", se = T, aes(group = 1, color = "Other")) + # Only draw line for "Other"
1707295542922:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) + # 17 is triangle, 15 is square
1707295542939:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707295542955:theme_minimal() +
1707295542971:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707295542988:x = "Distance from Source (km)",
1707295543005:y = "Coverage Change",
1707295543022:shape = "Point Type",
1707295543036:color = "Point Type") +
1707295543052:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black"))) # Adjust legend to reflect the aesthetics accurately
1707295548051:# Plot with conditional aesthetics and a single line for "Other"
1707295548068:ggplot(jd_long, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707295548082:geom_point() + # Plot all points with conditional shapes and colors
1707295548098:geom_smooth(data = subset(jd_long, PointType == "Other"), method = "lm", se = T, aes(group = 1, color = "Other")) + # Only draw line for "Other"
1707295548114:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) + # 17 is triangle, 15 is square
1707295548131:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707295548146:theme_minimal() +
1707295548161:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707295548175:x = "Distance from Source (km)",
1707295548191:y = "Coverage Change",
1707295548205:shape = "Point Type",
1707295548219:color = "Point Type") +
1707295548233:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black"))) # Adjust legend to reflect the aesthetics accurately
1707295570483:?geom smooth
1707295573640:?geom smooth()
1707295579639:?geom_smooth()
1707295640768:jd_long
1707295775097:str(jd_long[!is.na(jd_long$CoverageChange) & jd_long$PointType=="Other" ,])
1707295834911:data %>%
1707295834927:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707295834942:mutate(CoverageChange = (`2020` - `2017`) ) %>%
1707295834957:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`,`2023`, `2020`)) |>
1707295834973:select(species, Type, Reitur, km, everything()) |>
1707295834988:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28",
1707295835003:"R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62") &
1707295835019:Type %in% "Blað- og runnfléttur") |>
1707295835035:filter(!species %in% "Ber klöpp") %>%
1707295835049:mutate(PointType = case_when(
1707295835064:Fluor==1 ~ "Fluor",
1707295835080:Brennisteinn==1 ~ "Brennisteinn",
1707295835095:TRUE ~ "Other"))
1707295869461:library(plyr)
1707295930297:ddply(jd_long,.(km,Fluor,Brennisteinn,Stadur), summarize, CoverageChange=mean(CoverageChange, na.rm = T))
1707295968345:ddply(jd_long,.(km,Fluor,Brennisteinn,Stadur,PointType), summarize, CoverageChange=mean(CoverageChange, na.rm = T))
1707296258840:jd_long <-data %>%
1707296258864:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707296258886:mutate(CoverageChange = (`2020` - `2017`) ) %>%
1707296258908:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`,`2023`, `2020`)) |>
1707296258930:select(species, Type, Reitur, km, everything()) |>
1707296258949:filter(Type %in% "Blað- og runnfléttur") |>
1707296258965:#filter(!species %in% "Ber klöpp") %>%
1707296258981:mutate(PointType = case_when(
1707296258994:Fluor==1 ~ "Fluor",
1707296259008:Brennisteinn==1 ~ "Brennisteinn",
1707296259022:TRUE ~ "Other")) #|>
1707296271771:str(jd_long[!is.na(jd_long$CoverageChange) & jd_long$PointType=="Other" ,])
1707296287889:ddply(jd_long,.(km,Fluor,Brennisteinn,Stadur,PointType), summarize, CoverageChange=mean(CoverageChange, na.rm = T))
1707296314582:data %>%
1707296314604:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707296314622:mutate(CoverageChange = (`2020` - `2017`) ) %>%
1707296314638:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`,`2023`, `2020`)) |>
1707296314656:select(species, Type, Reitur, km, everything()) |>
1707296314673:filter(Type %in% "Blað- og runnfléttur")
1707296332612:jd_long <-data %>%
1707296332639:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707296332658:mutate(CoverageChange = (`2020` - `2017`) ) %>%
1707296332676:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`,`2023`, `2020`)) |>
1707296332693:select(species, Type, Reitur, km, everything()) |>
1707296332711:filter(Type %in% "Blað- og runnfléttur")
1707296343632:jd_long <-data %>%
1707296343649:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707296343666:mutate(CoverageChange = (`2020` - `2017`) ) %>%
1707296343682:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`,`2023`, `2020`)) |>
1707296343696:select(species, Type, Reitur, km, everything()) |>
1707296343713:filter(Type %in% "Blað- og runnfléttur") |>
1707296343729:filter(!species %in% "Ber klöpp")
1707296361352:data <- read.csv("gogn/hreinsad.csv", check.names = F)
1707296368078:jd_long <-data %>%
1707296368094:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707296368112:mutate(CoverageChange = (`2020` - `2017`) ) %>%
1707296368129:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`,`2023`, `2020`)) |>
1707296368144:select(species, Type, Reitur, km, everything()) |>
1707296368159:filter(Type %in% "Blað- og runnfléttur") |>
1707296368173:filter(!species %in% "Ber klöpp")
1707296630035:jd_long <-data %>%
1707296630051:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707296630066:mutate(CoverageChange = (`2020` - `2017`) ) %>%
1707296630082:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`,`2023`, `2020`)) |>
1707296630097:select(species, Type, Reitur, km, everything()) |>
1707296630113:filter(Type %in% "Blað- og runnfléttur") |>
1707296630127:filter(!species %in% "Ber klöpp") %>%
1707296630143:mutate(PointType = case_when(
1707296630160:Fluor==1 ~ "Fluor",
1707296630174:Brennisteinn==1 ~ "Brennisteinn",
1707296630191:TRUE ~ "Other")) #|>
1707296630232:group_by(km,Fluor,Brennisteinn,Stadur) %>%
1707296630248:summarise(CoverageChange=mean(CoverageChange, na.rm = T), .groups = 'drop')
1707296642891:data <- read.csv("gogn/hreinsad.csv", check.names = F)
1707296645337:jd_long <-data %>%
1707296645360:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707296645377:mutate(CoverageChange = (`2020` - `2017`) ) %>%
1707296645392:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`,`2023`, `2020`)) |>
1707296645407:select(species, Type, Reitur, km, everything()) |>
1707296645422:filter(Type %in% "Blað- og runnfléttur") |>
1707296645438:filter(!species %in% "Ber klöpp") %>%
1707296645456:mutate(PointType = case_when(
1707296645470:Fluor==1 ~ "Fluor",
1707296645484:Brennisteinn==1 ~ "Brennisteinn",
1707296645499:TRUE ~ "Other")) #|>
1707296649311:jd_long
1707296654170:ddply(jd_long,.(km,Fluor,Brennisteinn,Stadur,PointType), summarize, CoverageChange=mean(CoverageChange, na.rm = T))
1707296665831:jd_long
1707296710775:jd_long <-data %>%
1707296710792:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707296710810:mutate(CoverageChange = (`2020` - `2017`) ) %>%
1707296710827:#select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`,`2023`, `2020`)) |>
1707296710842:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707296710857:select(species, Type, Reitur, km, everything()) |>
1707296710871:filter(Type %in% "Blað- og runnfléttur") |>
1707296710888:filter(!species %in% "Ber klöpp") %>%
1707296710902:mutate(PointType = case_when(
1707296710921:Fluor==1 ~ "Fluor",
1707296710935:Brennisteinn==1 ~ "Brennisteinn",
1707296710951:TRUE ~ "Other")) #|>
1707296712345:ddply(jd_long,.(km,Fluor,Brennisteinn,Stadur,PointType), summarize, CoverageChange=mean(CoverageChange, na.rm = T))
1707296731203:ddply(jd_long,.(km,Fluor,Brennisteinn,Stadur,PointType,`2017`,`2023`), summarize, CoverageChange=mean(CoverageChange, na.rm = T))
1707296744473:jd_long <-data %>%
1707296744493:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707296744508:mutate(CoverageChange = (`2020` - `2017`) ) %>%
1707296744523:#select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`,`2023`, `2020`)) |>
1707296744538:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707296744551:select(species, Type, Reitur, km, everything()) |>
1707296744565:filter(Type %in% "Blað- og runnfléttur") |>
1707296744580:filter(!species %in% "Ber klöpp") %>%
1707296744597:mutate(PointType = case_when(
1707296744613:Fluor==1 ~ "Fluor",
1707296744631:Brennisteinn==1 ~ "Brennisteinn",
1707296744647:TRUE ~ "Other")) #|>
1707296747507:ddply(jd_long,.(km,Fluor,Brennisteinn,Stadur,PointType,`2017`,`2023`), summarize, CoverageChange=mean(CoverageChange, na.rm = T))
1707296751883:# Plot with conditional aesthetics and a single line for "Other"
1707296751904:ggplot(jd_long, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707296751922:geom_point() + # Plot all points with conditional shapes and colors
1707296751938:geom_smooth(data = subset(jd_long, PointType == "Other"), method = "lm", se = T, aes(group = 1, color = "Other")) + # Only draw line for "Other"
1707296751953:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) + # 17 is triangle, 15 is square
1707296751969:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707296751985:theme_minimal() +
1707296752002:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707296752019:x = "Distance from Source (km)",
1707296752034:y = "Coverage Change",
1707296752051:shape = "Point Type",
1707296752066:color = "Point Type") +
1707296752083:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black"))) # Adjust legend to reflect the aesthetics accurately
1707296763359:jd_long
1707296781334:ddply(jd_long,.(km,Fluor,Brennisteinn,Stadur,PointType,`2017`,`2020`), summarize, CoverageChange=mean(CoverageChange, na.rm = T))
1707296802217:ddply(jd_long,.(km,Fluor,Brennisteinn,Stadur,Reitur,PointType,`2017`,`2020`), summarize, CoverageChange=mean(CoverageChange, na.rm = T))
1707296892630:data[data$Reitur=="R34",]
1707297226071:##
1707297226095:jd_long <-data %>%
1707297226119:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707297226136:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707297226151:filter(Type %in% "Blað- og runnfléttur") |>
1707297226168:filter(!species %in% "Ber klöpp") |>
1707297226218:# Assuming jd_long has already been mutated to include the PointType column as previously described
1707297226245:# Plot with conditional aesthetics and a single line for "Other"
1707297226262:ggplot(jd_long, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707297226279:geom_point() + # Plot all points with conditional shapes and colors
1707297226296:geom_smooth(data = subset(jd_long, PointType == "Other"), method = "lm", se = T, aes(group = 1, color = "Other")) + # Only draw line for "Other"
1707297226317:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) + # 17 is triangle, 15 is square
1707297226337:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707297226356:theme_minimal() +
1707297226373:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707297226391:x = "Distance from Source (km)",
1707297226409:y = "Coverage Change",
1707297226426:shape = "Point Type",
1707297226442:color = "Point Type") +
1707297226460:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black"))) # Adjust legend to reflect the aesthetics accurately
1707297236529:jd_long <-data %>%
1707297236546:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707297236563:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707297236578:filter(Type %in% "Blað- og runnfléttur") |>
1707297236594:filter(!species %in% "Ber klöpp")
1707297265015:if ("package:plyr" %in% search()) {
1707297265033:# Detach 'plyr' if it is loaded
1707297265049:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707297265066:}
1707297371351:jd_long <-data %>%
1707297371370:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707297371386:mutate(CoverageChange = (`2020` - `2017`) ) %>%
1707297371401:#select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`,`2023`, `2020`)) |>
1707297371416:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707297371434:select(species, Type, Reitur, km, everything()) |>
1707297371452:filter(Type %in% "Blað- og runnfléttur") |>
1707297371467:filter(!species %in% "Ber klöpp") %>%
1707297371484:mutate(PointType = case_when(
1707297371505:Fluor==1 ~ "Fluor",
1707297371521:Brennisteinn==1 ~ "Brennisteinn",
1707297371538:TRUE ~ "Other")) |>
1707297371555:group_by(km,Fluor,Brennisteinn,Stadur,Reitur,PointType,`2017`,`2020`) %>%
1707297371572:summarise(CoverageChange=mean(CoverageChange, na.rm = T), .groups = 'drop')
1707297380218:jd_long
1707297409840:jd_long <-data %>%
1707297409857:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707297409873:mutate(CoverageChange = (`2020` - `2017`) ) %>%
1707297409887:#select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`,`2023`, `2020`)) |>
1707297409902:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707297409918:select(species, Type, Reitur, km, everything()) |>
1707297409933:filter(Type %in% "Blað- og runnfléttur") |>
1707297409950:filter(!species %in% "Ber klöpp") %>%
1707297409965:mutate(PointType = case_when(
1707297409984:Fluor==1 ~ "Fluor",
1707297410002:Brennisteinn==1 ~ "Brennisteinn",
1707297410017:TRUE ~ "Other"))
1707297439482:jd_long
1707297573243:##
1707297573264:jd_long <-data %>%
1707297573280:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707297573297:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707297573313:filter(Type %in% "Blað- og runnfléttur") |>
1707297573329:filter(!species %in% "Ber klöpp") |>
1707297573342:filter(is.na())
1707297588657:##
1707297588677:jd_long <-data %>%
1707297588691:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707297588706:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707297588719:filter(Type %in% "Blað- og runnfléttur") |>
1707297588734:filter(!species %in% "Ber klöpp") |>
1707297588750:filter(is.na(`2017`))
1707297593785:jd_long
1707297609714:jd_long <-data %>%
1707297609729:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707297609746:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707297609763:filter(Type %in% "Blað- og runnfléttur") |>
1707297609779:filter(!species %in% "Ber klöpp") |>
1707297609793:filter(!is.na(`2017`))
1707297616704:jd_long
1707297643413:##
1707297643432:jd_long <-data %>%
1707297643449:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707297643465:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707297643481:filter(Type %in% "Blað- og runnfléttur") |>
1707297643499:filter(!species %in% "Ber klöpp") |>
1707297643515:filter(!is.na(`2017`) | !is.na(`2020`))
1707297649483:jd_long
1707297691442:##
1707297691463:jd_long <-data %>%
1707297691481:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707297691497:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707297691512:filter(Type %in% "Blað- og runnfléttur") |>
1707297691529:filter(!species %in% "Ber klöpp") |>
1707297691545:filter(!is.na(`2017`)) |>
1707297691561:filter(!is.na(`2020`))
1707297701219:jd_long
1707297711580:##
1707297711599:jd_long <-data %>%
1707297711614:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707297711630:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707297711645:filter(Type %in% "Blað- og runnfléttur") |>
1707297711659:filter(!species %in% "Ber klöpp") |>
1707297711674:filter(!is.na(`2017`)) |>
1707297711691:filter(!is.na(`2020`)) |>
1707297711705:mutate(PointType = case_when(
1707297711720:Fluor==1 ~ "Fluor",
1707297711737:Brennisteinn==1 ~ "Brennisteinn",
1707297711754:TRUE ~ "Other")) |>
1707297711769:group_by(km,Fluor,Brennisteinn,Stadur,Reitur,PointType,`2017`,`2020`) |>
1707297711785:summarise(CoverageChange=mean(CoverageChange, na.rm = T), .groups = 'drop')
1707297715833:jd_long
1707297749951:# Plot with conditional aesthetics and a single line for "Other"
1707297749970:ggplot(jd_long, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707297749982:geom_point() + # Plot all points with conditional shapes and colors
1707297749996:geom_smooth(data = subset(jd_long, PointType == "Other"), method = "lm", se = T, aes(group = 1, color = "Other")) + # Only draw line for "Other"
1707297750008:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) + # 17 is triangle, 15 is square
1707297750021:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707297750034:theme_minimal() +
1707297750047:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707297750059:x = "Distance from Source (km)",
1707297750077:y = "Coverage Change",
1707297750093:shape = "Point Type",
1707297750107:color = "Point Type") +
1707297750123:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black"))) # Adjust legend to reflect the aesthetics accurately
1707297803371:##
1707297803389:jd_long <-data %>%
1707297803405:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707297803424:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707297803440:filter(Type %in% "Blað- og runnfléttur") |>
1707297803456:filter(!species %in% "Ber klöpp") |>
1707297803472:filter(!is.na(`2017`)) |>
1707297803486:filter(!is.na(`2020`)) |>
1707297803502:mutate(PointType = case_when(
1707297803519:Fluor==1 ~ "Fluor",
1707297803535:Brennisteinn==1 ~ "Brennisteinn",
1707297803550:TRUE ~ "Other")) |>
1707297803570:group_by(km,Fluor,Brennisteinn,Stadur,Reitur,PointType,`2017`,`2020`) |>
1707297803587:summarise(CoverageChange=`2020`-`2017`, CoverageChange=mean(CoverageChange, na.rm = T), .groups = 'drop')
1707297809627:jd_long
1707297899764:##
1707297899784:jd_long <-data %>%
1707297899801:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707297899817:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707297899832:filter(Type %in% "Blað- og runnfléttur") |>
1707297899848:filter(!species %in% "Ber klöpp") |>
1707297899865:filter(!is.na(`2017`)) |>
1707297899881:filter(!is.na(`2020`)) |>
1707297899897:mutate(PointType = case_when(
1707297899913:Fluor==1 ~ "Fluor",
1707297899929:Brennisteinn==1 ~ "Brennisteinn",
1707297899945:TRUE ~ "Other")) |>
1707297899962:group_by(km,Fluor,Brennisteinn,Stadur,Reitur,PointType,`2017`,`2020`) |>
1707297899978:summarise(CoverageChange=`2020`-`2017`, .groups = 'drop') |>
1707297899994:group_by(km,Fluor,Brennisteinn,Stadur,Reitur,PointType,CoverageChange) |>
1707297900015:summarise(CoverageChange=mean(CoverageChange, na.rm = T), .groups = 'drop')
1707297908809:jd_long
1707297914479:# Plot with conditional aesthetics and a single line for "Other"
1707297914504:ggplot(jd_long, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707297914520:geom_point() + # Plot all points with conditional shapes and colors
1707297914534:geom_smooth(data = subset(jd_long, PointType == "Other"), method = "lm", se = T, aes(group = 1, color = "Other")) + # Only draw line for "Other"
1707297914551:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) + # 17 is triangle, 15 is square
1707297914567:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707297914583:theme_minimal() +
1707297914600:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707297914614:x = "Distance from Source (km)",
1707297914632:y = "Coverage Change",
1707297914648:shape = "Point Type",
1707297914662:color = "Point Type") +
1707297914679:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black"))) # Adjust legend to reflect the aesthetics accurately
1707297932796:##
1707297932820:jd_long <-data %>%
1707297932840:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707297932858:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707297932875:filter(Type %in% "Blað- og runnfléttur") |>
1707297932892:filter(!species %in% "Ber klöpp") |>
1707297932911:filter(!is.na(`2017`)) |>
1707297932929:filter(!is.na(`2020`)) |>
1707297932944:mutate(PointType = case_when(
1707297932959:Fluor==1 ~ "Fluor",
1707297932976:Brennisteinn==1 ~ "Brennisteinn",
1707297932993:TRUE ~ "Other")) |>
1707297933009:group_by(km,Fluor,Brennisteinn,Stadur,Reitur,PointType,`2017`,`2020`) |>
1707297933027:summarise(CoverageChange=`2020`-`2017`, .groups = 'drop') |>
1707297933046:group_by(km,Fluor,Brennisteinn,Stadur,PointType,CoverageChange) |>
1707297933063:summarise(CoverageChange=mean(CoverageChange, na.rm = T), .groups = 'drop')
1707297936395:# Plot with conditional aesthetics and a single line for "Other"
1707297936418:ggplot(jd_long, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707297936434:geom_point() + # Plot all points with conditional shapes and colors
1707297936451:geom_smooth(data = subset(jd_long, PointType == "Other"), method = "lm", se = T, aes(group = 1, color = "Other")) + # Only draw line for "Other"
1707297936468:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) + # 17 is triangle, 15 is square
1707297936484:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707297936498:theme_minimal() +
1707297936511:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707297936526:x = "Distance from Source (km)",
1707297936540:y = "Coverage Change",
1707297936555:shape = "Point Type",
1707297936573:color = "Point Type") +
1707297936589:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black"))) # Adjust legend to reflect the aesthetics accurately
1707297988667:##
1707297988690:jd_long <-data %>%
1707297988708:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707297988724:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707297988738:filter(Type %in% "Blað- og runnfléttur") |>
1707297988753:filter(!species %in% "Ber klöpp") |>
1707297988767:filter(!is.na(`2017`)) |>
1707297988782:filter(!is.na(`2020`)) |>
1707297988798:mutate(PointType = case_when(
1707297988813:Fluor==1 ~ "Fluor",
1707297988831:Brennisteinn==1 ~ "Brennisteinn",
1707297988846:TRUE ~ "Other")) |>
1707297988864:group_by(km,Fluor,Brennisteinn,Stadur,Reitur,PointType,`2017`,`2020`) |>
1707297988883:summarise(CoverageChange=`2020`-`2017`, .groups = 'drop') |>
1707297988899:group_by(Fluor,Brennisteinn,Stadur,PointType,CoverageChange) |>
1707297988916:summarise(CoverageChange=mean(CoverageChange, na.rm = T), km=mean(km), .groups = 'drop')
1707297990751:# Plot with conditional aesthetics and a single line for "Other"
1707297990765:ggplot(jd_long, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707297990777:geom_point() + # Plot all points with conditional shapes and colors
1707297990791:geom_smooth(data = subset(jd_long, PointType == "Other"), method = "lm", se = T, aes(group = 1, color = "Other")) + # Only draw line for "Other"
1707297990803:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) + # 17 is triangle, 15 is square
1707297990814:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707297990826:theme_minimal() +
1707297990839:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707297990851:x = "Distance from Source (km)",
1707297990862:y = "Coverage Change",
1707297990874:shape = "Point Type",
1707297990891:color = "Point Type") +
1707297990908:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black"))) # Adjust legend to reflect the aesthetics accurately
1707298010615:jd_long
1707298108934:##
1707298108956:jd_long <-data %>%
1707298108973:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707298108992:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707298109010:filter(Type %in% "Blað- og runnfléttur") |>
1707298109028:filter(!species %in% "Ber klöpp") |>
1707298109044:filter(!is.na(`2017`)) |>
1707298109063:filter(!is.na(`2020`)) |>
1707298109079:mutate(PointType = case_when(
1707298109096:Fluor==1 ~ "Fluor",
1707298109112:Brennisteinn==1 ~ "Brennisteinn",
1707298109129:TRUE ~ "Other")) |>
1707298109143:group_by(km,Fluor,Brennisteinn,Stadur,Reitur,PointType,`2017`,`2020`) |>
1707298109158:summarise(CoverageChange=`2020`-`2017`, .groups = 'drop') |>
1707298109171:group_by(Fluor,Brennisteinn,Stadur,PointType,CoverageChange) |>
1707298109186:summarise(CoverageChange=mean(CoverageChange, na.rm = T), km=mean(km), .groups = 'drop') |>
1707298109206:group_by(km,Fluor,Brennisteinn,StadurPointType) |>
1707298109221:summarise(CoverageChange=mean(CoverageChange, na.rm = T), .groups = 'drop')
1707298116513:##
1707298116530:jd_long <-data %>%
1707298116542:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707298116554:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707298116565:filter(Type %in% "Blað- og runnfléttur") |>
1707298116580:filter(!species %in% "Ber klöpp") |>
1707298116594:filter(!is.na(`2017`)) |>
1707298116610:filter(!is.na(`2020`)) |>
1707298116626:mutate(PointType = case_when(
1707298116644:Fluor==1 ~ "Fluor",
1707298116662:Brennisteinn==1 ~ "Brennisteinn",
1707298116678:TRUE ~ "Other")) |>
1707298116695:group_by(km,Fluor,Brennisteinn,Stadur,Reitur,PointType,`2017`,`2020`) |>
1707298116712:summarise(CoverageChange=`2020`-`2017`, .groups = 'drop') |>
1707298116726:group_by(Fluor,Brennisteinn,Stadur,PointType,CoverageChange) |>
1707298116744:summarise(CoverageChange=mean(CoverageChange, na.rm = T), km=mean(km), .groups = 'drop') |>
1707298116762:group_by(km,Fluor,Brennisteinn,Stadur,PointType) |>
1707298116777:summarise(CoverageChange=mean(CoverageChange, na.rm = T), .groups = 'drop')
1707298121338:jd_long
1707298127041:# Plot with conditional aesthetics and a single line for "Other"
1707298127061:ggplot(jd_long, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707298127078:geom_point() + # Plot all points with conditional shapes and colors
1707298127094:geom_smooth(data = subset(jd_long, PointType == "Other"), method = "lm", se = T, aes(group = 1, color = "Other")) + # Only draw line for "Other"
1707298127110:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) + # 17 is triangle, 15 is square
1707298127127:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707298127145:theme_minimal() +
1707298127162:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707298127179:x = "Distance from Source (km)",
1707298127195:y = "Coverage Change",
1707298127209:shape = "Point Type",
1707298127222:color = "Point Type") +
1707298127240:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black"))) # Adjust legend to reflect the aesthetics accurately
1707298162058:jd_long
1707298338295:##
1707298338319:jd_long <-data %>%
1707298338334:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707298338347:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707298338361:filter(Type %in% "Blað- og runnfléttur") |>
1707298338377:filter(!species %in% "Ber klöpp") |>
1707298338394:#filter(!is.na(`2017`)) |>
1707298338412:#filter(!is.na(`2020`)) |>
1707298338430:mutate(`2017` = case_when(
1707298338445:is.na(`2017`) ~ 0
1707298338463:),
1707298338477:`2020` = case_when(
1707298338494:is.na(`2020`) ~ 0
1707298338509:),
1707298338525:PointType = case_when(
1707298338540:Fluor==1 ~ "Fluor",
1707298338556:Brennisteinn==1 ~ "Brennisteinn",
1707298338572:TRUE ~ "Other")) |>
1707298338587:group_by(km,Fluor,Brennisteinn,Stadur,Reitur,PointType,`2017`,`2020`) |>
1707298338602:summarise(CoverageChange=`2020`-`2017`, .groups = 'drop') |>
1707298338618:group_by(Fluor,Brennisteinn,Stadur,PointType,CoverageChange) |>
1707298338634:summarise(CoverageChange=mean(CoverageChange, na.rm = T), km=mean(km), .groups = 'drop') |>
1707298338648:group_by(km,Fluor,Brennisteinn,Stadur,PointType) |>
1707298338664:summarise(CoverageChange=mean(CoverageChange, na.rm = T), .groups = 'drop')
1707298352665:# Plot with conditional aesthetics and a single line for "Other"
1707298352690:ggplot(jd_long, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707298352709:geom_point() + # Plot all points with conditional shapes and colors
1707298352725:geom_smooth(data = subset(jd_long, PointType == "Other"), method = "lm", se = T, aes(group = 1, color = "Other")) + # Only draw line for "Other"
1707298352742:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) + # 17 is triangle, 15 is square
1707298352758:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707298352774:theme_minimal() +
1707298352791:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707298352807:x = "Distance from Source (km)",
1707298352822:y = "Coverage Change",
1707298352837:shape = "Point Type",
1707298352851:color = "Point Type") +
1707298352868:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black"))) # Adjust legend to reflect the aesthetics accurately
1707298552244:data %>%
1707298552260:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707298552277:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707298552292:filter(Type %in% "Blað- og runnfléttur") |>
1707298552306:filter(!species %in% "Ber klöpp") |>
1707298552322:#filter(!is.na(`2017`)) |>
1707298552337:#filter(!is.na(`2020`)) |>
1707298552352:mutate(`2017` = case_when(
1707298552370:is.na(`2017`) ~ 0
1707298552386:),
1707298552400:`2020` = case_when(
1707298552416:is.na(`2020`) ~ 0
1707298552432:),
1707298552448:PointType = case_when(
1707298552463:Fluor==1 ~ "Fluor",
1707298552478:Brennisteinn==1 ~ "Brennisteinn",
1707298552494:TRUE ~ "Other"))
1707298609627:##
1707298609649:jd_long <-data %>%
1707298609668:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707298609688:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707298609705:filter(Type %in% "Blað- og runnfléttur") |>
1707298609722:filter(!species %in% "Ber klöpp") |>
1707298609740:#filter(!is.na(`2017`)) |>
1707298609757:#filter(!is.na(`2020`)) |>
1707298609774:mutate(`2017` = case_when(
1707298609790:is.na(`2017`) ~ 0
1707298609806:TRUE ~ `2017`
1707298618444:##
1707298618466:jd_long <-data %>%
1707298618486:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707298618502:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707298618519:filter(Type %in% "Blað- og runnfléttur") |>
1707298618535:filter(!species %in% "Ber klöpp") |>
1707298618551:#filter(!is.na(`2017`)) |>
1707298618567:#filter(!is.na(`2020`)) |>
1707298618582:mutate(`2017` = case_when(
1707298618601:is.na(`2017`) ~ 0,
1707298618619:TRUE ~ `2017`
1707298618635:),
1707298618650:`2020` = case_when(
1707298618667:is.na(`2020`) ~ 0,
1707298618687:TRUE ~ `2020`
1707298618708:),
1707298618725:PointType = case_when(
1707298618744:Fluor==1 ~ "Fluor",
1707298618759:Brennisteinn==1 ~ "Brennisteinn",
1707298618778:TRUE ~ "Other")) |>
1707298618799:group_by(km,Fluor,Brennisteinn,Stadur,Reitur,PointType,`2017`,`2020`) |>
1707298618816:summarise(CoverageChange=`2020`-`2017`, .groups = 'drop') |>
1707298618833:group_by(Fluor,Brennisteinn,Stadur,PointType,CoverageChange) |>
1707298618852:summarise(CoverageChange=mean(CoverageChange, na.rm = T), km=mean(km), .groups = 'drop') |>
1707298618870:group_by(km,Fluor,Brennisteinn,Stadur,PointType) |>
1707298618893:summarise(CoverageChange=mean(CoverageChange, na.rm = T), .groups = 'drop')
1707298623138:# Plot with conditional aesthetics and a single line for "Other"
1707298623160:ggplot(jd_long, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707298623182:geom_point() + # Plot all points with conditional shapes and colors
1707298623200:geom_smooth(data = subset(jd_long, PointType == "Other"), method = "lm", se = T, aes(group = 1, color = "Other")) + # Only draw line for "Other"
1707298623219:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) + # 17 is triangle, 15 is square
1707298623236:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707298623255:theme_minimal() +
1707298623271:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707298623288:x = "Distance from Source (km)",
1707298623306:y = "Coverage Change",
1707298623324:shape = "Point Type",
1707298623342:color = "Point Type") +
1707298623357:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black"))) # Adjust legend to reflect the aesthetics accurately
1707298646626:jd_long <-data %>%
1707298646645:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707298646663:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707298646680:filter(Type %in% "Blað- og runnfléttur") |>
1707298646696:filter(!species %in% "Ber klöpp") |>
1707298646710:#filter(!is.na(`2017`)) |>
1707298646723:#filter(!is.na(`2020`)) |>
1707298646739:mutate(`2017` = case_when(
1707298646754:is.na(`2017`) ~ 0,
1707298646768:TRUE ~ `2017`
1707298646784:),
1707298646799:`2020` = case_when(
1707298646816:is.na(`2020`) ~ 0,
1707298646832:TRUE ~ `2020`
1707298646850:),
1707298646866:PointType = case_when(
1707298646885:Fluor==1 ~ "Fluor",
1707298646900:Brennisteinn==1 ~ "Brennisteinn",
1707298646917:TRUE ~ "Other"))
1707298650570:jd_long
1707298780378:library(tidyverse)
1707298804123:jd_long <-data %>%
1707298804140:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707298804155:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707298804169:filter(Type %in% "Blað- og runnfléttur") |>
1707298804185:filter(!species %in% "Ber klöpp") |>
1707298804201:#filter(!is.na(`2017`)) |>
1707298804216:#filter(!is.na(`2020`)) |>
1707298804230:mutate(`2017` = case_when(
1707298804246:is.na(`2017`) ~ 0,
1707298804261:TRUE ~ `2017`
1707298804274:),
1707298804285:`2020` = case_when(
1707298804298:is.na(`2020`) ~ 0,
1707298804309:TRUE ~ `2020`
1707298804321:),
1707298804332:PointType = case_when(
1707298804346:Fluor==1 ~ "Fluor",
1707298804362:Brennisteinn==1 ~ "Brennisteinn",
1707298804377:TRUE ~ "Other"))
1707298808148:jd_long
1707298824509:data <- read.csv("gogn/hreinsad.csv", check.names = F)
1707298824564:joined_data <- data %>%
1707298824587:left_join(KM, by = "Reitur") %>%
1707298824608:select(species, Type, Reitur, km, everything())
1707298847517:# Fjarlægð
1707298847540:KM <- read.csv("gogn/km.csv")
1707298853411:FogS <- read.csv("gogn/Reitir_myndir_lykill.csv", encoding = "latin1")
1707298906764:joined_data <- data %>%
1707298906784:left_join(KM, by = "Reitur") %>%
1707298906798:select(species, Type, Reitur, km, everything())
1707298929374:jd <- joined_data %>%
1707298929393:left_join(FogS, by = "Reitur") %>%
1707298929408:select(species, Type, Reitur, km, Fluor, Brennisteinn, everything())
1707298953605:jd_long <-jd %>%
1707298953629:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707298953646:mutate(CoverageChange = (`2020` - `2017`) ) %>%
1707298953663:#select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2017`,`2023`, `2020`)) |>
1707298953679:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707298953692:select(species, Type, Reitur, km, everything()) |>
1707298953704:filter(Type %in% "Blað- og runnfléttur") |>
1707298953715:filter(!species %in% "Ber klöpp") %>%
1707298953729:mutate(PointType = case_when(
1707298953746:Fluor==1 ~ "Fluor",
1707298953762:Brennisteinn==1 ~ "Brennisteinn",
1707298953777:TRUE ~ "Other")) |>
1707298953792:group_by(km,Fluor,Brennisteinn,Stadur,Reitur,PointType,`2017`,`2020`) %>%
1707298953807:summarise(CoverageChange=mean(CoverageChange, na.rm = T), .groups = 'drop')
1707298988063:##
1707298988081:jd_long <-jd %>%
1707298988097:#left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707298988112:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707298988127:filter(Type %in% "Blað- og runnfléttur") |>
1707298988143:filter(!species %in% "Ber klöpp") |>
1707298988161:#filter(!is.na(`2017`)) |>
1707298988181:#filter(!is.na(`2020`)) |>
1707298988199:mutate(`2017` = case_when(
1707298988215:is.na(`2017`) ~ 0,
1707298988232:TRUE ~ `2017`
1707298988248:),
1707298988264:`2020` = case_when(
1707298988280:is.na(`2020`) ~ 0,
1707298988298:TRUE ~ `2020`
1707298988313:),
1707298988329:PointType = case_when(
1707298988343:Fluor==1 ~ "Fluor",
1707298988359:Brennisteinn==1 ~ "Brennisteinn",
1707298988375:TRUE ~ "Other")) |>
1707298988391:group_by(km,Fluor,Brennisteinn,Stadur,Reitur,PointType,`2017`,`2020`) |>
1707298988408:summarise(CoverageChange=`2020`-`2017`, .groups = 'drop') |>
1707298988423:group_by(Fluor,Brennisteinn,Stadur,PointType,CoverageChange) |>
1707298988440:summarise(CoverageChange=mean(CoverageChange, na.rm = T), km=mean(km), .groups = 'drop') |>
1707298988457:group_by(km,Fluor,Brennisteinn,Stadur,PointType) |>
1707298988474:summarise(CoverageChange=mean(CoverageChange, na.rm = T), .groups = 'drop')
1707298994274:# Plot with conditional aesthetics and a single line for "Other"
1707298994298:ggplot(jd_long, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707298994315:geom_point() + # Plot all points with conditional shapes and colors
1707298994332:geom_smooth(data = subset(jd_long, PointType == "Other"), method = "lm", se = T, aes(group = 1, color = "Other")) + # Only draw line for "Other"
1707298994348:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) + # 17 is triangle, 15 is square
1707298994364:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707298994380:theme_minimal() +
1707298994394:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707298994410:x = "Distance from Source (km)",
1707298994425:y = "Coverage Change",
1707298994440:shape = "Point Type",
1707298994455:color = "Point Type") +
1707298994472:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black"))) # Adjust legend to reflect the aesthetics accurately
1707299019687:jd %>%
1707299019708:#left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707299019725:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707299019742:filter(Type %in% "Blað- og runnfléttur") |>
1707299019760:filter(!species %in% "Ber klöpp") |>
1707299019776:#filter(!is.na(`2017`)) |>
1707299019792:#filter(!is.na(`2020`)) |>
1707299019807:mutate(`2017` = case_when(
1707299019825:is.na(`2017`) ~ 0,
1707299019842:TRUE ~ `2017`
1707299019858:),
1707299019876:`2020` = case_when(
1707299019894:is.na(`2020`) ~ 0,
1707299019912:TRUE ~ `2020`
1707299019928:),
1707299019947:PointType = case_when(
1707299019963:Fluor==1 ~ "Fluor",
1707299019977:Brennisteinn==1 ~ "Brennisteinn",
1707299019994:TRUE ~ "Other"))
1707299146699:##
1707299146723:jd_long <-jd %>%
1707299146742:#left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707299146759:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707299146778:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28",
1707299146793:"R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62") &
1707299146810:Type %in% "Blað- og runnfléttur") |>
1707299146824:filter(!species %in% "Ber klöpp") |>
1707299146840:#filter(!is.na(`2017`)) |>
1707299146855:#filter(!is.na(`2020`)) |>
1707299146870:mutate(`2017` = case_when(
1707299146885:is.na(`2017`) ~ 0,
1707299146902:TRUE ~ `2017`
1707299146920:),
1707299146939:`2020` = case_when(
1707299146954:is.na(`2020`) ~ 0,
1707299146970:TRUE ~ `2020`
1707299146986:),
1707299147002:PointType = case_when(
1707299147019:Fluor==1 ~ "Fluor",
1707299147032:Brennisteinn==1 ~ "Brennisteinn",
1707299147048:TRUE ~ "Other")) |>
1707299147063:group_by(km,Fluor,Brennisteinn,Stadur,Reitur,PointType,`2017`,`2020`) |>
1707299147079:summarise(CoverageChange=`2020`-`2017`, .groups = 'drop') |>
1707299147098:group_by(Fluor,Brennisteinn,Stadur,PointType,CoverageChange) |>
1707299147113:summarise(CoverageChange=mean(CoverageChange, na.rm = T), km=mean(km), .groups = 'drop') |>
1707299147127:group_by(km,Fluor,Brennisteinn,Stadur,PointType) |>
1707299147143:summarise(CoverageChange=mean(CoverageChange, na.rm = T), .groups = 'drop')
1707299155208:# Plot with conditional aesthetics and a single line for "Other"
1707299155232:ggplot(jd_long, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707299155248:geom_point() + # Plot all points with conditional shapes and colors
1707299155262:geom_smooth(data = subset(jd_long, PointType == "Other"), method = "lm", se = T, aes(group = 1, color = "Other")) + # Only draw line for "Other"
1707299155278:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) + # 17 is triangle, 15 is square
1707299155293:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707299155309:theme_minimal() +
1707299155327:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707299155346:x = "Distance from Source (km)",
1707299155363:y = "Coverage Change",
1707299155382:shape = "Point Type",
1707299155398:color = "Point Type") +
1707299155414:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black"))) # Adjust legend to reflect the aesthetics accurately
1707299447389:jd_long <-jd %>%
1707299447407:#left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707299447424:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707299447438:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28",
1707299447452:"R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62") &
1707299447468:Type %in% "Blað- og runnfléttur") |>
1707299447484:filter(!species %in% "Ber klöpp") |>
1707299447497:#filter(!is.na(`2017`)) |>
1707299447509:#filter(!is.na(`2020`)) |>
1707299447523:mutate(`2017` = case_when(
1707299447537:is.na(`2017`) ~ 0,
1707299447549:TRUE ~ `2017`
1707299447569:),
1707299447587:`2020` = case_when(
1707299447605:is.na(`2020`) ~ 0,
1707299447621:TRUE ~ `2020`
1707299447637:),
1707299447653:PointType = case_when(
1707299447669:Fluor==1 ~ "Fluor",
1707299447685:Brennisteinn==1 ~ "Brennisteinn",
1707299447700:TRUE ~ "Other")) |>
1707299447715:group_by(km,Fluor,Brennisteinn,Stadur,Reitur,PointType,`2017`,`2020`) |>
1707299447730:summarise(CoverageChange=`2020`-`2017`, .groups = 'drop')
1707299524516:# Plot with conditional aesthetics and a single line for "Other"
1707299524541:ggplot(jd_long, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707299524562:geom_point() + # Plot all points with conditional shapes and colors
1707299524580:geom_smooth(data = subset(jd_long, PointType == "Other"), method = "lm", se = T, aes(group = 1, color = "Other")) + # Only draw line for "Other"
1707299524597:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) + # 17 is triangle, 15 is square
1707299524612:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707299524627:theme_minimal() +
1707299524641:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707299524657:x = "Distance from Source (km)",
1707299524673:y = "Coverage Change",
1707299524688:shape = "Point Type",
1707299524703:color = "Point Type") +
1707299524719:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black"))) # Adjust legend to reflect the aesthetics accurately
1707299566092:jd_long
1707299795328:##
1707299795358:jd_long <-jd %>%
1707299795377:#left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707299795393:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707299795412:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28",
1707299795427:"R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62") &
1707299795443:Type %in% "Blað- og runnfléttur") |>
1707299795457:filter(!species %in% "Ber klöpp") |>
1707299795473:#filter(!is.na(`2017`)) |>
1707299795490:#filter(!is.na(`2020`)) |>
1707299795507:mutate(`2017` = case_when(
1707299795524:is.na(`2017`) ~ 0,
1707299795541:TRUE ~ `2017`
1707299795557:),
1707299795573:`2020` = case_when(
1707299795588:is.na(`2020`) ~ 0,
1707299795603:TRUE ~ `2020`
1707299795619:),
1707299795636:PointType = case_when(
1707299795652:Fluor==1 ~ "Fluor",
1707299795668:Brennisteinn==1 ~ "Brennisteinn",
1707299795682:TRUE ~ "Other")) |>
1707299795698:group_by(km,Fluor,Brennisteinn,Stadur,Reitur,PointType) |>
1707299795715:summarise(M17=mean(`2017`, na.rm = T ),M20=mean(`2020`, na.rm = T ),CoverageChange=M20-M17, .groups = 'drop')|>
1707299795730:group_by(Fluor,Brennisteinn,Stadur,PointType,CoverageChange) |>
1707299795747:summarise(CoverageChange=mean(CoverageChange, na.rm = T), km=mean(km), .groups = 'drop') |>
1707299795763:group_by(km,Fluor,Brennisteinn,Stadur,PointType) |>
1707299795780:summarise(CoverageChange=mean(CoverageChange, na.rm = T), .groups = 'drop')
1707299798837:# Plot with conditional aesthetics and a single line for "Other"
1707299798863:ggplot(jd_long, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707299798885:geom_point() + # Plot all points with conditional shapes and colors
1707299798905:geom_smooth(data = subset(jd_long, PointType == "Other"), method = "lm", se = T, aes(group = 1, color = "Other")) + # Only draw line for "Other"
1707299798924:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) + # 17 is triangle, 15 is square
1707299798940:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707299798959:theme_minimal() +
1707299798976:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707299798995:x = "Distance from Source (km)",
1707299799010:y = "Coverage Change",
1707299799021:shape = "Point Type",
1707299799034:color = "Point Type") +
1707299799050:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black"))) # Adjust legend to reflect the aesthetics accurately
1707300610950:jd_long <-jd %>%
1707300610967:#left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707300610990:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707300611008:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28",
1707300611027:"R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62") &
1707300611048:Type %in% "Blað- og runnfléttur") |>
1707300611068:filter(!species %in% "Ber klöpp") |>
1707300611088:#filter(!is.na(`2017`)) |>
1707300611106:#filter(!is.na(`2020`)) |>
1707300611127:mutate(`2017` = case_when(
1707300611144:is.na(`2017`) ~ 0,
1707300611163:TRUE ~ `2017`
1707300611183:),
1707300611205:`2020` = case_when(
1707300611228:is.na(`2020`) ~ 0,
1707300611246:TRUE ~ `2020`
1707300611266:),
1707300611286:PointType = case_when(
1707300611305:Fluor==1 ~ "Fluor",
1707300611328:Brennisteinn==1 ~ "Brennisteinn",
1707300611348:TRUE ~ "Other")) |>
1707300611369:group_by(Type,km,Fluor,Brennisteinn,Stadur,Reitur,PointType) |>
1707300611388:summarise(M17=sum(`2017`, na.rm = T ),M20=sum(`2020`, na.rm = T ),CoverageChange=M20-M17, .groups = 'drop')
1707300615263:jd_long
1707300756451:table(jd_long$Brennisteinn)
1707300767996:table(jd_long$Fluor)
1707300780862:# Plot with conditional aesthetics and a single line for "Other"
1707300780890:ggplot(jd_long, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707300780913:geom_point() + # Plot all points with conditional shapes and colors
1707300780934:geom_smooth(data = subset(jd_long, PointType == "Other"), method = "lm", se = T, aes(group = 1, color = "Other")) + # Only draw line for "Other"
1707300780954:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) + # 17 is triangle, 15 is square
1707300780974:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707300780997:theme_minimal() +
1707300781015:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707300781038:x = "Distance from Source (km)",
1707300781057:y = "Coverage Change",
1707300781075:shape = "Point Type",
1707300781098:color = "Point Type") +
1707300781118:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black"))) # Adjust legend to reflect the aesthetics accurately
1707311058757:jd_long <-jd %>%
1707311058776:#left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707311058793:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707311058810:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28",
1707311058827:"R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62") &
1707311058848:Type %in% "Blað- og runnfléttur") |>
1707311058867:filter(!species %in% "Ber klöpp") |>
1707311058887:#filter(!is.na(`2017`)) |>
1707311058908:#filter(!is.na(`2020`)) |>
1707311058929:mutate(`2017` = case_when(
1707311058950:is.na(`2017`) ~ 0,
1707311058973:TRUE ~ `2017`),
1707311058992:`2020` = case_when(
1707311059006:is.na(`2020`) ~ 0,
1707311059022:TRUE ~ `2020`),
1707311059038:PointType = case_when(
1707311059053:Fluor==1 ~ "Fluor",
1707311059068:Brennisteinn==1 ~ "Brennisteinn",
1707311059084:TRUE ~ "Other")) |>
1707311059100:group_by(Type,km,Fluor,Brennisteinn,Stadur,Reitur,PointType) |>
1707311059116:summarise(M17=sum(`2017`, na.rm = T ),M20=sum(`2020`, na.rm = T ),CoverageChange=M20-M17, .groups = 'drop')|>
1707311059131:group_by(Type,km,Fluor,Brennisteinn,Stadur,Reitur,PointType,CoverageChange) |>
1707311059149:summarise(CoverageChange=mean(CoverageChange, na.rm = T), .groups = 'drop') #|>
1707311061802:# Plot with conditional aesthetics and a single line for "Other"
1707311061821:ggplot(jd_long, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707311061834:geom_point() + # Plot all points with conditional shapes and colors
1707311061847:geom_smooth(data = subset(jd_long, PointType == "Other"), method = "lm", se = T, aes(group = 1, color = "Other")) + # Only draw line for "Other"
1707311061859:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) + # 17 is triangle, 15 is square
1707311061871:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707311061883:theme_minimal() +
1707311061895:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707311061909:x = "Distance from Source (km)",
1707311061924:y = "Coverage Change",
1707311061937:shape = "Point Type",
1707311061949:color = "Point Type") +
1707311061960:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black"))) # Adjust legend to reflect the aesthetics accurately
1707311084712:jd_long
1707311109094:as.data.frame(jd_long)
1707311243730:jd_long <-jd %>%
1707311243750:#left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707311243768:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707311243784:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28",
1707311243799:"R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62") &
1707311243815:Type %in% "Blað- og runnfléttur") |>
1707311243832:filter(!species %in% "Ber klöpp") |>
1707311243849:#filter(!is.na(`2017`)) |>
1707311243867:#filter(!is.na(`2020`)) |>
1707311243888:mutate(#`2017` = case_when(
1707311243907:# is.na(`2017`) ~ 0,
1707311243926:# TRUE ~ `2017`),
1707311243945:# `2020` = case_when(
1707311243961:# is.na(`2020`) ~ 0,
1707311243976:# TRUE ~ `2020`),
1707311243992:PointType = case_when(
1707311244007:Fluor==1 ~ "Fluor",
1707311244021:Brennisteinn==1 ~ "Brennisteinn",
1707311244037:TRUE ~ "Other")) |>
1707311244053:group_by(Type,km,Fluor,Brennisteinn,Stadur,Reitur,PointType) |>
1707311244069:summarise(M17=sum(`2017`, na.rm = T ),M20=sum(`2020`, na.rm = T ),CoverageChange=M20-M17, .groups = 'drop')|>
1707311244086:group_by(Type,km,Fluor,Brennisteinn,Stadur,Reitur,PointType,CoverageChange) |>
1707311244102:summarise(CoverageChange=mean(CoverageChange, na.rm = T), .groups = 'drop') #|>
1707311248041:# Plot with conditional aesthetics and a single line for "Other"
1707311248065:ggplot(jd_long, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707311248080:geom_point() + # Plot all points with conditional shapes and colors
1707311248098:geom_smooth(data = subset(jd_long, PointType == "Other"), method = "lm", se = T, aes(group = 1, color = "Other")) + # Only draw line for "Other"
1707311248112:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) + # 17 is triangle, 15 is square
1707311248129:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707311248145:theme_minimal() +
1707311248161:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707311248178:x = "Distance from Source (km)",
1707311248194:y = "Coverage Change",
1707311248211:shape = "Point Type",
1707311248229:color = "Point Type") +
1707311248245:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black"))) # Adjust legend to reflect the aesthetics accurately
1707311268592:as.data.frame(jd_long)
1707311655394:jd_long <-jd %>%
1707311655412:#left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707311655428:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707311655440:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28",
1707311655456:"R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62") &
1707311655475:Type %in% "Blað- og runnfléttur") |>
1707311655492:filter(!species %in% "Ber klöpp") |>
1707311655509:#filter(!is.na(`2017`)) |>
1707311655527:#filter(!is.na(`2020`)) |>
1707311655543:mutate(#`2017` = case_when(
1707311655559:# is.na(`2017`) ~ 0,
1707311655577:# TRUE ~ `2017`),
1707311655593:# `2020` = case_when(
1707311655608:# is.na(`2020`) ~ 0,
1707311655626:# TRUE ~ `2020`),
1707311655645:PointType = case_when(
1707311655662:Fluor==1 ~ "Fluor",
1707311655679:Brennisteinn==1 ~ "Brennisteinn",
1707311655696:TRUE ~ "Other")) |>
1707311655713:group_by(Type,km,Stadur,Reitur,PointType) |>
1707311655729:summarise(M17=sum(`2017`, na.rm = T ),M20=sum(`2020`, na.rm = T ),CoverageChange=M20-M17, .groups = 'drop')|>
1707311655749:group_by(Type,km,Stadur,Reitur,PointType,CoverageChange)
1707311658951:# Plot with conditional aesthetics and a single line for "Other"
1707311659017:ggplot(jd_long, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707311659040:geom_point() + # Plot all points with conditional shapes and colors
1707311659063:geom_smooth(data = subset(jd_long, PointType == "Other"), method = "lm", se = T, aes(group = 1, color = "Other")) + # Only draw line for "Other"
1707311659078:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) + # 17 is triangle, 15 is square
1707311659094:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707311659109:theme_minimal() +
1707311659125:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707311659141:x = "Distance from Source (km)",
1707311659155:y = "Coverage Change",
1707311659171:shape = "Point Type",
1707311659185:color = "Point Type") +
1707311659201:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black"))) # Adjust legend to reflect the aesthetics accurately
1707311706103:unique(jd_long$Type)
1707311743369:jd %>%
1707311743386:#left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707311743403:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707311743417:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28",
1707311743429:"R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62") &
1707311743443:Type %in% "Blað- og runnfléttur") |>
1707311743457:filter(!species %in% "Ber klöpp") |>
1707311743469:#filter(!is.na(`2017`)) |>
1707311743482:#filter(!is.na(`2020`)) |>
1707311743494:mutate(#`2017` = case_when(
1707311743505:# is.na(`2017`) ~ 0,
1707311743517:# TRUE ~ `2017`),
1707311743529:# `2020` = case_when(
1707311743540:# is.na(`2020`) ~ 0,
1707311743552:# TRUE ~ `2020`),
1707311743566:PointType = case_when(
1707311743578:Fluor==1 ~ "Fluor",
1707311743589:Brennisteinn==1 ~ "Brennisteinn",
1707311743600:TRUE ~ "Other"))
1707311796994:jd_long <-jd %>%
1707311797015:#left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707311797036:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707311797054:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28",
1707311797072:"R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62") &
1707311797088:Type %in% "Blað- og runnfléttur") |>
1707311797104:filter(!species %in% "Ber klöpp") |>
1707311797119:#filter(!is.na(`2017`)) |>
1707311797138:#filter(!is.na(`2020`)) |>
1707311797153:mutate(#`2017` = case_when(
1707311797168:# is.na(`2017`) ~ 0,
1707311797185:# TRUE ~ `2017`),
1707311797200:# `2020` = case_when(
1707311797217:# is.na(`2020`) ~ 0,
1707311797232:# TRUE ~ `2020`),
1707311797248:PointType = case_when(
1707311797263:Fluor==1 ~ "Fluor",
1707311797278:Brennisteinn==1 ~ "Brennisteinn",
1707311797295:TRUE ~ "Other")) |>
1707311797312:group_by(km,Stadur,Reitur,PointType) |>
1707311797329:summarise(M17=sum(`2017`, na.rm = T ),M20=sum(`2020`, na.rm = T ),CoverageChange=M20-M17, .groups = 'drop')
1707311800081:# Plot with conditional aesthetics and a single line for "Other"
1707311800106:ggplot(jd_long, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707311800123:geom_point() + # Plot all points with conditional shapes and colors
1707311800139:geom_smooth(data = subset(jd_long, PointType == "Other"), method = "lm", se = T, aes(group = 1, color = "Other")) + # Only draw line for "Other"
1707311800157:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) + # 17 is triangle, 15 is square
1707311800171:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707311800188:theme_minimal() +
1707311800206:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707311800221:x = "Distance from Source (km)",
1707311800239:y = "Coverage Change",
1707311800259:shape = "Point Type",
1707311800274:color = "Point Type") +
1707311800286:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black"))) # Adjust legend to reflect the aesthetics accurately
1707311840696:jd_long
1707311993698:ggplot(jd_long, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707311993712:geom_point(size = 3, stroke = 1.5) + # Increased point size and stroke
1707311993727:geom_smooth(data = subset(jd_long, PointType == "Other"), method = "lm", se = TRUE, aes(group = 1, color = "Other")) +
1707311993744:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) +
1707311993761:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707311993779:theme_minimal() +
1707311993794:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707311993808:x = "Distance from Source (km)",
1707311993827:y = "Coverage Change",
1707311993845:shape = "Point Type",
1707311993864:color = "Point Type") +
1707311993884:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black")))
1707312178601:ggplot(jd_long, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707312178618:geom_point(data = subset(jd_long, PointType != "Other"), size = 3) + # Plot points only for non-"Other"
1707312178633:geom_text(data = subset(jd_long, PointType == "Other"), aes(label = Reitur), hjust = 0.5, vjust = -1, size = 3.5) + # Add text labels for "Other"
1707312178650:geom_smooth(data = subset(jd_long, PointType == "Other"), method = "lm", se = TRUE, aes(group = 1, color = "Other")) +
1707312178667:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = NA)) + # Define shapes, NA for "Other" as it's replaced by text
1707312178683:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707312178700:theme_minimal() +
1707312178718:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707312178734:x = "Distance from Source (km)",
1707312178752:y = "Coverage Change",
1707312178769:shape = "Point Type",
1707312178783:color = "Point Type") +
1707312178798:guides(color = guide_legend(override.aes = list(shape = NA)), shape = guide_legend(override.aes = list(color = "black"))) # Adjust legend to exclude "Other" shape
1707312273694:jd_long <-jd %>%
1707312273714:#left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) |>
1707312273731:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707312273748:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28",
1707312273763:"R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62") &
1707312273778:Type %in% "Blað- og runnfléttur") |>
1707312273793:filter(!species %in% "Ber klöpp") |>
1707312273811:#filter(!is.na(`2017`)) |>
1707312273826:#filter(!is.na(`2020`)) |>
1707312273841:mutate(#`2017` = case_when(
1707312273860:# is.na(`2017`) ~ 0,
1707312273879:# TRUE ~ `2017`),
1707312273898:# `2020` = case_when(
1707312273916:# is.na(`2020`) ~ 0,
1707312273935:# TRUE ~ `2020`),
1707312273953:PointType = case_when(
1707312273969:Fluor==1 ~ "Fluor",
1707312273986:Brennisteinn==1 ~ "Brennisteinn",
1707312274001:TRUE ~ "Other")) |>
1707312274018:group_by(km,Stadur,Reitur,PointType) |>
1707312274036:summarise(M17=sum(`2017`),M20=sum(`2020` ),CoverageChange=M20-M17, .groups = 'drop')#|>
1707312276767:# Plot with conditional aesthetics and a single line for "Other"
1707312276789:ggplot(jd_long, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707312276810:geom_point() + # Plot all points with conditional shapes and colors
1707312276828:geom_smooth(data = subset(jd_long, PointType == "Other"), method = "lm", se = T, aes(group = 1, color = "Other")) + # Only draw line for "Other"
1707312276842:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) + # 17 is triangle, 15 is square
1707312276860:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707312276877:theme_minimal() +
1707312276892:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707312276908:x = "Distance from Source (km)",
1707312276924:y = "Coverage Change",
1707312276942:shape = "Point Type",
1707312276958:color = "Point Type") +
1707312276973:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black"))) # Adjust legend to reflect the aesthetics accurately
1707312295756:ggplot(jd_long, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707312295774:geom_point(data = subset(jd_long, PointType != "Other"), size = 3) + # Plot points only for non-"Other"
1707312295790:geom_text(data = subset(jd_long, PointType == "Other"), aes(label = Reitur), hjust = 0.5, vjust = -1, size = 3.5) + # Add text labels for "Other"
1707312295806:geom_smooth(data = subset(jd_long, PointType == "Other"), method = "lm", se = TRUE, aes(group = 1, color = "Other")) +
1707312295821:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = NA)) + # Define shapes, NA for "Other" as it's replaced by text
1707312295838:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707312295855:theme_minimal() +
1707312295871:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707312295888:x = "Distance from Source (km)",
1707312295902:y = "Coverage Change",
1707312295919:shape = "Point Type",
1707312295938:color = "Point Type") +
1707312295954:guides(color = guide_legend(override.aes = list(shape = NA)), shape = guide_legend(override.aes = list(color = "black"))) # Adjust legend to exclude "Other" shape
1707312923863:jd_long
1707312939613:as_data_frame(jd_long)
1707312953139:as.data.frame(jd_long)
1707312991379:install.packages('DT')
1707313008044:DT::datatable(jd_long)
1707313405262:library(readxl)
1707313405300:library(dplyr)
1707313405315:library(purrr)
1707313405334:library(ggplot2)
1707313405349:library(tidyverse)
1707313405377:# slóðin
1707313405392:excel_path <- "gogn/loka.xlsx" # Replace with your file path
1707313405422:# Allir reitir
1707313405439:sheet_names <- excel_sheets(excel_path)
1707313406108:# Function sem les öll sheet, breytir í character og skilar data frame
1707313406124:read_sheet <- function(sheet_name) {
1707313406142:read_excel(excel_path, sheet = sheet_name) |>
1707313406159:mutate(across(everything(), as.character))
1707313406175:}
1707313406203:# innlestur
1707313406220:combined_data <- lapply(sheet_names, read_sheet) |> bind_rows()
1707313472045:str(jd)
1707313794715:# Your dataset is named jd, according to your description
1707313794727:# Filter to find Reiturs with NA in any year column
1707313794739:missing_surveys <- jd %>%
1707313794751:select(Reitur, `1976`, `1997`, `2006`, `2011`) %>%  # Select Reitur and year columns
1707313794766:group_by(Reitur) %>%  # Group by Reitur
1707313794783:summarise(across(`1976`:`2011`, ~sum(is.na(.x)), .names = "missing_{.col}")) %>%  # Count NAs in each year for each Reitur
1707313794797:filter_if(~any(. > 0))  # Keep only rows where any year has missing values
1707313876297:library(dplyr)
1707313876331:# Adjusted code for identifying missing surveys
1707313876349:missing_surveys <- jd %>%
1707313876366:select(Reitur, `1976`, `1997`, `2006`, `2011`) %>%  # Select Reitur and year columns
1707313876380:group_by(Reitur) %>%  # Group by Reitur
1707313876396:summarise(across(`1976`:`2011`, ~sum(is.na(.x)), .names = "missing_{.col}")) %>%  # Count NAs in each year for each Reitur
1707313876412:filter(if_any(c(`1976`, `1997`, `2006`, `2011`), ~. > 0))  # Filter Reiturs with any missing year
1707313935968:# Your dataset is named jd, according to your description
1707313935987:# Filter to find Reiturs with NA in any year column
1707313936003:missing_surveys <- jd %>%
1707313936020:select(Reitur,`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`) %>%  # Select Reitur and year columns
1707313936037:group_by(Reitur) %>%  # Group by Reitur
1707313936052:summarise(across(`1976`:`2011`, ~sum(is.na(.x)), .names = "missing_{.col}")) %>%  # Count NAs in each year for each Reitur
1707313936069:filter_if(~any(. > 0))  # Keep only rows where any year has missing values
1707313959796:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707313959818:if ("package:plyr" %in% search()) {
1707313959833:# Detach 'plyr' if it is loaded
1707313959847:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707313959862:}
1707313974699:# Your dataset is named jd, according to your description
1707313974721:# Filter to find Reiturs with NA in any year column
1707313974741:missing_surveys <- jd %>%
1707313974754:select(Reitur,`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`) %>%  # Select Reitur and year columns
1707313974767:group_by(Reitur) %>%  # Group by Reitur
1707313974781:summarise(across(`1976`:`2011`, ~sum(is.na(.x)), .names = "missing_{.col}")) %>%  # Count NAs in each year for each Reitur
1707313974796:filter_if(~any(. > 0))  # Keep only rows where any year has missing values
1707314004975:# Your dataset is named jd, according to your description
1707314004997:# Filter to find Reiturs with NA in any year column
1707314005013:missing_surveys <- jd %>%
1707314005030:select(Reitur, `1976`, `1997`, `2006`, `2011`) %>%  # Select Reitur and year columns
1707314005047:group_by(Reitur) %>%  # Group by Reitur
1707314005062:summarise(across(`1976`:`2011`, ~sum(is.na(.x)), .names = "missing_{.col}")) %>%  # Count NAs in each year for each Reitur
1707314005078:filter_if(~any(. > 0))  # Keep only rows where any year has missing values
1707314049092:library(dplyr)
1707314049131:# Revised code to identify Reitur with missing surveys in any year
1707314049153:missing_surveys <- jd %>%
1707314049172:select(Reitur, `1976`, `1997`, `2006`, `2011`) %>%  # Select Reitur and year columns
1707314049194:group_by(Reitur) %>%  # Group by Reitur
1707314049211:summarise(across(`1976`:`2011`, ~sum(is.na(.)), .names = "missing_{.col}")) %>%  # Count NAs in each year for each Reitur
1707314049227:filter(if_any(c(`1976`, `1997`, `2006`, `2011`), ~is.na(.)))  # Keep rows where any selected year column has NA
1707314056846:library(dplyr)
1707314056879:# Revised code to identify Reitur with missing surveys in any year
1707314056895:missing_surveys <- jd %>%
1707314056911:select(Reitur, `1976`, `1997`, `2006`, `2011`) %>%  # Select Reitur and year columns
1707314056927:group_by(Reitur) %>%  # Group by Reitur
1707314056946:summarise(across(`1976`:`2011`, ~sum(is.na(.)), .names = "missing_{.col}")) %>%  # Count NAs in each year for each Reitur
1707314057006:filter(if_any(c(`1976`, `1997`, `2006`, `2011`), ~is.na(.)))  # Keep rows where any selected year column has NA
1707314081158:jd$`1976`
1707314091672:rlang::last_error()
1707314153255:library(dplyr)
1707314153284:# Assuming jd is your dataframe and it includes columns for Reitur and years
1707314153303:# First, let's dynamically identify year columns if they follow a pattern or are numeric
1707314153319:year_columns <- names(jd)[grepl("^\\d{4}$", names(jd))]
1707314153349:# Now, proceed with the adjusted approach
1707314153365:missing_surveys <- jd %>%
1707314153379:select(Reitur, all_of(year_columns)) %>%  # Adjust to dynamically select year columns
1707314153396:group_by(Reitur) %>%
1707314153413:summarise(across(all_of(year_columns), ~sum(is.na(.)), .names = "missing_{.col}")) %>%
1707314153428:filter(if_any(all_of(year_columns), ~. > 0))
1707314158995:year_columns
1707314225521:library(dplyr)
1707314225556:# Assuming year_columns has been correctly identified as shown previously
1707314225577:year_columns <- c("1976", "1997", "2006", "2011", "2014", "2017", "2020", "2023", "1999") # Based on your output
1707314225611:missing_surveys <- jd %>%
1707314225630:select(Reitur, all_of(year_columns)) %>%
1707314225646:group_by(Reitur) %>%
1707314225662:summarise(across(all_of(year_columns), ~sum(is.na(.)), .names = "missing_{.col}")) %>%
1707314225678:# Simplify the filter step to directly check for any NA counts greater than 0
1707314225695:rowwise() %>%
1707314225710:filter(sum(c_across(all_of(year_columns))) > 0)
1707314305167:# Load the plyr package
1707314305187:library(plyr)
1707314305313:# Assuming 'jd' is your dataframe and 'year_columns' contains the names of the year columns
1707314305328:year_columns <- c("1976", "1997", "2006", "2011", "2014", "2017", "2020", "2023", "1999")
1707314305354:# Use ddply to apply a function across subsets of the dataframe grouped by 'Reitur'
1707314305369:missing_surveys <- ddply(jd, .(Reitur), function(df) {
1707314305382:# For each group, calculate the number of NA values in each year column
1707314305401:missing_counts <- sapply(df[year_columns], function(column) sum(is.na(column)))
1707314305417:# Create a dataframe to return that includes the Reitur and missing counts for each year
1707314305433:data.frame(Reitur = df$Reitur[1], missing_counts)
1707314305450:})
1707314305521:# Since ddply will repeat the Reitur for each row, we may want to aggregate or filter this further
1707314305540:# For simplicity, this example just calculates missing counts. You might need to adjust this example
1707314305560:# to fit exactly what you need, e.g., filtering to keep only Reiturs with missing values.
1707314305589:# View the first few rows of the result
1707314305609:head(missing_surveys)
1707314423773:# Assuming 'jd' is your dataframe
1707314423792:# Assuming 'year_columns' contains the names of the year columns
1707314423809:year_columns <- c("1976", "1997", "2006", "2011", "2014", "2017", "2020", "2023", "1999")
1707314423839:# Use ddply to check for missing values in year columns for each Reitur
1707314423857:missing_surveys <- ddply(jd, .(Reitur), function(df) {
1707314423875:# Initialize an empty data frame to store results
1707314423895:results <- data.frame(Year = character(), Skipped = logical(), stringsAsFactors = FALSE)
1707314423925:# Loop through each year column to check for missing values
1707314423942:for (year in year_columns) {
1707314423961:# Check if the year column has any missing value
1707314423977:skipped <- any(is.na(df[[year]]))
1707314423993:# Append to the results data frame
1707314424008:results <- rbind(results, data.frame(Year = year, Skipped = skipped))
1707314424021:}
1707314424044:# Return results with Reitur added
1707314424063:cbind(Reitur = df$Reitur[1], results)
1707314424081:}, .progress = 'text')
1707314424370:# Filter to keep only the rows where Skipped is TRUE
1707314424386:missing_surveys <- missing_surveys[missing_surveys$Skipped == TRUE, ]
1707314424412:# View the first few rows of the modified result
1707314424430:head(missing_surveys)
1707314759822:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707314759846:if ("package:plyr" %in% search()) {
1707314759866:# Detach 'plyr' if it is loaded
1707314759884:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707314759902:}
1707314764702:# Load necessary package
1707314764717:library(dplyr)
1707314764749:# Your data.frame is named 'jd'
1707314764766:# Assuming 'NA' represents missing or non-numerical values in year columns
1707314764793:# Filtering for Reitur values with no numerical values in any of the year columns
1707314764810:reitur_with_no_numerical_values <- jd %>%
1707314764829:# Select relevant columns
1707314764849:select(Reitur, `1976`, `1997`, `2006`, `2011`) %>%
1707314764868:# Group by Reitur
1707314764885:group_by(Reitur) %>%
1707314764901:# Check if all values in the year columns are NA for each Reitur
1707314764919:filter(all(is.na(`1976`), is.na(`1997`), is.na(`2006`), is.na(`2011`))) %>%
1707314764936:# Get unique Reitur values
1707314764952:distinct(Reitur)
1707314764997:# Display the Reitur values with no numerical values in any of the year columns
1707314765013:print(reitur_with_no_numerical_values)
1707314823223:year_columns
1707314858548:str(jd)
1707315014519:jd$Reitur[jd$Reitur & jd$`2023`]
1707315024148:jd$Reitur[jd$Reitur==1 & jd$`2023`]
1707315028958:jd$Reitur[jd$Reitur==1 & jd$`1999`]
1707315066831:jd[jd$Reitur=="R1" & jd$`1999`]
1707315069263:jd[jd$Reitur=="R1" & jd$`1999`,]
1707315091603:jd[jd$Reitur=="R1" & jd$`1997`,]
1707315112344:jd[jd$Reitur=="R1" & jd$`2014`,]
1707315231153:jd[jd$Reitur=="R1" & jd$`1997`,]
1707315339531:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707315339547:if ("package:plyr" %in% search()) {
1707315339566:# Detach 'plyr' if it is loaded
1707315339582:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707315339601:}
1707315342230:# Assuming 'jd' is your dataframe
1707315342246:# Loading necessary library
1707315342265:library(dplyr)
1707315342293:# Define year columns to check
1707315342310:year_cols <- c('1976', '1997', '2006', '2011', '2014', '2017', '2020', '2023', '1999')
1707315342342:# Create a function to check for rows without numerical values for each year within each Reitur
1707315342359:check_numerical_values <- function(data, year_cols) {
1707315342376:results <- data %>%
1707315342391:select(Reitur, all_of(year_cols)) %>%
1707315342406:pivot_longer(cols = -Reitur, names_to = "Year", values_to = "Value") %>%
1707315342420:group_by(Reitur, Year) %>%
1707315342435:summarize(HasValue = any(!is.na(Value) & Value > 0), .groups = 'drop') %>%
1707315342451:filter(!HasValue)
1707315342479:return(results)
1707315342494:}
1707315342521:# Apply the function to the jd dataframe
1707315342537:results <- check_numerical_values(jd, year_cols)
1707315342593:# Print results
1707315342615:print(results)
1707315361877:# Assuming 'jd' is your dataframe
1707315361896:# Loading necessary library
1707315361909:library(dplyr)
1707315361938:# Define year columns to check
1707315361954:year_cols <- c('1976', '1997', '2006', '2011', '2014', '2017', '2020', '2023', '1999')
1707315361978:# Create a function to check for rows without numerical values for each year within each Reitur
1707315361994:check_numerical_values <- function(data, year_cols) {
1707315362012:results <- data %>%
1707315362028:select(Reitur, all_of(year_cols)) %>%
1707315362045:pivot_longer(cols = -Reitur, names_to = "Year", values_to = "Value") %>%
1707315362062:group_by(Reitur, Year) %>%
1707315362080:summarize(HasValue = any(!is.na(Value) & Value > 0), .groups = 'drop') %>%
1707315362098:filter(!HasValue)
1707315362132:return(results)
1707315362148:}
1707315362178:# Apply the function to the jd dataframe
1707315362193:results <- check_numerical_values(jd, year_cols)
1707315362238:# Print results
1707315362254:print(results, n=200)
1707315366527:# Assuming 'jd' is your dataframe
1707315366549:# Loading necessary library
1707315366565:library(dplyr)
1707315366592:# Define year columns to check
1707315366609:year_cols <- c('1976', '1997', '2006', '2011', '2014', '2017', '2020', '2023', '1999')
1707315366637:# Create a function to check for rows without numerical values for each year within each Reitur
1707315366651:check_numerical_values <- function(data, year_cols) {
1707315366667:results <- data %>%
1707315366683:select(Reitur, all_of(year_cols)) %>%
1707315366697:pivot_longer(cols = -Reitur, names_to = "Year", values_to = "Value") %>%
1707315366712:group_by(Reitur, Year) %>%
1707315366728:summarize(HasValue = any(!is.na(Value) & Value > 0), .groups = 'drop') %>%
1707315366744:filter(!HasValue)
1707315366772:return(results)
1707315366789:}
1707315366818:# Apply the function to the jd dataframe
1707315366833:results <- check_numerical_values(jd, year_cols)
1707315366881:# Print results
1707315366897:print(results, n=250)
1707315394991:table(results)
1707315733673:# First, create an identifier in both jd and results to match rows
1707315733691:jd$identifier <- paste(jd$Reitur, jd$Year, sep = "_")
1707315744126:table(jd$identifier )
1707315870245:str(table(results))
1707317058931:str(jd)
1707317106896:as.data.frame(as.table(results))
1707317116382:as.data.frame(table(results))
1707317136864:DT::datatable(as.data.frame(table(results)))
1707317206208:as.data.frame(table(results))[,c(1,2,4)]
1707317287382:as.data.frame(table(results))[,c(1,2,4)]
1707317305746:results_df <-as.data.frame(table(results))[,c(1,2,4)]
1707317352931:colnames(results_df)
1707317378306:colnames(results_df) <-  c("Reitur" "Year"   "Exclude")
1707317392229:colnames(results_df) <-  c("Reitur","Year","Exclude")
1707317537577:colnames(results_df) <-  c("Reitur","Year","Exclude")
1707317541139:jd$Year <- apply(jd[, c('1976', '1997', '2006', '2011', '2014', '2017', '2020', '2023', '1999')], 1, function(x) names(x))
1707317663106:?apply
1707317689552:results_df
1707317749475:results_df[order(results_df$Reitur)]
1707317754568:results_df[order(results_df$Reitur),]
1707317803426:results_df[order(results_df$Reitur) & results_df$Exclude==0,]
1707317849696:rass
1707317853233:rass <- results_df[order(results_df$Reitur) & results_df$Exclude==0,]
1707317855257:rass
1707317899266:include <- rass[,1:2]
1707317930577:include
1707318009534:jd[,include$Year[unique(include$Year)[1]]]
1707318033750:include$Year[unique(include$Year)[1]]
1707318042758:str(include$Year[unique(include$Year)[1]])
1707318047217:unlist(include$Year[unique(include$Year)[1]])
1707318054095:c(include$Year[unique(include$Year)[1]])
1707318057825:(include$Year[unique(include$Year)[1]])[1]
1707318077440:(include$Year[unique(include$Year)[1]])
1707318084486:(include$Year[unique(include$Year)[1]])[[1]]
1707318107417:class(include$Year[unique(include$Year)[1]])
1707318120751:list(include$Year[unique(include$Year)[1]])
1707318131895:droplevels(include$Year[unique(include$Year)[1]])
1707318138776:class(droplevels(include$Year[unique(include$Year)[1]]))
1707318145969:as.numeric(droplevels(include$Year[unique(include$Year)[1]]))
1707318154649:levels(droplevels(include$Year[unique(include$Year)[1]]))
1707318162137:class(levels(droplevels(include$Year[unique(include$Year)[1]])))
1707318167570:as.numeric(levels(droplevels(include$Year[unique(include$Year)[1]])))
1707318188144:jd[,as.numeric(levels(droplevels(include$Year[unique(include$Year)[1]])))]
1707318195983:as.numeric(levels(droplevels(include$Year[unique(include$Year)[1]])))
1707318359667:jd_long <- jd %>%
1707318359687:pivot_longer(cols = starts_with("19") | starts_with("20"),
1707318359701:names_to = "Year",
1707318359716:values_to = "Value",
1707318359734:names_prefix = "") %>%
1707318359752:mutate(Year = as.numeric(Year))
1707318403576:include
1707318433601:jd$identifier <- paste(jd$Reitur, jd$Year, sep = "_")
1707318459683:jd_long$identifier <- paste(jd_long$Reitur, jd_long$Year, sep = "_")
1707318545608:include$identifier <- paste(include$Reitur, include$Year, sep = "_")
1707318585595:jd_filtered <- jd_long %>%
1707318585616:filter(identifier %in% include$identifier))
1707318594030:jd_filtered <- jd_long %>%
1707318594048:filter(identifier %in% include$identifier)
1707319571772:library(dplyr)
1707319571809:# Define year columns to check
1707319571825:year_cols <- c('1976', '1997', '2006', '2011', '2014', '2017', '2020', '2023', '1999')
1707319571849:# Create a function to check for rows without numerical values for each year within each Reitur
1707319571865:check_numerical_values <- function(data, year_cols) {
1707319571881:results <- data %>%
1707319571898:select(Reitur, all_of(year_cols)) %>%
1707319571918:pivot_longer(cols = -Reitur, names_to = "Year", values_to = "Value") %>%
1707319571934:group_by(Reitur, Year) %>%
1707319571951:summarize(HasValue = any(!is.na(Value) & Value > 0), .groups = 'drop') %>%
1707319571971:filter(!HasValue)
1707319572000:return(results)
1707319572014:}
1707319572043:# Apply the function to the jd dataframe
1707319572059:results <- check_numerical_values(jd, year_cols)
1707319572154:# Print results
1707319572172:print(results)
1707319572238:results_df <-as.data.frame(table(results))[,c(1,2,4)]
1707319572258:colnames(results_df) <-  c("Reitur","Year","Exclude")
1707319572274:rass <- results_df[order(results_df$Reitur) & results_df$Exclude==0,]
1707319572291:include <- rass[,1:2]
1707319572306:include$identifier <- paste(include$Reitur, include$Year, sep = "_")
1707319580707:jd_long <- jd %>%
1707319580725:pivot_longer(cols = starts_with("19") | starts_with("20"),
1707319580741:names_to = "Year",
1707319580757:values_to = "Value",
1707319580776:names_prefix = "") %>%
1707319580794:mutate(Year = as.numeric(Year))
1707319581809:jd_long$identifier <- paste(jd_long$Reitur, jd_long$Year, sep = "_")
1707319582514:jd_filtered <- jd_long %>%
1707319582534:filter(identifier %in% include$identifier)
1707319914816:jd_wide_filtered <- jd_filtered %>%
1707319914836:pivot_wider(names_from = Year, values_from = Value)
1707319983088:jd_fyrir_plot <-jd_wide_filtered %>%
1707319983108:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707319983126:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28",
1707319983140:"R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62") &
1707319983157:Type %in% "Blað- og runnfléttur") |>
1707319983173:filter(!species %in% "Ber klöpp") |>
1707319983188:#filter(!is.na(`2017`)) |>
1707319983206:#filter(!is.na(`2020`)) |>
1707319983223:mutate(#`2017` = case_when(
1707319983241:# is.na(`2017`) ~ 0,
1707319983256:# TRUE ~ `2017`),
1707319983273:# `2020` = case_when(
1707319983289:# is.na(`2020`) ~ 0,
1707319983308:# TRUE ~ `2020`),
1707319983325:PointType = case_when(
1707319983340:Fluor==1 ~ "Fluor",
1707319983361:Brennisteinn==1 ~ "Brennisteinn",
1707319983377:TRUE ~ "Other")) |>
1707319983392:group_by(km,Stadur,Reitur,PointType) |>
1707319983409:summarise(M17=sum(`2017`),M20=sum(`2020` ),CoverageChange=M20-M17, .groups = 'drop')
1707320004800:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707320004819:geom_point() + # Plot all points with conditional shapes and colors
1707320004832:geom_smooth(data = subset(jd_long, PointType == "Other"), method = "lm", se = T, aes(group = 1, color = "Other")) + # Only draw line for "Other"
1707320004844:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) + # 17 is triangle, 15 is square
1707320004857:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707320004868:theme_minimal() +
1707320004882:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707320004894:x = "Distance from Source (km)",
1707320004906:y = "Coverage Change",
1707320004919:shape = "Point Type",
1707320004932:color = "Point Type") +
1707320004946:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black"))) # Adjust legend to reflect the aesthetics accurately
1707320027560:jd_fyrir_plot <-jd_wide_filtered %>%
1707320027580:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707320027597:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28",
1707320027614:"R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62") &
1707320027630:Type %in% "Blað- og runnfléttur") |>
1707320027647:filter(!species %in% "Ber klöpp") |>
1707320027666:#filter(!is.na(`2017`)) |>
1707320027684:#filter(!is.na(`2020`)) |>
1707320027700:mutate(#`2017` = case_when(
1707320027716:# is.na(`2017`) ~ 0,
1707320027732:# TRUE ~ `2017`),
1707320027750:# `2020` = case_when(
1707320027765:# is.na(`2020`) ~ 0,
1707320027779:# TRUE ~ `2020`),
1707320027794:PointType = case_when(
1707320027811:Fluor==1 ~ "Fluor",
1707320027826:Brennisteinn==1 ~ "Brennisteinn",
1707320027841:TRUE ~ "Other")) |>
1707320027858:group_by(km,Stadur,Reitur,PointType) |>
1707320027873:summarise(M17=sum(`2017`),M20=sum(`2020` ),CoverageChange=M20-M17, .groups = 'drop')
1707320030330:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707320030356:geom_point() + # Plot all points with conditional shapes and colors
1707320030380:geom_smooth(data = subset(jd_long, PointType == "Other"), method = "lm", se = T, aes(group = 1, color = "Other")) + # Only draw line for "Other"
1707320030404:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) + # 17 is triangle, 15 is square
1707320030422:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707320030441:theme_minimal() +
1707320030457:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707320030476:x = "Distance from Source (km)",
1707320030493:y = "Coverage Change",
1707320030509:shape = "Point Type",
1707320030529:color = "Point Type") +
1707320030546:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black"))) # Adjust legend to reflect the aesthetics accurately
1707320063044:table(jd_wide_filtered$Fluor)
1707320121624:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707320121641:geom_point()
1707320141451:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707320141470:geom_point() + # Plot all points with conditional shapes and colors
1707320141487:geom_smooth(data = subset(jd_long, PointType == "Other"), method = "lm", se = T, aes(group = 1, color = "Other")) + # Only draw line for "Other"
1707320141503:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) + # 17 is triangle, 15 is square
1707320141519:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707320141538:theme_minimal() +
1707320141555:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707320141571:x = "Distance from Source (km)",
1707320141587:y = "Coverage Change",
1707320141604:shape = "Point Type",
1707320141620:color = "Point Type") +
1707320141635:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black")))
1707320150720:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707320150733:geom_point() + # Plot all points with conditional shapes and colors
1707320150747:geom_smooth(data = subset(jd_long, PointType == "Other"), method = "lm", se = T, aes(group = 1, color = "Other")) + # Only draw line for "Other"
1707320150760:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) + # 17 is triangle, 15 is square
1707320150772:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707320150787:theme_minimal()
1707320162642:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707320162660:geom_point() + # Plot all points with conditional shapes and colors
1707320162679:geom_smooth(data = subset(jd_long, PointType == "Other"), method = "lm", se = T, aes(group = 1, color = "Other"))
1707320176066:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707320176090:geom_point() + # Plot all points with conditional shapes and colors
1707320176111:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Other"), method = "lm", se = T, aes(group = 1, color = "Other")) + # Only draw line for "Other"
1707320176127:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) + # 17 is triangle, 15 is square
1707320176143:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707320176160:theme_minimal() +
1707320176178:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707320176196:x = "Distance from Source (km)",
1707320176214:y = "Coverage Change",
1707320176227:shape = "Point Type",
1707320176244:color = "Point Type") +
1707320176259:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black")))
1707320191610:jd_fyrir_plot
1707320209939:jd_wide_filtered
1707320239530:jd_wide_filtered %>%
1707320239547:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707320239563:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28",
1707320239582:"R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62") &
1707320239599:Type %in% "Blað- og runnfléttur")
1707320257394:jd_wide_filtered %>%
1707320257410:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707320257427:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28",
1707320257443:"R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62") &
1707320257459:Type %in% "Blað- og runnfléttur") |>
1707320257475:filter(!species %in% "Ber klöpp")
1707320272204:jd_wide_filtered %>%
1707320272217:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707320272229:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28",
1707320272240:"R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62") &
1707320272252:Type %in% "Blað- og runnfléttur") |>
1707320272264:filter(!species %in% "Ber klöpp") |>
1707320272277:mutate(PointType = case_when(
1707320272290:Fluor==1 ~ "Fluor",
1707320272303:Brennisteinn==1 ~ "Brennisteinn",
1707320272316:TRUE ~ "Other"))
1707320294860:jd_fyrir_plot <-jd_wide_filtered %>%
1707320294881:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707320294900:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28",
1707320294915:"R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62") &
1707320294931:Type %in% "Blað- og runnfléttur") |>
1707320294947:filter(!species %in% "Ber klöpp") |>
1707320294964:mutate(PointType = case_when(
1707320294981:Fluor==1 ~ "Fluor",
1707320294998:Brennisteinn==1 ~ "Brennisteinn",
1707320295016:TRUE ~ "Other")) |>
1707320295032:group_by(km,Stadur,Reitur,PointType) |>
1707320295050:summarise(M17=sum(`2017`, na.rm = T),M20=sum(`2020`, na.rm = T ),CoverageChange=M20-M17, .groups = 'drop')
1707320296066:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707320296090:geom_point() + # Plot all points with conditional shapes and colors
1707320296108:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Other"), method = "lm", se = T, aes(group = 1, color = "Other")) + # Only draw line for "Other"
1707320296125:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) + # 17 is triangle, 15 is square
1707320296142:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707320296160:theme_minimal() +
1707320296177:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707320296194:x = "Distance from Source (km)",
1707320296211:y = "Coverage Change",
1707320296228:shape = "Point Type",
1707320296244:color = "Point Type") +
1707320296259:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black")))
1707320329481:jd_fyrir_plot
1707320351485:jd_fyrir_plot[jd_fyrir_plot$Reitur=="R65",]
1707320376889:jd_filtered
1707320394080:jd_filtered[jd_filtered$Reitur=="R65",]
1707320413670:print(jd_filtered[jd_filtered$Reitur=="R65",], n=100)
1707320608434:jd_filtered <- jd_long %>%
1707320608453:filter(identifier %in% include$identifier) |>
1707320608468:filter(Type %in% "Blað- og runnfléttur") |>
1707320608485:filter(!species %in% "Ber klöpp")
1707320624938:jd_wide_filtered <- jd_filtered %>%
1707320624959:pivot_wider(names_from = Year, values_from = Value)
1707320626148:jd_fyrir_plot <-jd_wide_filtered %>%
1707320626166:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707320626178:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28",
1707320626193:"R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62")) |>
1707320626205:mutate(PointType = case_when(
1707320626217:Fluor==1 ~ "Fluor",
1707320626230:Brennisteinn==1 ~ "Brennisteinn",
1707320626244:TRUE ~ "Other")) |>
1707320626256:group_by(km,Stadur,Reitur,PointType) |>
1707320626268:summarise(M17=sum(`2017`, na.rm = T),M20=sum(`2020`, na.rm = T ),CoverageChange=M20-M17, .groups = 'drop')
1707320627572:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707320627592:geom_point() + # Plot all points with conditional shapes and colors
1707320627610:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Other"), method = "lm", se = T, aes(group = 1, color = "Other")) + # Only draw line for "Other"
1707320627627:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) + # 17 is triangle, 15 is square
1707320627643:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707320627659:theme_minimal() +
1707320627676:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707320627691:x = "Distance from Source (km)",
1707320627707:y = "Coverage Change",
1707320627723:shape = "Point Type",
1707320627741:color = "Point Type") +
1707320627755:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black")))
1707320682069:# Define year columns to check
1707320682083:year_cols <- c('1976', '1997', '2006', '2011', '2014', '2017', '2020', '2023', '1999')
1707320682112:# Create a function to check for rows without numerical values for each year within each Reitur
1707320682128:check_numerical_values <- function(data, year_cols) {
1707320682148:results <- data %>%
1707320682165:select(Reitur, all_of(year_cols)) %>%
1707320682178:pivot_longer(cols = -Reitur, names_to = "Year", values_to = "Value") %>%
1707320682196:group_by(Reitur, Year) %>%
1707320682212:summarize(HasValue = any(!is.na(Value) & Value > 0), .groups = 'drop') %>%
1707320682227:filter(!HasValue)
1707320682254:return(results)
1707320682271:}
1707320682297:# Apply the function to the jd dataframe
1707320682314:results <- check_numerical_values(jd, year_cols)
1707320682358:# Print results
1707320682373:print(results)
1707320682438:results_df <-as.data.frame(table(results))[,c(1,2,4)]
1707320682454:colnames(results_df) <-  c("Reitur","Year","Exclude")
1707320682469:rass <- results_df[order(results_df$Reitur) & results_df$Exclude==0,]
1707320682485:include <- rass[,1:2]
1707320682502:include$identifier <- paste(include$Reitur, include$Year, sep = "_")
1707320682540:jd_long <- jd %>%
1707320682557:pivot_longer(cols = starts_with("19") | starts_with("20"),
1707320682572:names_to = "Year",
1707320682586:values_to = "Value",
1707320682600:names_prefix = "") %>%
1707320682617:mutate(Year = as.numeric(Year))
1707320682642:jd_long$identifier <- paste(jd_long$Reitur, jd_long$Year, sep = "_")
1707320682686:jd_filtered <- jd_long %>%
1707320682702:filter(identifier %in% include$identifier) |>
1707320682717:filter(Type %in% "Blað- og runnfléttur") |>
1707320682732:filter(!species %in% "Ber klöpp")
1707320687272:jd_filtered
1707320699118:print(jd_filtered[jd_filtered$Reitur=="R65",], n=100)
1707320767284:print(jd_filtered[jd_filtered$Reitur=="R1",], n=100)
1707320941537:unique(jd_filtered$Year)
1707321026588:jd_filtered <- jd_long %>%
1707321026608:filter(identifier %in% include$identifier) |>
1707321026623:filter(Type %in% "Blað- og runnfléttur") |> # setja filter fyrir myndir hér
1707321026634:filter(!species %in% "Ber klöpp") |>
1707321026646:filter(!Year %in% c( '1976', '1997', '2006', '2011', '2014', '2023', '1999',)) |>
1707321026660:mutate(PointType = case_when(
1707321026678:Fluor==1 ~ "Fluor",
1707321026697:Brennisteinn==1 ~ "Brennisteinn",
1707321026716:TRUE ~ "Other"))
1707321075796:jd_filtered <- jd_long %>%
1707321075817:filter(identifier %in% include$identifier) |>
1707321075834:filter(Type %in% "Blað- og runnfléttur") |> # setja filter fyrir myndir hér
1707321075852:filter(!species %in% "Ber klöpp") |>
1707321075870:filter(!Year %in% c( '1976', '1997', '2006', '2011', '2014', '2023', '1999',)) |>
1707321075890:mutate(PointType = case_when(
1707321075906:!is.na(Fluor) ~ "Fluor",
1707321075921:!is.na(Brennisteinn) ~ "Brennisteinn",
1707321075937:TRUE ~ "Other"))
1707321088417:jd_filtered <- jd_long %>%
1707321088434:filter(identifier %in% include$identifier) |>
1707321088448:filter(Type %in% "Blað- og runnfléttur") |> # setja filter fyrir myndir hér
1707321088466:filter(!species %in% "Ber klöpp")
1707321097745:jd_filtered <- jd_long %>%
1707321097764:filter(identifier %in% include$identifier) |>
1707321097783:filter(Type %in% "Blað- og runnfléttur") |> # setja filter fyrir myndir hér
1707321097802:filter(!species %in% "Ber klöpp") |>
1707321097817:filter(!Year %in% c( '1976', '1997', '2006', '2011', '2014', '2023', '1999')) |>
1707321097836:mutate(PointType = case_when(
1707321097853:!is.na(Fluor) ~ "Fluor",
1707321097870:!is.na(Brennisteinn) ~ "Brennisteinn",
1707321097888:TRUE ~ "Other"))
1707321102498:jd_filtered
1707321138540:jd_fyrir_plot <-jd_wide_filtered %>%
1707321138556:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`, `2014`, `2023`)) |>
1707321138569:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28",
1707321138581:"R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62")) |>
1707321138595:group_by(km,Stadur,Reitur,PointType) |>
1707321138607:summarise(M17=sum(`2017`, na.rm = T),M20=sum(`2020`, na.rm = T ),CoverageChange=M20-M17, .groups = 'drop')
1707321174002:jd_fyrir_plot <-jd_wide_filtered |>
1707321174021:group_by(km,Stadur,Reitur,PointType) |>
1707321174037:summarise(M17=sum(`2017`, na.rm = T),M20=sum(`2020`, na.rm = T ),CoverageChange=M20-M17, .groups = 'drop')
1707321184238:jd_wide_filtered
1707321195644:jd_filtered <- jd_long %>%
1707321195668:filter(identifier %in% include$identifier) |>
1707321195688:filter(Type %in% "Blað- og runnfléttur") |> # setja filter fyrir myndir hér
1707321195705:filter(!species %in% "Ber klöpp") |>
1707321195722:filter(!Year %in% c( '1976', '1997', '2006', '2011', '2014', '2023', '1999')) |>
1707321195737:mutate(PointType = case_when(
1707321195753:!is.na(Fluor) ~ "Fluor",
1707321195767:!is.na(Brennisteinn) ~ "Brennisteinn",
1707321195782:TRUE ~ "Other"))
1707321199398:jd_filtered
1707321245797:rm(jd_wide_filtered)
1707321252410:jd_wide_filtered <- jd_filtered %>%
1707321252430:pivot_wider(names_from = Year, values_from = Value)
1707321266303:jd_fyrir_plot <-jd_wide_filtered |>
1707321266323:group_by(km,Stadur,Reitur,PointType) |>
1707321266339:summarise(M17=sum(`2017`, na.rm = T),M20=sum(`2020`, na.rm = T ),CoverageChange=M20-M17, .groups = 'drop')
1707321267768:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707321267793:geom_point() + # Plot all points with conditional shapes and colors
1707321267811:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Other"), method = "lm", se = T, aes(group = 1, color = "Other")) + # Only draw line for "Other"
1707321267828:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) + # 17 is triangle, 15 is square
1707321267845:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707321267860:theme_minimal() +
1707321267876:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707321267895:x = "Distance from Source (km)",
1707321267912:y = "Coverage Change",
1707321267932:shape = "Point Type",
1707321267948:color = "Point Type") +
1707321267962:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black")))
1707321294367:?pivot_wider()
1707321349027:jd_wide_filtered[jd_wide_filtered$Reitur=="R65",]
1707383072892:include$identifier
1707383125488:jd_filtered
1707383259638:jd_filtered |> group_by(Reitur,Year) |> summarise(sum(Value))
1707383295085:jd_filtered[jd_filtered$Reitur))"R11",]
1707383304297:jd_filtered[jd_filtered$Reitur=="R11",]
1707383361930:jd_filtered |> group_by(Reitur,Year) |> summarise(Value=sum(Value)) |> pivot_wider(names_from = Year, values_from = Value)
1707383390250:rass <- jd_filtered |> group_by(Reitur,Year) |> summarise(Value=sum(Value)) |> pivot_wider(names_from = Year, values_from = Value)
1707383420554:rass <- jd_filtered |> group_by(Reitur,Year) |> summarise(Value=sum(Value), .groups = 'drop') |> pivot_wider(names_from = Year, values_from = Value)
1707383438079:rass[,]
1707383440032:rass[1,]
1707383461258:rass[1,3]-rass[1,2]
1707383486978:jd_fyrir_plot
1707383497656:jd_filtered
1707383506105:jd_wide_filtered
1707383531815:jd_wide_filtered[1,12]-jd_wide_filtered[1,11]
1707383559120:table(jd_wide_filtered$`2020`)
1707383574774:table(is.na(jd_wide_filtered$`2020`))
1707383647093:jd_wide_filtered[complete.cases(jd_wide_filtered),]
1707383649457:jd_wide_filtered[complete.cases(jd_wide_filtered)]
1707383654182:jd_wide_filtered[,complete.cases(jd_wide_filtered)]
1707383694993:sapply(jd_wide_filtered, function(x) sum(is.na(x)))
1707383749056:sapply(jd_wide_filtered[!is.na(jd_wide_filtered$`2017`),], function(x) sum(is.na(x)))
1707383762753:sapply(jd_wide_filtered[!is.na(jd_wide_filtered$`2020`),], function(x) sum(is.na(x)))
1707383803184:sapply(jd_wide_filtered[!is.na(jd_wide_filtered$`2020`) & !is.na(jd_wide_filtered$`2017`),], function(x) sum(is.na(x)))
1707383830740:jd_fyrir_plot <-jd_wide_filtered[!is.na(jd_wide_filtered$`2020`) & !is.na(jd_wide_filtered$`2017`),] |>
1707383830763:group_by(km,Stadur,Reitur,PointType) |>
1707383830781:summarise(M17=sum(`2017`, na.rm = T),M20=sum(`2020`, na.rm = T ),CoverageChange=M20-M17, .groups = 'drop')
1707383832972:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707383832994:geom_point() + # Plot all points with conditional shapes and colors
1707383833011:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Other"), method = "lm", se = T, aes(group = 1, color = "Other")) + # Only draw line for "Other"
1707383833027:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) + # 17 is triangle, 15 is square
1707383833044:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707383833062:theme_minimal() +
1707383833080:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707383833096:x = "Distance from Source (km)",
1707383833117:y = "Coverage Change",
1707383833133:shape = "Point Type",
1707383833149:color = "Point Type") +
1707383833167:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black")))
1707383841277:jd_fyrir_plot
1707383850640:jd_wide_filtered[!is.na(jd_wide_filtered$`2020`) & !is.na(jd_wide_filtered$`2017`),]
1707383871305:jd_wide_filtered[!is.na(jd_wide_filtered$`2020`),]
1707383904334:results_df
1707383914681:table(results
1707383917945:)
1707383938082:# Print results
1707383938099:print(results)
1707383955334:jd_filtered
1707384020953:jd_wide_filtered
1707384074175:jd_wide_filtered |>
1707384074195:group_by(km,Stadur,Reitur,PointType)
1707384099265:jd_wide_filtered |>
1707384099283:group_by(km,Stadur,Reitur,PointType) |>
1707384099302:summarise(M17=sum(`2017`, na.rm = T),M20=sum(`2020`, na.rm = T ),CoverageChange=M20-M17, .groups = 'drop')
1707384147243:jd_wide_filtered |>
1707384147262:group_by(km,Stadur,Reitur,PointType) |>
1707384147274:summarise(M17=sum(`2017`, na.rm = T),M20=sum(`2020`, na.rm = T ),CoverageChange=M20-M17, .groups = 'drop')
1707384157814:jd_wide_filtered
1707384180230:jd_wide_filtered[jd_wide_filtered$Reitur=="R3",]
1707384193954:rass <- jd_wide_filtered[jd_wide_filtered$Reitur=="R3",]
1707384197018:rass |>
1707384197046:group_by(km,Stadur,Reitur,PointType) |>
1707384197069:summarise(M17=sum(`2017`, na.rm = T),M20=sum(`2020`, na.rm = T ),CoverageChange=M20-M17, .groups = 'drop')
1707384228171:rass <- jd_wide_filtered[jd_wide_filtered$Reitur=="R65",]
1707384229663:rass |>
1707384229680:group_by(km,Stadur,Reitur,PointType) |>
1707384229697:summarise(M17=sum(`2017`, na.rm = T),M20=sum(`2020`, na.rm = T ),CoverageChange=M20-M17, .groups = 'drop')
1707384235014:rass
1707384454936:jd_filtered
1707384672596:jd_filtered %>%
1707384672612:group_by(km,Stadur,Reitur, identifier,PointType)
1707384683433:jd_filtered %>%
1707384683453:group_by(km,Stadur,Reitur,PointType)
1707384719643:jd_filtered %>%
1707384719669:group_by(km,Stadur,Reitur, identifier,PointType) |>
1707384719689:summarise(Value=sum(Value))
1707384767912:jd_filtered %>%
1707384767930:group_by(km,Stadur,Reitur, identifier,PointType, Year) |>
1707384767947:summarise(Value=sum(Value))
1707384794898:jd_filtered %>%
1707384794922:group_by(km,Stadur,Reitur, identifier,PointType, Year) |>
1707384794940:summarise(Value=sum(Value)) |>
1707384794957:pivot_wider(names_from = Year, values_from = Value)
1707384928674:rass <- jd_filtered %>%
1707384928690:group_by(km,Stadur,Reitur, identifier,PointType, Year) |>
1707384928703:summarise(Value=sum(Value)) |>
1707384928717:pivot_wider(names_from = Year, values_from = Value)
1707384940497:print(rass, n=140)
1707385083925:jd[jd$Reitur=="R23",]
1707385114745:jd_long
1707385130695:jd_long[jd_long$Reitur=="R23",]
1707385157842:jd_long[jd_long$Reitur=="R23" & jd_long$Type=="Blað- og runnfléttur",]
1707385279381:jd_filtered[jd_filtered$Reitur=="R23" & jd_filtered$Type=="Blað- og runnfléttur",]
1707385365809:jd_filtered[jd_filtered$Reitur=="R65" & jd_filtered$Type=="Blað- og runnfléttur",]
1707385541268:jd_filtered[jd_filtered$Reitur %in% c("R65","R23") & jd_filtered$Type=="Blað- og runnfléttur",]
1707385631481:rass <- jd_filtered[jd_filtered$Reitur %in% c("R65","R23") & jd_filtered$Type=="Blað- og runnfléttur",c("Reitur","Year","Value")]
1707385633818:rass
1707385842656:filtered_data <- rass %>%
1707385842677:group_by(Reitur) %>%
1707385842692:filter(all(c(2017, 2020) %in% unique(Year))) %>%
1707385842704:ungroup()
1707385843598:# View the filtered data
1707385843619:print(filtered_data)
1707385902335:jd_filtered <- jd_long %>%
1707385902358:filter(identifier %in% include$identifier) |>
1707385902379:filter(Type %in% "Blað- og runnfléttur") |> # setja filter fyrir myndir hér
1707385902397:filter(!species %in% "Ber klöpp") |>
1707385902415:filter(!Year %in% c( '1976', '1997', '2006', '2011', '2014', '2023', '1999')) |>
1707385902434:mutate(PointType = case_when(
1707385902451:!is.na(Fluor) ~ "Fluor",
1707385902468:!is.na(Brennisteinn) ~ "Brennisteinn",
1707385902483:TRUE ~ "Other")) |>
1707385902499:group_by(Reitur) %>%
1707385902520:filter(all(c(2017, 2020) %in% unique(Year))) %>%
1707385902539:ungroup()
1707385907770:jd_filtered
1707385921000:jd_filtered[jd_filtered$Reitur %in% c("R65","R23") & jd_filtered$Type=="Blað- og runnfléttur",c("Reitur","Year","Value")]
1707385930165:jd_wide_filtered <- jd_filtered %>%
1707385930187:pivot_wider(names_from = Year, values_from = Value)
1707385930884:jd_fyrir_plot <-jd_wide_filtered |>
1707385930904:group_by(km,Stadur,Reitur,PointType) |>
1707385930925:summarise(M17=sum(`2017`, na.rm = T),M20=sum(`2020`, na.rm = T ),CoverageChange=M20-M17, .groups = 'drop')
1707385931892:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707385931917:geom_point() + # Plot all points with conditional shapes and colors
1707385931935:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Other"), method = "lm", se = T, aes(group = 1, color = "Other")) + # Only draw line for "Other"
1707385931950:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) + # 17 is triangle, 15 is square
1707385931967:scale_color_manual(values = c("Fluor" = "green", "Brennisteinn" = "red", "Other" = "black")) +
1707385931985:theme_minimal() +
1707385932005:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707385932021:x = "Distance from Source (km)",
1707385932037:y = "Coverage Change",
1707385932053:shape = "Point Type",
1707385932071:color = "Point Type") +
1707385932087:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black")))
1707386050612:jd_fyrir_plot
1707386253585:# Define colors from Dark2 palette
1707386253600:colors_dark2 <- brewer.pal(3, "Dark2")
1707386304015:library(RColorBrewer)
1707386305936:# Define colors from Dark2 palette
1707386305952:colors_dark2 <- brewer.pal(3, "Dark2")
1707386305987:# Adjust your ggplot code
1707386306003:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707386306018:geom_point(size = 3) + # Increase point size
1707386306035:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Other"), method = "lm", se = TRUE, aes(group = 1, color = "Other")) +
1707386306049:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) +
1707386306065:scale_color_manual(values = c("Fluor" = colors_dark2[1], "Brennisteinn" = colors_dark2[2], "Other" = colors_dark2[3])) +
1707386306079:theme_minimal() +
1707386306096:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707386306112:x = "Distance from Source (km)",
1707386306130:y = "Coverage Change",
1707386306146:shape = "Point Type",
1707386306160:color = "Point Type") +
1707386306175:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black")))
1707386359774:?scale_shape_manual
1707386435572:# Define colors from Dark2 palette
1707386435591:colors_dark2 <- brewer.pal(3, "Dark2")
1707386435619:# Adjust your ggplot code
1707386435635:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707386435652:geom_point(size = 3) + # Increase point size
1707386435667:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Other"), method = "lm", se = TRUE, aes(group = 1, color = "Other")) +
1707386435685:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 20)) +
1707386435701:scale_color_manual(values = c("Fluor" = colors_dark2[1], "Brennisteinn" = colors_dark2[2], "Other" = colors_dark2[3])) +
1707386435717:theme_minimal() +
1707386435733:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707386435752:x = "Distance from Source (km)",
1707386435768:y = "Coverage Change",
1707386435787:shape = "Point Type",
1707386435803:color = "Point Type") +
1707386435818:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black")))
1707386489461:# Define colors from Dark2 palette
1707386489478:colors_dark2 <- brewer.pal(3, "Dark2")
1707386489507:# Adjust your ggplot code
1707386489523:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707386489540:geom_point(size = 3) + # Increase point size
1707386489557:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Other"), method = "lm", se = TRUE, aes(group = 1, color = "Other")) +
1707386489575:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 10)) +
1707386489596:scale_color_manual(values = c("Fluor" = colors_dark2[1], "Brennisteinn" = colors_dark2[2], "Other" = colors_dark2[3])) +
1707386489614:theme_minimal() +
1707386489631:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707386489650:x = "Distance from Source (km)",
1707386489671:y = "Coverage Change",
1707386489685:shape = "Point Type",
1707386489703:color = "Point Type") +
1707386489718:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black")))
1707386509153:# Define colors from Dark2 palette
1707386509167:colors_dark2 <- brewer.pal(3, "Dark2")
1707386509194:# Adjust your ggplot code
1707386509209:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707386509225:geom_point(size = 3) + # Increase point size
1707386509242:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Other"), method = "lm", se = TRUE, aes(group = 1, color = "Other")) +
1707386509258:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) +
1707386509273:scale_color_manual(values = c("Fluor" = colors_dark2[1], "Brennisteinn" = colors_dark2[2], "Other" = colors_dark2[3])) +
1707386509288:theme_minimal() +
1707386509305:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707386509322:x = "Distance from Source (km)",
1707386509338:y = "Coverage Change",
1707386509355:shape = "Point Type",
1707386509372:color = "Point Type") +
1707386509388:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black")))
1707386697668:# Adjust your ggplot code
1707386697691:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707386697707:geom_point(size = 3) + # Increase point size
1707386697725:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Other"), method = "lm", se = TRUE, aes(group = 1, color = "Other")) +
1707386697740:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) +
1707386697756:scale_color_manual(values = c("Fluor" = colors_dark2[1], "Brennisteinn" = colors_dark2[2], "Other" = colors_dark2[3])) +
1707386697770:theme_minimal()  +
1707386697782:theme(panel.border = element_rect(colour = "black", fill=NA, size=1)) + # Add frame around the plot area
1707386697797:labs(title = "Coverage Change vs. Distance for Point Type 'Other'",
1707386697810:x = "Distance from Source (km)",
1707386697823:y = "Coverage Change",
1707386697836:shape = "Point Type",
1707386697848:color = "Point Type") +
1707386697860:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black")))
1707386777204:# Adjust your ggplot code
1707386777229:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707386777248:geom_point(size = 3) + # Increase point size
1707386777267:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Other"), method = "lm", se = TRUE, aes(group = 1, color = "Other")) +
1707386777283:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) +
1707386777300:scale_color_manual(values = c("Fluor" = colors_dark2[1], "Brennisteinn" = colors_dark2[2], "Other" = colors_dark2[3])) +
1707386777316:theme_minimal()  +
1707386777333:theme(panel.border = element_rect(colour = "black", fill=NA, size=1)) + # Add frame around the plot area
1707386777350:labs(title = "Blað- og runnfléttur",
1707386777369:x = "Fjarlægð frá Grundartanga (km)",
1707386777388:y = "Þekjubreyting 2017-2020 (prósentustig",
1707386777405:shape = "Point Type",
1707386777422:color = "Point Type") +
1707386777438:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black")))
1707386802572:# Adjust your ggplot code
1707386802591:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707386802608:geom_point(size = 3) + # Increase point size
1707386802624:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Other"), method = "lm", se = TRUE, aes(group = 1, color = "Other")) +
1707386802640:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) +
1707386802657:scale_color_manual(values = c("Fluor" = colors_dark2[1], "Brennisteinn" = colors_dark2[2], "Other" = colors_dark2[3])) +
1707386802672:theme_minimal()  +
1707386802689:theme(panel.border = element_rect(colour = "black", fill=NA, size=.5)) + # Add frame around the plot area
1707386802708:labs(title = "Blað- og runnfléttur",
1707386802725:x = "Fjarlægð frá Grundartanga (km)",
1707386802740:y = "Þekjubreyting 2017-2020 (prósentustig",
1707386802757:shape = "Point Type",
1707386802770:color = "Point Type") +
1707386802782:guides(color = guide_legend(override.aes = list(shape = 1)), shape = guide_legend(override.aes = list(color = "black")))
1707386986683:# Adjust your ggplot code
1707386986705:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707386986722:geom_point(size = 3) + # Increase point size
1707386986742:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Other"), method = "lm", se = TRUE, aes(group = 1, color = "Other")) +
1707386986757:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) +
1707386986774:scale_color_manual(values = c("Fluor" = colors_dark2[1], "Brennisteinn" = colors_dark2[2], "Other" = colors_dark2[3])) +
1707386986791:theme_minimal()  +
1707386986808:theme(panel.border = element_rect(colour = "black", fill=NA, size=.5)) + # Add frame around the plot area
1707386986826:labs(title = "Blað- og runnfléttur",
1707386986842:x = "Fjarlægð frá Grundartanga (km)",
1707386986859:y = "Þekjubreyting 2017-2020 (prósentustig",
1707386986875:shape = "Reitir", # Change legend title for shapes
1707386986894:color = "Reitir") + # Change legend title for colors
1707386986910:guides(color = guide_legend(override.aes = list(shape = 17)), # Ensure legend matches plot symbols
1707386986926:shape = guide_legend(override.aes = list(color = colors_dark2[1]))) # Match colors in legend
1707387027339:# Adjust your ggplot code
1707387027362:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707387027379:geom_point(size = 3) + # Increase point size
1707387027397:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Other"), method = "lm", se = TRUE, aes(group = 1, color = "Other")) +
1707387027414:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) +
1707387027428:scale_color_manual(values = c("Fluor" = colors_dark2[1], "Brennisteinn" = colors_dark2[2], "Other" = colors_dark2[3])) +
1707387027442:theme_minimal()  +
1707387027458:theme(panel.border = element_rect(colour = "black", fill=NA, size=.5)) + # Add frame around the plot area
1707387027476:labs(title = "Blað- og runnfléttur",
1707387027494:x = "Fjarlægð frá Grundartanga (km)",
1707387027512:y = "Þekjubreyting 2017-2020 (prósentustig",
1707387027533:shape = "Reitir", # Change legend title for shapes
1707387027554:color = "Reitir") + # Change legend title for colors
1707387027574:guides(color = guide_legend(override.aes = list(shape = c(17,15,1))), # Ensure legend matches plot symbols
1707387027594:shape = guide_legend(override.aes = list(color = colors_dark2[1]))) # Match colors in legend
1707387046396:# Adjust your ggplot code
1707387046420:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707387046440:geom_point(size = 3) + # Increase point size
1707387046464:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Other"), method = "lm", se = TRUE, aes(group = 1, color = "Other")) +
1707387046482:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) +
1707387046496:scale_color_manual(values = c("Fluor" = colors_dark2[1], "Brennisteinn" = colors_dark2[2], "Other" = colors_dark2[3])) +
1707387046513:theme_minimal()  +
1707387046532:theme(panel.border = element_rect(colour = "black", fill=NA, size=.5)) + # Add frame around the plot area
1707387046548:labs(title = "Blað- og runnfléttur",
1707387046566:x = "Fjarlægð frá Grundartanga (km)",
1707387046587:y = "Þekjubreyting 2017-2020 (prósentustig",
1707387046607:shape = "Reitir", # Change legend title for shapes
1707387046626:color = "Reitir") + # Change legend title for colors
1707387046642:guides(color = guide_legend(override.aes = list(shape = c(17,15,1))), # Ensure legend matches plot symbols
1707387046661:shape = guide_legend(override.aes = list(color = colors_dark2))) # Match colors in legend
1707387210559:# Adjust your ggplot code
1707387210582:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707387210601:geom_point(size = 3) + # Increase point size
1707387210620:#geom_smooth(data = subset(jd_fyrir_plot, PointType == "Other"), method = "lm", se = TRUE, aes(group = 1, color = "Other")) +
1707387210640:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) +
1707387210659:scale_color_manual(values = c("Fluor" = colors_dark2[1], "Brennisteinn" = colors_dark2[2], "Other" = colors_dark2[3])) +
1707387210676:theme_minimal()  +
1707387210693:theme(panel.border = element_rect(colour = "black", fill=NA, size=.5)) + # Add frame around the plot area
1707387210707:labs(title = "Blað- og runnfléttur",
1707387210725:x = "Fjarlægð frá Grundartanga (km)",
1707387210746:y = "Þekjubreyting 2017-2020 (prósentustig",
1707387210764:shape = "Reitir", # Change legend title for shapes
1707387210780:color = "Reitir") + # Change legend title for colors
1707387210796:guides(color = guide_legend(override.aes = list(shape = c(17,15,1))), # Ensure legend matches plot symbols
1707387210811:shape = guide_legend(override.aes = list(color = colors_dark2))) # Match colors in legend
1707387233708:# Adjust your ggplot code
1707387233733:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707387233753:geom_point(size = 3) + # Increase point size
1707387233771:#geom_smooth(data = subset(jd_fyrir_plot, PointType == "Other"), method = "lm", se = TRUE, aes(group = 1, color = "Other")) +
1707387233788:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) +
1707387233805:scale_color_manual(values = c("Fluor" = colors_dark2[1], "Brennisteinn" = colors_dark2[2], "Other" = colors_dark2[3])) +
1707387233823:theme_minimal()  +
1707387233840:theme(panel.border = element_rect(colour = "black", fill=NA, size=.5)) + # Add frame around the plot area
1707387233862:labs(title = "Blað- og runnfléttur",
1707387233883:x = "Fjarlægð frá Grundartanga (km)",
1707387233903:y = "Þekjubreyting 2017-2020 (prósentustig",
1707387233921:shape = "Reitir", # Change legend title for shapes
1707387233939:color = "Reitir") + # Change legend title for colors
1707387233956:guides(color = guide_legend(override.aes = list(shape = c(17,15,1))), # Ensure legend matches plot symbols
1707387233972:shape = guide_legend(override.aes = list(color = colors_dark2))) +# Match colors in legend
1707387233987:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Other"), method = "lm", se = TRUE, aes(group = 1, color = "Other")) +
1707387234086:# Assuming you have a way to identify which combinations to exclude, you filter them here
1707387234101:# For example, if 'results' had 'Reitur' and 'Year' to exclude
1707387234117:# This step assumes results is adjusted to the correct format
1707387234132:# jd_filtered <- jd_long %>%
1707387234149:#   filter(!(paste(Reitur, Year, sep = "_") %in% results$identifier))
1707387234178:# If you need to pivot back to wide format after filtering
1707387234194:# jd_wide_filtered <- jd_filtered %>%
1707387234213:#   pivot_wider(names_from = Year, values_from = Value)
1707387234243:# Note: The above is a conceptual approach. You'll need to adjust it based on actual conditions and data structure.
1707387234291:#
1707387234827:# Assuming 'jd' is your dataframe
1707387234848:# Loading necessary library
1707387234864:library(dplyr)
1707387245076:# Adjust your ggplot code
1707387245096:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707387245114:geom_point(size = 3) + # Increase point size
1707387245134:#geom_smooth(data = subset(jd_fyrir_plot, PointType == "Other"), method = "lm", se = TRUE, aes(group = 1, color = "Other")) +
1707387245150:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) +
1707387245166:scale_color_manual(values = c("Fluor" = colors_dark2[1], "Brennisteinn" = colors_dark2[2], "Other" = colors_dark2[3])) +
1707387245182:theme_minimal()  +
1707387245198:theme(panel.border = element_rect(colour = "black", fill=NA, size=.5)) + # Add frame around the plot area
1707387245217:labs(title = "Blað- og runnfléttur",
1707387245234:x = "Fjarlægð frá Grundartanga (km)",
1707387245250:y = "Þekjubreyting 2017-2020 (prósentustig",
1707387245271:shape = "Reitir", # Change legend title for shapes
1707387245287:color = "Reitir") + # Change legend title for colors
1707387245305:guides(color = guide_legend(override.aes = list(shape = c(17,15,1))), # Ensure legend matches plot symbols
1707387245322:shape = guide_legend(override.aes = list(color = colors_dark2))) +# Match colors in legend
1707387245341:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Other"), method = "lm", se = TRUE, aes(group = 1, color = "Other"))
1707387316692:# Adjust your ggplot code
1707387316717:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707387316735:geom_point(size = 3) + # Increase point size
1707387316752:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Other"), method = "lm", se = TRUE, aes(group = 1, color = "Other"),show.legend = FALSE) +
1707387316770:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) +
1707387316785:scale_color_manual(values = c("Fluor" = colors_dark2[1], "Brennisteinn" = colors_dark2[2], "Other" = colors_dark2[3])) +
1707387316803:theme_minimal()  +
1707387316821:theme(panel.border = element_rect(colour = "black", fill=NA, size=.5)) + # Add frame around the plot area
1707387316839:labs(title = "Blað- og runnfléttur",
1707387316857:x = "Fjarlægð frá Grundartanga (km)",
1707387316874:y = "Þekjubreyting 2017-2020 (prósentustig",
1707387316885:shape = "Reitir", # Change legend title for shapes
1707387316899:color = "Reitir") + # Change legend title for colors
1707387316910:guides(color = guide_legend(override.aes = list(shape = c(17,15,1))), # Ensure legend matches plot symbols
1707387316922:shape = guide_legend(override.aes = list(color = colors_dark2))) # Match colors in legend
1707387452540:# Adjust your ggplot code
1707387452562:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707387452584:geom_point(size = 3) + # Increase point size
1707387452599:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Other"), method = "lm", se = TRUE, aes(group = 1, color = "Other"),show.legend = FALSE) +
1707387452616:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) +
1707387452632:scale_color_manual(values = c("Fluor" = colors_dark2[1], "Brennisteinn" = colors_dark2[2], "Other" = colors_dark2[3])) +
1707387452647:theme_minimal()  +
1707387452663:theme(panel.border = element_rect(colour = "black", fill=NA, size=.5),
1707387452680:legend.position = "bottom") + # Add frame around the plot area
1707387452697:labs(title = "Blað- og runnfléttur",
1707387452716:x = "Fjarlægð frá Grundartanga (km)",
1707387452732:y = "Þekjubreyting 2017-2020 (prósentustig",
1707387452748:shape = "Reitir", # Change legend title for shapes
1707387452767:color = "Reitir") + # Change legend title for colors
1707387452783:guides(color = guide_legend(override.aes = list(shape = c(17,15,1))), # Ensure legend matches plot symbols
1707387452800:shape = guide_legend(override.aes = list(color = colors_dark2))) # Match colors in legend
1707387547741:# Adjust your ggplot code
1707387547763:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707387547781:geom_point(size = 3) + # Increase point size
1707387547798:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Other"), method = "lm", se = TRUE, aes(group = 1, color = "Other"),show.legend = FALSE) +
1707387547814:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Other" = 1)) +
1707387547830:scale_color_manual(values = c("Fluor" = colors_dark2[1], "Brennisteinn" = colors_dark2[2], "rass" = colors_dark2[3])) +
1707387547846:theme_minimal()  +
1707387547861:theme(panel.border = element_rect(colour = "black", fill=NA, size=.5)) + # Add frame around the plot area
1707387547876:labs(title = "Blað- og runnfléttur",
1707387547891:x = "Fjarlægð frá Grundartanga (km)",
1707387547909:y = "Þekjubreyting 2017-2020 (prósentustig",
1707387547926:shape = "Reitir", # Change legend title for shapes
1707387547941:color = "Reitir") + # Change legend title for colors
1707387547957:guides(color = guide_legend(override.aes = list(shape = c(17,15,1))), # Ensure legend matches plot symbols
1707387547974:shape = guide_legend(override.aes = list(color = colors_dark2))) # Match colors in legend
1707387558414:# Adjust your ggplot code
1707387558433:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707387558448:geom_point(size = 3) + # Increase point size
1707387558469:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Other"), method = "lm", se = TRUE, aes(group = 1, color = "Other"),show.legend = FALSE) +
1707387558487:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "rass" = 1)) +
1707387558503:scale_color_manual(values = c("Fluor" = colors_dark2[1], "Brennisteinn" = colors_dark2[2], "rass" = colors_dark2[3])) +
1707387558518:theme_minimal()  +
1707387558534:theme(panel.border = element_rect(colour = "black", fill=NA, size=.5)) + # Add frame around the plot area
1707387558549:labs(title = "Blað- og runnfléttur",
1707387558562:x = "Fjarlægð frá Grundartanga (km)",
1707387558577:y = "Þekjubreyting 2017-2020 (prósentustig",
1707387558597:shape = "Reitir", # Change legend title for shapes
1707387558612:color = "Reitir") + # Change legend title for colors
1707387558630:guides(color = guide_legend(override.aes = list(shape = c(17,15,1))), # Ensure legend matches plot symbols
1707387558647:shape = guide_legend(override.aes = list(color = colors_dark2))) # Match colors in legend
1707387587965:# Adjust your ggplot code
1707387587984:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707387588001:geom_point(size = 3) + # Increase point size
1707387588019:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Other"), method = "lm", se = TRUE, aes(group = 1, color = "Other"),show.legend = FALSE) +
1707387588035:scale_shape_manual(values = c("Fluor" = 17, "Brennisteinn" = 15, "Utan þynningarsvæðis" = 1)) +
1707387588052:scale_color_manual(values = c("Fluor" = colors_dark2[1], "Brennisteinn" = colors_dark2[2], "Utan þynningarsvæðis" = colors_dark2[3])) +
1707387588066:theme_minimal()  +
1707387588080:theme(panel.border = element_rect(colour = "black", fill=NA, size=.5)) + # Add frame around the plot area
1707387588094:labs(title = "Blað- og runnfléttur",
1707387588108:x = "Fjarlægð frá Grundartanga (km)",
1707387588126:y = "Þekjubreyting 2017-2020 (prósentustig",
1707387588143:shape = "Reitir", # Change legend title for shapes
1707387588159:color = "Reitir") + # Change legend title for colors
1707387588176:guides(color = guide_legend(override.aes = list(shape = c(17,15,1))), # Ensure legend matches plot symbols
1707387588193:shape = guide_legend(override.aes = list(color = colors_dark2))) # Match colors in legend
1707387636127:unique(jd_fyrir_plot$PointType)
1707387846507:jd_fyrir_plot <-jd_wide_filtered |>
1707387846525:group_by(km,Stadur,Reitur,PointType) |>
1707387846541:summarise(M17=sum(`2017`, na.rm = T),M20=sum(`2020`, na.rm = T ),CoverageChange=M20-M17, .groups = 'drop') |>
1707387846555:mutate(PointType = case_when(
1707387846573:"Fluor" ~ "Innan þynningarsvæðis flúors",
1707387846590:"Brennisteinn" ~ "Innan þynningarsvæðis brennisteins",
1707387846605:TRUE ~ "Utan þynningarsvæðis iðnaðarsvæðisins")) |>
1707387846624:group_by(Reitur)
1707387871094:jd_fyrir_plot <-jd_wide_filtered |>
1707387871117:group_by(km,Stadur,Reitur,PointType) |>
1707387871135:summarise(M17=sum(`2017`, na.rm = T),M20=sum(`2020`, na.rm = T ),CoverageChange=M20-M17, .groups = 'drop') |>
1707387871155:mutate(PointType = case_when(
1707387871173:"Fluor" ~ "Innan þynningarsvæðis flúors",
1707387871191:"Brennisteinn" ~ "Innan þynningarsvæðis brennisteins",
1707387871209:TRUE ~ "Utan þynningarsvæðis iðnaðarsvæðisins"))
1707387893189:jd_fyrir_plot <-jd_wide_filtered |>
1707387893212:group_by(km,Stadur,Reitur,PointType) |>
1707387893229:summarise(M17=sum(`2017`, na.rm = T),M20=sum(`2020`, na.rm = T ),CoverageChange=M20-M17, .groups = 'drop') |>
1707387893245:mutate(PointType = case_when(
1707387893262:PointType=="Fluor" ~ "Innan þynningarsvæðis flúors",
1707387893279:PointType=="Brennisteinn" ~ "Innan þynningarsvæðis brennisteins",
1707387893295:TRUE ~ "Utan þynningarsvæðis iðnaðarsvæðisins"))
1707387896133:# Define colors from Dark2 palette
1707387896153:library(RColorBrewer)
1707387896662:colors_dark2 <- brewer.pal(3, "Dark2")
1707387897261:# Adjust your ggplot code
1707387897286:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707387897302:geom_point(size = 3) + # Increase point size
1707387897319:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Other"), method = "lm", se = TRUE, aes(group = 1, color = "Other"),show.legend = FALSE) +
1707387897338:scale_shape_manual(values = c("Innan þynningarsvæðis flúors" = 17, "Innan þynningarsvæðis brennisteins" = 15, "Utan þynningarsvæðis iðnaðarsvæðisins" = 1)) +
1707387897356:scale_color_manual(values = c("Innan þynningarsvæðis flúors" = colors_dark2[1], "Innan þynningarsvæðis brennisteins" = colors_dark2[2], "Utan þynningarsvæðis iðnaðarsvæðisins" = colors_dark2[3])) +
1707387897373:theme_minimal()  +
1707387897393:theme(panel.border = element_rect(colour = "black", fill=NA, size=.5)) + # Add frame around the plot area
1707387897408:labs(title = "Blað- og runnfléttur",
1707387897424:x = "Fjarlægð frá Grundartanga (km)",
1707387897441:y = "Þekjubreyting 2017-2020 (prósentustig",
1707387897456:shape = "Reitir", # Change legend title for shapes
1707387897471:color = "Reitir") + # Change legend title for colors
1707387897488:guides(color = guide_legend(override.aes = list(shape = c(17,15,1))), # Ensure legend matches plot symbols
1707387897504:shape = guide_legend(override.aes = list(color = colors_dark2))) # Match colors in legend
1707387915662:jd_fyrir_plot
1707387983694:# Adjust your ggplot code
1707387983719:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707387983739:geom_point(size = 3) + # Increase point size
1707387983757:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Utan þynningarsvæðis iðnaðarsvæðisins"), method = "lm", se = TRUE, aes(group = 1, color = "Utan þynningarsvæðis iðnaðarsvæðisins"),show.legend = FALSE) +
1707387983775:scale_shape_manual(values = c("Innan þynningarsvæðis flúors" = 17, "Innan þynningarsvæðis brennisteins" = 15, "Utan þynningarsvæðis iðnaðarsvæðisins" = 1)) +
1707387983792:scale_color_manual(values = c("Innan þynningarsvæðis flúors" = colors_dark2[1], "Innan þynningarsvæðis brennisteins" = colors_dark2[2], "Utan þynningarsvæðis iðnaðarsvæðisins" = colors_dark2[3])) +
1707387983810:theme_minimal()  +
1707387983828:theme(panel.border = element_rect(colour = "black", fill=NA, size=.5)) + # Add frame around the plot area
1707387983846:labs(title = "Blað- og runnfléttur",
1707387983866:x = "Fjarlægð frá Grundartanga (km)",
1707387983883:y = "Þekjubreyting 2017-2020 (prósentustig",
1707387983902:shape = "Reitir", # Change legend title for shapes
1707387983920:color = "Reitir") + # Change legend title for colors
1707387983939:guides(color = guide_legend(override.aes = list(shape = c(17,15,1))), # Ensure legend matches plot symbols
1707387983960:shape = guide_legend(override.aes = list(color = colors_dark2))) # Match colors in legend
1707388020001:# Adjust your ggplot code
1707388020026:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707388020054:geom_point(size = 3) + # Increase point size
1707388020071:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Utan þynningarsvæðis iðnaðarsvæðisins"), method = "lm", se = TRUE, aes(group = 1, color = "Utan þynningarsvæðis iðnaðarsvæðisins"),show.legend = FALSE) +
1707388020087:scale_shape_manual(values = c("Innan þynningarsvæðis flúors" = 17, "Innan þynningarsvæðis brennisteins" = 15, "Utan þynningarsvæðis iðnaðarsvæðisins" = 1)) +
1707388020103:scale_color_manual(values = c("Innan þynningarsvæðis flúors" = colors_dark2[1], "Innan þynningarsvæðis brennisteins" = colors_dark2[2], "Utan þynningarsvæðis iðnaðarsvæðisins" = colors_dark2[3])) +
1707388020119:theme_minimal()  +
1707388020137:+ theme(legend.position = c(0.1, 0.9)) +
1707388020151:theme(panel.border = element_rect(colour = "black", fill=NA, size=.5)) + # Add frame around the plot area
1707388020166:labs(title = "Blað- og runnfléttur",
1707388020180:x = "Fjarlægð frá Grundartanga (km)",
1707388020194:y = "Þekjubreyting 2017-2020 (prósentustig",
1707388020208:shape = "Reitir", # Change legend title for shapes
1707388020227:color = "Reitir") + # Change legend title for colors
1707388020243:guides(color = guide_legend(override.aes = list(shape = c(17,15,1))), # Ensure legend matches plot symbols
1707388020260:shape = guide_legend(override.aes = list(color = colors_dark2))) # Match colors in legend
1707388043655:# Adjust your ggplot code
1707388043681:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707388043700:geom_point(size = 3) + # Increase point size
1707388043719:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Utan þynningarsvæðis iðnaðarsvæðisins"), method = "lm", se = TRUE, aes(group = 1, color = "Utan þynningarsvæðis iðnaðarsvæðisins"),show.legend = FALSE) +
1707388043736:scale_shape_manual(values = c("Innan þynningarsvæðis flúors" = 17, "Innan þynningarsvæðis brennisteins" = 15, "Utan þynningarsvæðis iðnaðarsvæðisins" = 1)) +
1707388043754:scale_color_manual(values = c("Innan þynningarsvæðis flúors" = colors_dark2[1], "Innan þynningarsvæðis brennisteins" = colors_dark2[2], "Utan þynningarsvæðis iðnaðarsvæðisins" = colors_dark2[3])) +
1707388043772:theme_minimal()  +
1707388043788:theme(legend.position = c(0.1, 0.9)) +
1707388043807:theme(panel.border = element_rect(colour = "black", fill=NA, size=.5)) + # Add frame around the plot area
1707388043829:labs(title = "Blað- og runnfléttur",
1707388043851:x = "Fjarlægð frá Grundartanga (km)",
1707388043873:y = "Þekjubreyting 2017-2020 (prósentustig",
1707388043893:shape = "Reitir", # Change legend title for shapes
1707388043914:color = "Reitir") + # Change legend title for colors
1707388043932:guides(color = guide_legend(override.aes = list(shape = c(17,15,1))), # Ensure legend matches plot symbols
1707388043952:shape = guide_legend(override.aes = list(color = colors_dark2))) # Match colors in legend
1707388058279:# Adjust your ggplot code
1707388058296:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707388058314:geom_point(size = 3) + # Increase point size
1707388058329:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Utan þynningarsvæðis iðnaðarsvæðisins"), method = "lm", se = TRUE, aes(group = 1, color = "Utan þynningarsvæðis iðnaðarsvæðisins"),show.legend = FALSE) +
1707388058347:scale_shape_manual(values = c("Innan þynningarsvæðis flúors" = 17, "Innan þynningarsvæðis brennisteins" = 15, "Utan þynningarsvæðis iðnaðarsvæðisins" = 1)) +
1707388058363:scale_color_manual(values = c("Innan þynningarsvæðis flúors" = colors_dark2[1], "Innan þynningarsvæðis brennisteins" = colors_dark2[2], "Utan þynningarsvæðis iðnaðarsvæðisins" = colors_dark2[3])) +
1707388058377:theme_minimal()  +
1707388058393:theme(legend.position = c(0.9, 0.1)) +
1707388058409:theme(panel.border = element_rect(colour = "black", fill=NA, size=.5)) + # Add frame around the plot area
1707388058426:labs(title = "Blað- og runnfléttur",
1707388058442:x = "Fjarlægð frá Grundartanga (km)",
1707388058457:y = "Þekjubreyting 2017-2020 (prósentustig",
1707388058474:shape = "Reitir", # Change legend title for shapes
1707388058491:color = "Reitir") + # Change legend title for colors
1707388058507:guides(color = guide_legend(override.aes = list(shape = c(17,15,1))), # Ensure legend matches plot symbols
1707388058523:shape = guide_legend(override.aes = list(color = colors_dark2))) # Match colors in legend
1707388069038:# Adjust your ggplot code
1707388069061:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707388069080:geom_point(size = 3) + # Increase point size
1707388069097:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Utan þynningarsvæðis iðnaðarsvæðisins"), method = "lm", se = TRUE, aes(group = 1, color = "Utan þynningarsvæðis iðnaðarsvæðisins"),show.legend = FALSE) +
1707388069116:scale_shape_manual(values = c("Innan þynningarsvæðis flúors" = 17, "Innan þynningarsvæðis brennisteins" = 15, "Utan þynningarsvæðis iðnaðarsvæðisins" = 1)) +
1707388069134:scale_color_manual(values = c("Innan þynningarsvæðis flúors" = colors_dark2[1], "Innan þynningarsvæðis brennisteins" = colors_dark2[2], "Utan þynningarsvæðis iðnaðarsvæðisins" = colors_dark2[3])) +
1707388069150:theme_minimal()  +
1707388069167:theme(legend.position = c(0.8, 0.1)) +
1707388069185:theme(panel.border = element_rect(colour = "black", fill=NA, size=.5)) + # Add frame around the plot area
1707388069204:labs(title = "Blað- og runnfléttur",
1707388069222:x = "Fjarlægð frá Grundartanga (km)",
1707388069239:y = "Þekjubreyting 2017-2020 (prósentustig",
1707388069257:shape = "Reitir", # Change legend title for shapes
1707388069274:color = "Reitir") + # Change legend title for colors
1707388069292:guides(color = guide_legend(override.aes = list(shape = c(17,15,1))), # Ensure legend matches plot symbols
1707388069308:shape = guide_legend(override.aes = list(color = colors_dark2))) # Match colors in legend
1707388082786:# Adjust your ggplot code
1707388082806:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707388082821:geom_point(size = 3) + # Increase point size
1707388082839:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Utan þynningarsvæðis iðnaðarsvæðisins"), method = "lm", se = TRUE, aes(group = 1, color = "Utan þynningarsvæðis iðnaðarsvæðisins"),show.legend = FALSE) +
1707388082857:scale_shape_manual(values = c("Innan þynningarsvæðis flúors" = 17, "Innan þynningarsvæðis brennisteins" = 15, "Utan þynningarsvæðis iðnaðarsvæðisins" = 1)) +
1707388082872:scale_color_manual(values = c("Innan þynningarsvæðis flúors" = colors_dark2[1], "Innan þynningarsvæðis brennisteins" = colors_dark2[2], "Utan þynningarsvæðis iðnaðarsvæðisins" = colors_dark2[3])) +
1707388082891:theme_minimal()  +
1707388082910:theme(legend.position = c(0.8, 0.15)) +
1707388082926:theme(panel.border = element_rect(colour = "black", fill=NA, size=.5)) + # Add frame around the plot area
1707388082942:labs(title = "Blað- og runnfléttur",
1707388082958:x = "Fjarlægð frá Grundartanga (km)",
1707388082974:y = "Þekjubreyting 2017-2020 (prósentustig",
1707388082994:shape = "Reitir", # Change legend title for shapes
1707388083009:color = "Reitir") + # Change legend title for colors
1707388083025:guides(color = guide_legend(override.aes = list(shape = c(17,15,1))), # Ensure legend matches plot symbols
1707388083040:shape = guide_legend(override.aes = list(color = colors_dark2))) # Match colors in legend
1707388124060:# Adjust your ggplot code
1707388124082:ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707388124099:geom_point(size = 3) + # Increase point size
1707388124117:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Utan þynningarsvæðis iðnaðarsvæðisins"), method = "lm", se = TRUE, aes(group = 1, color = "Utan þynningarsvæðis iðnaðarsvæðisins"),show.legend = FALSE) +
1707388124133:scale_shape_manual(values = c("Innan þynningarsvæðis flúors" = 17, "Innan þynningarsvæðis brennisteins" = 15, "Utan þynningarsvæðis iðnaðarsvæðisins" = 1)) +
1707388124150:scale_color_manual(values = c("Innan þynningarsvæðis flúors" = colors_dark2[1], "Innan þynningarsvæðis brennisteins" = colors_dark2[2], "Utan þynningarsvæðis iðnaðarsvæðisins" = colors_dark2[3])) +
1707388124168:theme_minimal()  +
1707388124186:theme(legend.position = c(0.8, 0.15)) +
1707388124202:theme(panel.border = element_rect(colour = "black", fill=NA, size=.5)) + # Add frame around the plot area
1707388124217:labs(title = "Blað- og runnfléttur",
1707388124237:x = "Fjarlægð frá Grundartanga (km)",
1707388124252:y = "Þekjubreyting 2017-2020 (prósentustig)",
1707388124269:shape = "Reitir", # Change legend title for shapes
1707388124287:color = "Reitir") + # Change legend title for colors
1707388124302:guides(color = guide_legend(override.aes = list(shape = c(17,15,1))), # Ensure legend matches plot symbols
1707388124322:shape = guide_legend(override.aes = list(color = colors_dark2))) # Match colors in legend
1707388354557:# Adjust your ggplot code
1707388354577:p2017Og2020 <- ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707388354596:geom_point(size = 3) + # Increase point size
1707388354612:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Utan þynningarsvæðis iðnaðarsvæðisins"), method = "lm", se = TRUE, aes(group = 1, color = "Utan þynningarsvæðis iðnaðarsvæðisins"),show.legend = FALSE) +
1707388354629:scale_shape_manual(values = c("Innan þynningarsvæðis flúors" = 17, "Innan þynningarsvæðis brennisteins" = 15, "Utan þynningarsvæðis iðnaðarsvæðisins" = 1)) +
1707388354647:scale_color_manual(values = c("Innan þynningarsvæðis flúors" = colors_dark2[1], "Innan þynningarsvæðis brennisteins" = colors_dark2[2], "Utan þynningarsvæðis iðnaðarsvæðisins" = colors_dark2[3])) +
1707388354664:theme_minimal()  +
1707388354680:theme(legend.position = c(0.8, 0.15)) +
1707388354699:theme(panel.border = element_rect(colour = "black", fill=NA, size=.5)) + # Add frame around the plot area
1707388354717:labs(title = "Blað- og runnfléttur",
1707388354735:x = "Fjarlægð frá Grundartanga (km)",
1707388354750:y = "Þekjubreyting 2017-2020 (prósentustig)",
1707388354767:shape = "Reitir", # Change legend title for shapes
1707388354782:color = "Reitir") + # Change legend title for colors
1707388354800:guides(color = guide_legend(override.aes = list(shape = c(17,15,1))), # Ensure legend matches plot symbols
1707388354816:shape = guide_legend(override.aes = list(color = colors_dark2))) # Match colors in legend
1707388383461:ggsave(filename = 2017Og2020, plot = p2017Og2020, width = 11.7, height = 8.3, dpi = 300, units = "in")
1707388401735:ggsave(filename = "2017Og2020.png", plot = p2017Og2020, width = 11.7, height = 8.3, dpi = 300, units = "in")
1707388468572:ggsave(filename = "2017Og2020.png", plot = p2017Og2020, width = 11.7, height = 8.3, dpi = 300, units = "in", bg = 'white')
1707389021259:jd_filtered <- jd_long %>%
1707389021282:filter(identifier %in% include$identifier) |>
1707389021300:filter(Type %in% "Blað- og runnfléttur") |> # setja filter fyrir myndir hér
1707389021315:filter(!species %in% "Ber klöpp") |>
1707389021330:filter(!Year %in% c( '1976', '1997', '2006', '2011', '2014', '2017', '1999')) |>
1707389021346:mutate(PointType = case_when(
1707389021364:!is.na(Fluor) ~ "Fluor",
1707389021382:!is.na(Brennisteinn) ~ "Brennisteinn",
1707389021397:TRUE ~ "Other")) |>
1707389021415:group_by(Reitur) %>%
1707389021431:filter(all(c(2023, 2020) %in% unique(Year))) %>%
1707389021448:ungroup()
1707389024069:jd_wide_filtered <- jd_filtered %>%
1707389024087:pivot_wider(names_from = Year, values_from = Value)
1707389025558:jd_fyrir_plot <-jd_wide_filtered |>
1707389025582:group_by(km,Stadur,Reitur,PointType) |>
1707389025600:summarise(M23=sum(`2023`, na.rm = T),M20=sum(`2020`, na.rm = T ),CoverageChange=M23-M20, .groups = 'drop') |>
1707389025617:mutate(PointType = case_when(
1707389025632:PointType=="Fluor" ~ "Innan þynningarsvæðis flúors",
1707389025648:PointType=="Brennisteinn" ~ "Innan þynningarsvæðis brennisteins",
1707389025663:TRUE ~ "Utan þynningarsvæðis iðnaðarsvæðisins"))
1707389027069:# Define colors from Dark2 palette
1707389027096:library(RColorBrewer)
1707389027696:colors_dark2 <- brewer.pal(3, "Dark2")
1707389030043:# Adjust your ggplot code
1707389030067:p2017Og2020 <- ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707389030086:geom_point(size = 3) + # Increase point size
1707389030102:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Utan þynningarsvæðis iðnaðarsvæðisins"), method = "lm", se = TRUE, aes(group = 1, color = "Utan þynningarsvæðis iðnaðarsvæðisins"),show.legend = FALSE) +
1707389030118:scale_shape_manual(values = c("Innan þynningarsvæðis flúors" = 17, "Innan þynningarsvæðis brennisteins" = 15, "Utan þynningarsvæðis iðnaðarsvæðisins" = 1)) +
1707389030135:scale_color_manual(values = c("Innan þynningarsvæðis flúors" = colors_dark2[1], "Innan þynningarsvæðis brennisteins" = colors_dark2[2], "Utan þynningarsvæðis iðnaðarsvæðisins" = colors_dark2[3])) +
1707389030152:theme_minimal()  +
1707389030167:theme(legend.position = c(0.8, 0.15)) +
1707389030183:theme(panel.border = element_rect(colour = "black", fill=NA, size=.5)) + # Add frame around the plot area
1707389030199:labs(title = "Blað- og runnfléttur",
1707389030215:x = "Fjarlægð frá Grundartanga (km)",
1707389030232:y = "Þekjubreyting 2017-2020 (prósentustig)",
1707389030250:shape = "Reitir", # Change legend title for shapes
1707389030266:color = "Reitir") + # Change legend title for colors
1707389030283:guides(color = guide_legend(override.aes = list(shape = c(17,15,1))), # Ensure legend matches plot symbols
1707389030300:shape = guide_legend(override.aes = list(color = colors_dark2))) # Match colors in legend
1707389036389:p2017Og2020
1707389093119:# Adjust your ggplot code
1707389093144:p202Og2023 <- ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707389093162:geom_point(size = 3) + # Increase point size
1707389093177:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Utan þynningarsvæðis iðnaðarsvæðisins"), method = "lm", se = TRUE, aes(group = 1, color = "Utan þynningarsvæðis iðnaðarsvæðisins"),show.legend = FALSE) +
1707389093194:scale_shape_manual(values = c("Innan þynningarsvæðis flúors" = 17, "Innan þynningarsvæðis brennisteins" = 15, "Utan þynningarsvæðis iðnaðarsvæðisins" = 1)) +
1707389093209:scale_color_manual(values = c("Innan þynningarsvæðis flúors" = colors_dark2[1], "Innan þynningarsvæðis brennisteins" = colors_dark2[2], "Utan þynningarsvæðis iðnaðarsvæðisins" = colors_dark2[3])) +
1707389093226:theme_minimal()  +
1707389093242:theme(legend.position = c(0.8, 0.15)) +
1707389093260:theme(panel.border = element_rect(colour = "black", fill=NA, size=.5)) + # Add frame around the plot area
1707389093278:labs(title = "Blað- og runnfléttur",
1707389093294:x = "Fjarlægð frá Grundartanga (km)",
1707389093310:y = "Þekjubreyting 2017-2020 (prósentustig)",
1707389093327:shape = "Reitir", # Change legend title for shapes
1707389093343:color = "Reitir") + # Change legend title for colors
1707389093359:guides(color = guide_legend(override.aes = list(shape = c(17,15,1))), # Ensure legend matches plot symbols
1707389093376:shape = guide_legend(override.aes = list(color = colors_dark2))) # Match colors in legend
1707389095119:ggsave(filename = "p202Og2023.png", plot = p202Og2023, width = 11.7, height = 8.3, dpi = 300, units = "in", bg = 'white')
1707389160340:# Adjust your ggplot code
1707389160363:p202Og2023 <- ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707389160386:geom_point(size = 3) + # Increase point size
1707389160404:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Utan þynningarsvæðis iðnaðarsvæðisins"), method = "lm", se = TRUE, aes(group = 1, color = "Utan þynningarsvæðis iðnaðarsvæðisins"),show.legend = FALSE) +
1707389160423:scale_shape_manual(values = c("Innan þynningarsvæðis flúors" = 17, "Innan þynningarsvæðis brennisteins" = 15, "Utan þynningarsvæðis iðnaðarsvæðisins" = 1)) +
1707389160440:scale_color_manual(values = c("Innan þynningarsvæðis flúors" = colors_dark2[1], "Innan þynningarsvæðis brennisteins" = colors_dark2[2], "Utan þynningarsvæðis iðnaðarsvæðisins" = colors_dark2[3])) +
1707389160455:theme_minimal()  +
1707389160473:theme(legend.position = c(0.8, 0.15)) +
1707389160490:theme(panel.border = element_rect(colour = "black", fill=NA, size=.5)) + # Add frame around the plot area
1707389160506:labs(title = "Blað- og runnfléttur",
1707389160526:x = "Fjarlægð frá Grundartanga (km)",
1707389160543:y = "Þekjubreyting 2020-2023 (prósentustig)",
1707389160559:shape = "Reitir", # Change legend title for shapes
1707389160576:color = "Reitir") + # Change legend title for colors
1707389160591:guides(color = guide_legend(override.aes = list(shape = c(17,15,1))), # Ensure legend matches plot symbols
1707389160608:shape = guide_legend(override.aes = list(color = colors_dark2))) # Match colors in legend
1707389162106:ggsave(filename = "p202Og2023.png", plot = p202Og2023, width = 11.7, height = 8.3, dpi = 300, units = "in", bg = 'white')
1707389336578:jd_filtered$Type
1707389341738:unique(jd_filtered$Type)
1707389431733:unique(jd_long$Type)
1707389477929:jd_filtered <- jd_long %>%
1707389477954:filter(identifier %in% include$identifier) |>
1707389477975:filter(Type %in% "Mosar") |> # setja filter fyrir myndir hér
1707389477994:filter(!species %in% "Ber klöpp") |>
1707389478013:filter(!Year %in% c( '1976', '1997', '2006', '2011', '2014', '2017', '1999')) |>
1707389478031:mutate(PointType = case_when(
1707389478047:!is.na(Fluor) ~ "Fluor",
1707389478062:!is.na(Brennisteinn) ~ "Brennisteinn",
1707389478077:TRUE ~ "Other")) |>
1707389478094:group_by(Reitur) %>%
1707389478110:filter(all(c(2023, 2020) %in% unique(Year))) %>%
1707389478128:ungroup()
1707389479216:jd_wide_filtered <- jd_filtered %>%
1707389479242:pivot_wider(names_from = Year, values_from = Value)
1707389480563:jd_fyrir_plot <-jd_wide_filtered |>
1707389480595:group_by(km,Stadur,Reitur,PointType) |>
1707389480614:summarise(M23=sum(`2023`, na.rm = T),M20=sum(`2020`, na.rm = T ),CoverageChange=M23-M20, .groups = 'drop') |>
1707389480630:mutate(PointType = case_when(
1707389480644:PointType=="Fluor" ~ "Innan þynningarsvæðis flúors",
1707389480660:PointType=="Brennisteinn" ~ "Innan þynningarsvæðis brennisteins",
1707389480677:TRUE ~ "Utan þynningarsvæðis iðnaðarsvæðisins"))
1707389483096:# Define colors from Dark2 palette
1707389483118:library(RColorBrewer)
1707389483601:colors_dark2 <- brewer.pal(3, "Dark2")
1707389484378:# Adjust your ggplot code
1707389484401:p202Og2023 <- ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707389484422:geom_point(size = 3) + # Increase point size
1707389484440:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Utan þynningarsvæðis iðnaðarsvæðisins"), method = "lm", se = TRUE, aes(group = 1, color = "Utan þynningarsvæðis iðnaðarsvæðisins"),show.legend = FALSE) +
1707389484456:scale_shape_manual(values = c("Innan þynningarsvæðis flúors" = 17, "Innan þynningarsvæðis brennisteins" = 15, "Utan þynningarsvæðis iðnaðarsvæðisins" = 1)) +
1707389484472:scale_color_manual(values = c("Innan þynningarsvæðis flúors" = colors_dark2[1], "Innan þynningarsvæðis brennisteins" = colors_dark2[2], "Utan þynningarsvæðis iðnaðarsvæðisins" = colors_dark2[3])) +
1707389484488:theme_minimal()  +
1707389484505:theme(legend.position = c(0.8, 0.15)) +
1707389484521:theme(panel.border = element_rect(colour = "black", fill=NA, size=.5)) + # Add frame around the plot area
1707389484538:labs(title = "Blað- og runnfléttur",
1707389484553:x = "Fjarlægð frá Grundartanga (km)",
1707389484570:y = "Þekjubreyting 2020-2023 (prósentustig)",
1707389484586:shape = "Reitir", # Change legend title for shapes
1707389484605:color = "Reitir") + # Change legend title for colors
1707389484622:guides(color = guide_legend(override.aes = list(shape = c(17,15,1))), # Ensure legend matches plot symbols
1707389484638:shape = guide_legend(override.aes = list(color = colors_dark2))) # Match colors in legend
1707389494059:p202Og2023
1707389685952:# Adjust your ggplot code
1707389685975:p202Og2023 <- ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707389685992:geom_point(size = 3) + # Increase point size
1707389686010:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Utan þynningarsvæðis iðnaðarsvæðisins"), method = "lm", se = TRUE, aes(group = 1, color = "Utan þynningarsvæðis iðnaðarsvæðisins"),show.legend = FALSE) +
1707389686026:scale_shape_manual(values = c("Innan þynningarsvæðis flúors" = 17, "Innan þynningarsvæðis brennisteins" = 15, "Utan þynningarsvæðis iðnaðarsvæðisins" = 1)) +
1707389686041:scale_color_manual(values = c("Innan þynningarsvæðis flúors" = colors_dark2[1], "Innan þynningarsvæðis brennisteins" = colors_dark2[2], "Utan þynningarsvæðis iðnaðarsvæðisins" = colors_dark2[3])) +
1707389686057:theme_minimal()  +
1707389686072:theme(legend.position = c(0.8, 0.15)) +
1707389686087:theme(panel.border = element_rect(colour = "black", fill=NA, size=.5)) + # Add frame around the plot area
1707389686104:labs(title = "Mosar",
1707389686118:x = "Fjarlægð frá Grundartanga (km)",
1707389686135:y = "Þekjubreyting 2020-2023 (prósentustig)",
1707389686154:shape = "Reitir", # Change legend title for shapes
1707389686171:color = "Reitir") + # Change legend title for colors
1707389686190:guides(color = guide_legend(override.aes = list(shape = c(17,15,1))), # Ensure legend matches plot symbols
1707389686209:shape = guide_legend(override.aes = list(color = colors_dark2))) # Match colors in legend
1707389694258:p202Og2023
1707389718922:ggsave(filename = "p202Og2023Mosar.png", plot = p202Og2023, width = 11.7, height = 8.3, dpi = 300, units = "in", bg = 'white')
1707389810698:jd_filtered <- jd_long %>%
1707389810715:filter(identifier %in% include$identifier) |>
1707389810730:filter(Type %in% "Blað- og runnfléttur") |> # setja filter fyrir myndir hér
1707389810746:filter(!species %in% "Ber klöpp") |>
1707389810763:filter(!Year %in% c( '1976', '1997', '2006', '2011', '2014', '2017', '1999')) |>
1707389810779:mutate(PointType = case_when(
1707389810794:!is.na(Fluor) ~ "Fluor",
1707389810811:!is.na(Brennisteinn) ~ "Brennisteinn",
1707389810826:TRUE ~ "Other")) |>
1707389810841:group_by(Reitur) %>%
1707389810858:filter(all(c(2023, 2020) %in% unique(Year))) %>%
1707389810874:ungroup()
1707389810946:jd_wide_filtered <- jd_filtered %>%
1707389810968:pivot_wider(names_from = Year, values_from = Value)
1707389811014:jd_fyrir_plot <-jd_wide_filtered |>
1707389811030:group_by(km,Stadur,Reitur,PointType) |>
1707389811045:summarise(M23=sum(`2023`, na.rm = T),M20=sum(`2020`, na.rm = T ),CoverageChange=M23-M20, .groups = 'drop') |>
1707389811067:mutate(PointType = case_when(
1707389811084:PointType=="Fluor" ~ "Innan þynningarsvæðis flúors",
1707389811101:PointType=="Brennisteinn" ~ "Innan þynningarsvæðis brennisteins",
1707389811116:TRUE ~ "Utan þynningarsvæðis iðnaðarsvæðisins"))
1707389811292:# Define colors from Dark2 palette
1707389811307:library(RColorBrewer)
1707389811321:colors_dark2 <- brewer.pal(3, "Dark2")
1707389811352:# Adjust your ggplot code
1707389811370:mynd1 <- ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707389811389:geom_point(size = 3) + # Increase point size
1707389811406:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Utan þynningarsvæðis iðnaðarsvæðisins"), method = "lm", se = TRUE, aes(group = 1, color = "Utan þynningarsvæðis iðnaðarsvæðisins"),show.legend = FALSE) +
1707389811426:scale_shape_manual(values = c("Innan þynningarsvæðis flúors" = 17, "Innan þynningarsvæðis brennisteins" = 15, "Utan þynningarsvæðis iðnaðarsvæðisins" = 1)) +
1707389811448:scale_color_manual(values = c("Innan þynningarsvæðis flúors" = colors_dark2[1], "Innan þynningarsvæðis brennisteins" = colors_dark2[2], "Utan þynningarsvæðis iðnaðarsvæðisins" = colors_dark2[3])) +
1707389811464:theme_minimal()  +
1707389811479:theme(legend.position = c(0.8, 0.15)) +
1707389811496:theme(panel.border = element_rect(colour = "black", fill=NA, size=.5)) + # Add frame around the plot area
1707389811511:labs(title = "Blað- og runnfléttur",
1707389811526:x = "Fjarlægð frá Grundartanga (km)",
1707389811541:y = "Þekjubreyting 2020-2023 (prósentustig)",
1707389811557:shape = "Reitir", # Change legend title for shapes
1707389811573:color = "Reitir") + # Change legend title for colors
1707389811589:guides(color = guide_legend(override.aes = list(shape = c(17,15,1))), # Ensure legend matches plot symbols
1707389811604:shape = guide_legend(override.aes = list(color = colors_dark2))) # Match colors in legend
1707389811642:ggsave(filename = "mynd1.png", plot = mynd1, width = 11.7, height = 8.3, dpi = 300, units = "in", bg = 'white')
1707389812191:# Assuming you have a way to identify which combinations to exclude, you filter them here
1707389812208:# For example, if 'results' had 'Reitur' and 'Year' to exclude
1707389812227:# This step assumes results is adjusted to the correct format
1707389812244:# jd_filtered <- jd_long %>%
1707389812259:#   filter(!(paste(Reitur, Year, sep = "_") %in% results$identifier))
1707389812290:# If you need to pivot back to wide format after filtering
1707389812305:# jd_wide_filtered <- jd_filtered %>%
1707389812322:#   pivot_wider(names_from = Year, values_from = Value)
1707389812356:# Note: The above is a conceptual approach. You'll need to adjust it based on actual conditions and data structure.
1707389812406:#
1707389812474:#Mosar
1707389812512:jd_filtered <- jd_long %>%
1707389812527:filter(identifier %in% include$identifier) |>
1707389812541:filter(Type %in% "Mosar") |> # setja filter fyrir myndir hér
1707389812556:filter(!species %in% "Ber klöpp") |>
1707389812572:filter(!Year %in% c( '1976', '1997', '2006', '2011', '2014', '2017', '1999')) |>
1707389812591:mutate(PointType = case_when(
1707389812605:!is.na(Fluor) ~ "Fluor",
1707389812620:!is.na(Brennisteinn) ~ "Brennisteinn",
1707389812639:TRUE ~ "Other")) |>
1707389812657:group_by(Reitur) %>%
1707389812678:filter(all(c(2023, 2020) %in% unique(Year))) %>%
1707389812698:ungroup()
1707389812758:jd_wide_filtered <- jd_filtered %>%
1707389812775:pivot_wider(names_from = Year, values_from = Value)
1707389812817:jd_fyrir_plot <-jd_wide_filtered |>
1707389812836:group_by(km,Stadur,Reitur,PointType) |>
1707389812853:summarise(M23=sum(`2023`, na.rm = T),M20=sum(`2020`, na.rm = T ),CoverageChange=M23-M20, .groups = 'drop') |>
1707389812872:mutate(PointType = case_when(
1707389812893:PointType=="Fluor" ~ "Innan þynningarsvæðis flúors",
1707389812913:PointType=="Brennisteinn" ~ "Innan þynningarsvæðis brennisteins",
1707389812933:TRUE ~ "Utan þynningarsvæðis iðnaðarsvæðisins"))
1707389812995:# Define colors from Dark2 palette
1707389813014:library(RColorBrewer)
1707389813034:colors_dark2 <- brewer.pal(3, "Dark2")
1707389813068:# Adjust your ggplot code
1707389813083:mynd2 <- ggplot(jd_fyrir_plot, aes(x = km, y = CoverageChange, color = PointType, shape = PointType)) +
1707389813103:geom_point(size = 3) + # Increase point size
1707389813123:geom_smooth(data = subset(jd_fyrir_plot, PointType == "Utan þynningarsvæðis iðnaðarsvæðisins"), method = "lm", se = TRUE, aes(group = 1, color = "Utan þynningarsvæðis iðnaðarsvæðisins"),show.legend = FALSE) +
1707389813142:scale_shape_manual(values = c("Innan þynningarsvæðis flúors" = 17, "Innan þynningarsvæðis brennisteins" = 15, "Utan þynningarsvæðis iðnaðarsvæðisins" = 1)) +
1707389813157:scale_color_manual(values = c("Innan þynningarsvæðis flúors" = colors_dark2[1], "Innan þynningarsvæðis brennisteins" = colors_dark2[2], "Utan þynningarsvæðis iðnaðarsvæðisins" = colors_dark2[3])) +
1707389813176:theme_minimal()  +
1707389813195:theme(legend.position = c(0.8, 0.15)) +
1707389813214:theme(panel.border = element_rect(colour = "black", fill=NA, size=.5)) + # Add frame around the plot area
1707389813231:labs(title = "Mosar",
1707389813251:x = "Fjarlægð frá Grundartanga (km)",
1707389813269:y = "Þekjubreyting 2020-2023 (prósentustig)",
1707389813286:shape = "Reitir", # Change legend title for shapes
1707389813303:color = "Reitir") + # Change legend title for colors
1707389813320:guides(color = guide_legend(override.aes = list(shape = c(17,15,1))), # Ensure legend matches plot symbols
1707389813339:shape = guide_legend(override.aes = list(color = colors_dark2))) # Match colors in legend
1707389813380:ggsave(filename = "mynd2.png", plot = mynd2, width = 11.7, height = 8.3, dpi = 300, units = "in", bg = 'white')
1707390934668:data <- read.csv("gogn/hreinsad.csv", check.names = F)
1707390938443:str(data)
1707390977411:FogS <- read.csv("gogn/Reitir_myndir_lykill.csv", encoding = "latin1")
1707390982376:str(FogS)
1707391064257:data <- read.csv("gogn/hreinsad.csv", check.names = F)
1707391064288:FogS <- read.csv("gogn/Reitir_myndir_lykill.csv", encoding = "latin1")
1707391064314:joined_data <- data %>%
1707391064329:left_join(KM, by = "Reitur") %>%
1707391064348:select(species, Type, Reitur, km, everything())
1707391064391:jd <- joined_data %>%
1707391064411:left_join(FogS, by = "Reitur") %>%
1707391064432:select(species, Type, Reitur, km, Fluor, Brennisteinn, everything())
1707391064487:library(dplyr)
1707391064515:# Define year columns to check
1707391064530:year_cols <- c('1976', '1997', '2006', '2011', '2014', '2017', '2020', '2023', '1999')
1707391064564:# Create a function to check for rows without numerical values for each year within each Reitur
1707391064584:check_numerical_values <- function(data, year_cols) {
1707391064604:results <- data %>%
1707391064624:select(Reitur, all_of(year_cols)) %>%
1707391064644:pivot_longer(cols = -Reitur, names_to = "Year", values_to = "Value") %>%
1707391064663:group_by(Reitur, Year) %>%
1707391064680:summarize(HasValue = any(!is.na(Value) & Value > 0), .groups = 'drop') %>%
1707391064700:filter(!HasValue)
1707391064730:return(results)
1707391064747:}
1707391064780:# Apply the function to the jd dataframe
1707391064798:results <- check_numerical_values(jd, year_cols)
1707391064860:# Print results
1707391064879:print(results)
1707391064960:results_df <-as.data.frame(table(results))[,c(1,2,4)]
1707391064978:colnames(results_df) <-  c("Reitur","Year","Exclude")
1707391064995:rass <- results_df[order(results_df$Reitur) & results_df$Exclude==0,]
1707391065013:include <- rass[,1:2]
1707391065029:include$identifier <- paste(include$Reitur, include$Year, sep = "_")
1707391065075:jd_long <- jd %>%
1707391065096:pivot_longer(cols = starts_with("19") | starts_with("20"),
1707391065111:names_to = "Year",
1707391065128:values_to = "Value",
1707391065144:names_prefix = "") %>%
1707391065161:mutate(Year = as.numeric(Year))
1707391065282:jd_long$identifier <- paste(jd_long$Reitur, jd_long$Year, sep = "_")
1707391075479:jd_long
1707391431229:joined_data <- data %>%
1707391431253:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) %>%
1707391431275:select(species, Type, Reitur, km, everything()) |>
1707391431294:select(-c(`1999`)) |>
1707391431314:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28", "R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62")) |>
1707391431330:#mutate(Type = if_else(species == "Ber klöpp", "Ber klöpp", Type)) |>
1707391431346:filter(!species %in% "Ber klöpp")
1707391493165:KM <- read.csv("gogn/coverkm.csv", check.names = F)
1707391494240:data <- read.csv("gogn/hreinsad.csv", check.names = F)
1707391877482:joined_data <- data %>%
1707391877501:#left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) %>% # Ef þessi villa kemur upp þá Error in `left_join()`:  ! Join columns must be present in data.✖ Problem with `Type`, `species`, `2020`, and `2023`.
1707391877519:left_join(FogS, by = "Reitur") %>%
1707391877536:select(species, Type, Reitur, km, everything()) |>
1707391877552:select(-c(`1999`)) |>
1707391877569:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28", "R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62")) |>
1707391877586:#mutate(Type = if_else(species == "Ber klöpp", "Ber klöpp", Type)) |>
1707391877603:filter(!species %in% "Ber klöpp")
1707391905033:joined_data <- data %>%
1707391905050:#left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) %>% # Ef þessi villa kemur upp þá Error in `left_join()`:  ! Join columns must be present in data.✖ Problem with `Type`, `species`, `2020`, and `2023`.
1707391905067:left_join(FogS, by = "Reitur")
1707391945651:joined_data <- data %>%
1707391945670:#left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) %>% # Ef þessi villa kemur upp þá Error in `left_join()`:  ! Join columns must be present in data.✖ Problem with `Type`, `species`, `2020`, and `2023`.
1707391945686:left_join(KM, by = "Reitur") %>%
1707391945700:select(species, Type, Reitur, km, everything()) |>
1707391945718:select(-c(`1999`)) |>
1707391945736:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28", "R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62")) |>
1707391945752:#mutate(Type = if_else(species == "Ber klöpp", "Ber klöpp", Type)) |>
1707391945769:filter(!species %in% "Ber klöpp")
1707391969926:joined_data <- data %>%
1707391969944:#left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) %>% # Ef þessi villa kemur upp þá Error in `left_join()`:  ! Join columns must be present in data.✖ Problem with `Type`, `species`, `2020`, and `2023`.
1707391969959:left_join(KM, by = "Reitur") %>%
1707391969975:select(species, Type, Reitur, km, everything())
1707391978976:joined_data <- data %>%
1707391978997:#left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) %>% # Ef þessi villa kemur upp þá Error in `left_join()`:  ! Join columns must be present in data.✖ Problem with `Type`, `species`, `2020`, and `2023`.
1707391979013:left_join(KM, by = "Reitur") |>
1707391979030:select(-c(`1999`)) |>
1707391979046:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28", "R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62")) |>
1707391979063:#mutate(Type = if_else(species == "Ber klöpp", "Ber klöpp", Type)) |>
1707391979082:filter(!species %in% "Ber klöpp")
1707391994856:joined_data <- data %>%
1707391994870:#left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) %>% # Ef þessi villa kemur upp þá Error in `left_join()`:  ! Join columns must be present in data.✖ Problem with `Type`, `species`, `2020`, and `2023`.
1707391994883:left_join(KM, by = "Reitur") |>
1707391994897:select(-c(`1999`))
1707392020938:joined_data <- data %>%
1707392020959:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) %>% # Ef þessi villa kemur upp þá Error in `left_join()`:  ! Join columns must be present in data.✖ Problem with `Type`, `species`, `2020`, and `2023`.
1707392020975:select(species, Type, Reitur, km, everything()) |>
1707392020993:select(-c(`1999`)) |>
1707392021011:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28", "R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62")) |>
1707392021026:#mutate(Type = if_else(species == "Ber klöpp", "Ber klöpp", Type)) |>
1707392021045:filter(!species %in% "Ber klöpp")
1707392029249:KM <- read.csv("gogn/coverkm.csv", check.names = F)
1707392029529:data <- read.csv("gogn/hreinsad.csv", check.names = F)
1707392030345:joined_data <- data %>%
1707392030367:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) %>% # Ef þessi villa kemur upp þá Error in `left_join()`:  ! Join columns must be present in data.✖ Problem with `Type`, `species`, `2020`, and `2023`.
1707392030384:select(species, Type, Reitur, km, everything()) |>
1707392030402:select(-c(`1999`)) |>
1707392030420:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28", "R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62")) |>
1707392030435:#mutate(Type = if_else(species == "Ber klöpp", "Ber klöpp", Type)) |>
1707392030453:filter(!species %in% "Ber klöpp")
1707392071543:unique(joined_data$Stadur)
1707392285271:joined_data <- data %>%
1707392285293:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) %>% # Ef þessi villa kemur upp þá Error in `left_join()`:  ! Join columns must be present in data.✖ Problem with `Type`, `species`, `2020`, and `2023`.
1707392285314:select(species, Type, Reitur, km, everything()) |>
1707392285333:select(-c(`1999`)) |>
1707392285354:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28", "R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62")) |>
1707392285375:#mutate(Type = if_else(species == "Ber klöpp", "Ber klöpp", Type)) |>
1707392285392:filter(!species %in% "Ber klöpp" &
1707392285409:!Type %in% c("Grænþörungar", "Cyanobacteria"))
1707392299299:joined_data <- data %>%
1707392299320:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) %>% # Ef þessi villa kemur upp þá Error in `left_join()`:  ! Join columns must be present in data.✖ Problem with `Type`, `species`, `2020`, and `2023`.
1707392299337:select(species, Type, Reitur, km, everything()) |>
1707392299354:select(-c(`1999`)) |>
1707392299370:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28", "R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62")) |>
1707392299390:#mutate(Type = if_else(species == "Ber klöpp", "Ber klöpp", Type)) |>
1707392299408:filter(!species %in% "Ber klöpp" &
1707392299427:!Type %in% c("Grænþörungar", "Cyanobacteria")) %>%
1707392299443:select(where(~ !all(is.na(.))))
1707392343368:joined_data <- data %>%
1707392343390:left_join(KM, by = c("Reitur", "Type", "species")) %>% # Ef þessi villa kemur upp þá Error in `left_join()`:  ! Join columns must be present in data.✖ Problem with `Type`, `species`, `2020`, and `2023`.
1707392343409:select(species, Type, Reitur, km, everything()) |>
1707392343427:select(-c(`1999`)) |>
1707392343442:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28", "R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62")) |>
1707392343458:#mutate(Type = if_else(species == "Ber klöpp", "Ber klöpp", Type)) |>
1707392343474:filter(!species %in% "Ber klöpp" &
1707392343492:!Type %in% c("Grænþörungar", "Cyanobacteria"))
1707392838446:joined_data <- data %>%
1707392838469:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) %>% # Ef þessi villa kemur upp þá Error in `left_join()`:  ! Join columns must be present in data.✖ Problem with `Type`, `species`, `2020`, and `2023`.
1707392838492:select(species, Type, Reitur, km, everything()) |>
1707392838511:select(-c(`1999`)) |>
1707392838529:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28", "R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62")) |>
1707392838546:#mutate(Type = if_else(species == "Ber klöpp", "Ber klöpp", Type)) |>
1707392838563:filter(!species %in% "Ber klöpp")
1707392848975:joined_data <- data %>%
1707392848998:left_join(KM, by = c("Reitur", "Type", "species")) %>% # Ef þessi villa kemur upp þá Error in `left_join()`:  ! Join columns must be present in data.✖ Problem with `Type`, `species`, `2020`, and `2023`.
1707392849015:select(species, Type, Reitur, km, everything()) |>
1707392849033:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`)) |>
1707392849048:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28", "R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62")) |>
1707392849066:#mutate(Type = if_else(species == "Ber klöpp", "Ber klöpp", Type)) |>
1707392849082:filter(!species %in% "Ber klöpp" &
1707392849095:!Type %in% c("Grænþörungar", "Cyanobacteria"))
1707392934551:KM <-  KM[, -c(7:9)]
1707392939620:joined_data <- data %>%
1707392939639:left_join(KM, by = c("Reitur", "Type", "species","2020","2023")) %>% # Ef þessi villa kemur upp þá Error in `left_join()`:  ! Join columns must be present in data.✖ Problem with `Type`, `species`, `2020`, and `2023`.
1707392939655:select(species, Type, Reitur, km, everything()) |>
1707392939673:select(-c(`1999`)) |>
1707392939689:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28", "R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62")) |>
1707392939708:#mutate(Type = if_else(species == "Ber klöpp", "Ber klöpp", Type)) |>
1707392939722:filter(!species %in% "Ber klöpp")
1707392954131:joined_data <- data %>%
1707392954151:left_join(KM, by = c("Reitur", "Type", "species")) %>% # Ef þessi villa kemur upp þá Error in `left_join()`:  ! Join columns must be present in data.✖ Problem with `Type`, `species`, `2020`, and `2023`.
1707392954167:select(species, Type, Reitur, km, everything()) |>
1707392954184:select(-c(`1999`)) |>
1707392954200:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28", "R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62")) |>
1707392954217:#mutate(Type = if_else(species == "Ber klöpp", "Ber klöpp", Type)) |>
1707392954232:filter(!species %in% "Ber klöpp")
1707392989065:KM <- read.csv("gogn/coverkm.csv", check.names = F)
1707392989260:KM <-  KM[, -c(7:9)]
1707392989587:data <- read.csv("gogn/hreinsad.csv", check.names = F)
1707392989932:joined_data <- data %>%
1707392989951:left_join(KM, by = c("Reitur", "Type", "species")) %>% # Ef þessi villa kemur upp þá Error in `left_join()`:  ! Join columns must be present in data.✖ Problem with `Type`, `species`, `2020`, and `2023`.
1707392989968:select(species, Type, Reitur, km, everything()) |>
1707392989984:select(-c(`1999`,`1976`, `1997`, `2006`, `2011`)) |>
1707392989996:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28", "R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62")) |>
1707392990010:#mutate(Type = if_else(species == "Ber klöpp", "Ber klöpp", Type)) |>
1707392990022:filter(!species %in% "Ber klöpp" &
1707392990036:!Type %in% c("Grænþörungar", "Cyanobacteria"))
1707392994641:joined_data
1707393053406:# Dynamically identify year columns that exist after filtering
1707393053429:year_columns <- c('1976', '1997', '2006', '2011', '2014', '2017', '2020', '2023')
1707393092488:# Dynamically identify year columns that exist after filtering
1707393092503:year_columns <- c('1976', '1997', '2006', '2011', '2014', '2017', '2020', '2023')
1707393093003:existing_year_columns <- year_columns[year_columns %in% colnames(filtered_data)]
1707393094429:# Pivot longer only with existing year columns
1707393094448:jd_long <- joined_data %>%
1707393094464:pivot_longer(cols = existing_year_columns, names_to = "Year", values_to = "Coverage")
1707393105392:existing_year_columns
1707393114592:# Dynamically identify year columns that exist after filtering
1707393114608:year_columns <- c('1976', '1997', '2006', '2011', '2014', '2017', '2020', '2023')
1707393115225:existing_year_columns <- year_columns[year_columns %in% colnames(joined_data)]
1707393116961:# Pivot longer only with existing year columns
1707393116979:jd_long <- joined_data %>%
1707393116996:pivot_longer(cols = existing_year_columns, names_to = "Year", values_to = "Coverage")
1707393130386:# Assuming jd_long is what you intended to use instead of jd_long_Engin_NA
1707393130409:jd_long_Engin_NA <- jd_long#[!is.na(jd_long$Coverage),]
1707393134042:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707393134060:if ("package:plyr" %in% search()) {
1707393134077:# Detach 'plyr' if it is loaded
1707393134092:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707393134106:}
1707393135298:species_counts <- jd_long_Engin_NA[!is.na(jd_long$Coverage),] %>%
1707393135320:group_by(Reitur, Year) %>%
1707393135339:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707393138233:# Meðalfjöldi tegunda í reit á ári
1707393138256:mean_species_per_year <- species_counts %>%
1707393138276:group_by(Year) %>%
1707393138292:summarise(Mean = mean(SpeciesCount)) |>
1707393138310:mutate(Type = "Tegundafjöldi")
1707393143204:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707393143221:library(plyr)
1707393144685:df <- jd_long_Engin_NA |>
1707393144704:ddply(.(Type,Year,Stadur,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707393144722:ddply(.(Type,Year,Stadur),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707393150130:#Leggja saman heildarþekju allra reita innan ára
1707393150151:df_summary <- df |>
1707393150168:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707393150556:sums_row <- df_summary %>%
1707393150579:mutate(Type = "Heildarþekja") |>
1707393150599:select(Type, Year, Mean)
1707393152001:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707393152617:df_with_heildarþekja <- bind_rows(df, combined_df)
1707393155517:library(scales)
1707393157876:# Ensure Type is ordered as desired
1707393157895:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707393188435:# Plot
1707393188459:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
1707393188479:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707393188497:scale_fill_brewer(palette = "Set1") +
1707393188512:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707393188529:# Example secondary axis (e.g., double the Mean for illustration)
1707393188547:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707393188564:labs(title = "",
1707393188580:y = "Meðalþekja", x = "") +
1707393188598:theme_minimal()+
1707393188613:theme(legend.title = element_blank(),
1707393188631:plot.background = element_rect(fill = "white", color = NA)) +
1707393188647:annotate("text", x = 2, y = Inf, label = i, hjust = 1, vjust = 1, size = 5, angle = 0)
1707393215949:# Plot
1707393215969:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
1707393215989:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707393216005:scale_fill_brewer(palette = "Set1") +
1707393216020:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707393216037:# Example secondary axis (e.g., double the Mean for illustration)
1707393216054:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707393216071:labs(title = "",
1707393216087:y = "Meðalþekja", x = "") +
1707393216101:theme_minimal()+
1707393216121:theme(legend.title = element_blank(),
1707393216137:plot.background = element_rect(fill = "white", color = NA)) +
1707393216152:annotate("text", x = 2, y = Inf, label = "Allir staðr", hjust = 1, vjust = 1, size = 5, angle = 0)
1707393221577:p1
1707393282042:df <- jd_long_Engin_NA |>
1707393282062:ddply(.(Type,Year,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707393282079:ddply(.(Type,Year),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707393284316:#Leggja saman heildarþekju allra reita innan ára
1707393284338:df_summary <- df |>
1707393284354:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707393285449:sums_row <- df_summary %>%
1707393285471:mutate(Type = "Heildarþekja") |>
1707393285487:select(Type, Year, Mean)
1707393287691:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707393289212:df_with_heildarþekja <- bind_rows(df, combined_df)
1707393291018:library(scales)
1707393291750:# Ensure Type is ordered as desired
1707393291770:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707393293912:# Plot
1707393293937:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
1707393293958:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707393293977:scale_fill_brewer(palette = "Set1") +
1707393293992:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707393294006:# Example secondary axis (e.g., double the Mean for illustration)
1707393294021:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707393294038:labs(title = "",
1707393294057:y = "Meðalþekja", x = "") +
1707393294072:theme_minimal()+
1707393294089:theme(legend.title = element_blank(),
1707393294108:plot.background = element_rect(fill = "white", color = NA)) +
1707393294124:annotate("text", x = 2, y = Inf, label = "Allir reitir", hjust = 1, vjust = 1, size = 5, angle = 0)
1707393298864:p1
1707393382611:ggsave(filename = "mynd3.png", plot = p1, width = 11.7, height = 8.3, dpi = 300, units = "in")
1707399502147:library(tidyverse)
1707399502178:KM <- read.csv("gogn/coverkm.csv", check.names = F)
1707399502218:KM <-  KM[, -c(7:9)]
1707399502238:data <- read.csv("gogn/hreinsad.csv", check.names = F)
1707399502299:joined_data <- data %>%
1707399502320:left_join(KM, by = c("Reitur", "Type", "species")) %>% # Ef þessi villa kemur upp þá Error in `left_join()`:  ! Join columns must be present in data.✖ Problem with `Type`, `species`, `2020`, and `2023`.
1707399502339:select(species, Type, Reitur, km, everything()) |>
1707399502356:select(-c(`1999`,`1976`,)) |>
1707399502375:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28", "R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62")) |>
1707399502392:#mutate(Type = if_else(species == "Ber klöpp", "Ber klöpp", Type)) |>
1707399502410:filter(!species %in% "Ber klöpp" &
1707399502425:!Type %in% c("Grænþörungar", "Cyanobacteria"))
1707399502512:# Dynamically identify year columns that exist after filtering
1707399502530:year_columns <- c('1976', '1997', '2006', '2011', '2014', '2017', '2020', '2023')
1707399502546:existing_year_columns <- year_columns[year_columns %in% colnames(joined_data)]
1707399507145:existing_year_columns
1707399520011:# Pivot longer only with existing year columns
1707399520033:jd_long <- joined_data %>%
1707399520052:pivot_longer(cols = existing_year_columns, names_to = "Year", values_to = "Coverage")
1707399521286:# Assuming jd_long is what you intended to use instead of jd_long_Engin_NA
1707399521306:jd_long_Engin_NA <- jd_long#[!is.na(jd_long$Coverage),]
1707399523294:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707399523312:if ("package:plyr" %in% search()) {
1707399523329:# Detach 'plyr' if it is loaded
1707399523346:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707399523364:}
1707399524944:species_counts <- jd_long_Engin_NA[!is.na(jd_long$Coverage),] %>%
1707399524968:group_by(Reitur, Year) %>%
1707399524991:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707399526945:# Meðalfjöldi tegunda í reit á ári
1707399526970:mean_species_per_year <- species_counts %>%
1707399526987:group_by(Year) %>%
1707399527005:summarise(Mean = mean(SpeciesCount)) |>
1707399527022:mutate(Type = "Tegundafjöldi")
1707399528544:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707399528565:library(plyr)
1707399531098:df <- jd_long_Engin_NA |>
1707399531118:ddply(.(Type,Year,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707399531138:ddply(.(Type,Year),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707399535060:#Leggja saman heildarþekju allra reita innan ára
1707399535083:df_summary <- df |>
1707399535103:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707399535814:sums_row <- df_summary %>%
1707399535832:mutate(Type = "Heildarþekja") |>
1707399535850:select(Type, Year, Mean)
1707399537352:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707399537963:df_with_heildarþekja <- bind_rows(df, combined_df)
1707399540047:library(scales)
1707399542296:# Ensure Type is ordered as desired
1707399542316:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707399590299:# Plot
1707399590320:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
1707399590337:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707399590353:scale_fill_brewer(palette = "Set1") +
1707399590370:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707399590390:# Example secondary axis (e.g., double the Mean for illustration)
1707399590408:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707399590426:labs(title = "",
1707399590442:y = "Meðalþekja", x = "") +
1707399590460:theme_minimal()+
1707399590475:theme(legend.title = element_blank(),
1707399590492:plot.background = element_rect(fill = "white", color = NA)) +
1707399590511:annotate("text", x = 2, y = Inf, label = "Allir reitir utan 15 nýrra frá 2014", hjust = 1, vjust = 1, size = 5, angle = 0)
1707399595034:p1
1707399606924:# Plot
1707399606944:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
1707399606965:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707399606985:scale_fill_brewer(palette = "Set1") +
1707399607005:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707399607020:# Example secondary axis (e.g., double the Mean for illustration)
1707399607038:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707399607055:labs(title = "",
1707399607072:y = "Meðalþekja", x = "") +
1707399607090:theme_minimal()+
1707399607108:theme(legend.title = element_blank(),
1707399607124:plot.background = element_rect(fill = "white", color = NA)) +
1707399607141:annotate("text", x = 3, y = Inf, label = "Allir reitir utan 15 nýrra frá 2014", hjust = 1, vjust = 1, size = 5, angle = 0)
1707399616684:p1
1707399661635:unique(joined_data$Reitur)
1707399751064:joined_data <- data %>%
1707399751081:left_join(KM, by = c("Reitur", "Type", "species")) %>% # Ef þessi villa kemur upp þá Error in `left_join()`:  ! Join columns must be present in data.✖ Problem with `Type`, `species`, `2020`, and `2023`.
1707399751097:select(species, Type, Reitur, km, everything()) |>
1707399751113:select(-c(`1999`,`1976`,)) |>
1707399751128:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28", "R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62", "R63", "R64", "R65", "R66", "R67", "R68", "R69",
1707399751144:"R70", "R71", "R72", "R73", "R74", "R75", "R76", "R77")) |>
1707399751161:#mutate(Type = if_else(species == "Ber klöpp", "Ber klöpp", Type)) |>
1707399751179:filter(!species %in% "Ber klöpp" &
1707399751196:!Type %in% c("Grænþörungar", "Cyanobacteria"))
1707399751284:# Dynamically identify year columns that exist after filtering
1707399751301:year_columns <- c('1976', '1997', '2006', '2011', '2014', '2017', '2020', '2023')
1707399751318:existing_year_columns <- year_columns[year_columns %in% colnames(joined_data)]
1707399751345:# Pivot longer only with existing year columns
1707399751361:jd_long <- joined_data %>%
1707399751378:pivot_longer(cols = existing_year_columns, names_to = "Year", values_to = "Coverage")
1707399751413:# Assuming jd_long is what you intended to use instead of jd_long_Engin_NA
1707399751429:jd_long_Engin_NA <- jd_long#[!is.na(jd_long$Coverage),]
1707399751455:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707399751470:if ("package:plyr" %in% search()) {
1707399751487:# Detach 'plyr' if it is loaded
1707399751506:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707399751525:}
1707399751564:species_counts <- jd_long_Engin_NA[!is.na(jd_long$Coverage),] %>%
1707399751579:group_by(Reitur, Year) %>%
1707399751594:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707399751639:# Meðalfjöldi tegunda í reit á ári
1707399751656:mean_species_per_year <- species_counts %>%
1707399751673:group_by(Year) %>%
1707399751690:summarise(Mean = mean(SpeciesCount)) |>
1707399751710:mutate(Type = "Tegundafjöldi")
1707399751752:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707399751770:library(plyr)
1707399751827:df <- jd_long_Engin_NA |>
1707399751847:ddply(.(Type,Year,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707399751868:ddply(.(Type,Year),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707399752032:#Leggja saman heildarþekju allra reita innan ára
1707399752049:df_summary <- df |>
1707399752066:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707399752091:sums_row <- df_summary %>%
1707399752108:mutate(Type = "Heildarþekja") |>
1707399752127:select(Type, Year, Mean)
1707399752156:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707399752184:df_with_heildarþekja <- bind_rows(df, combined_df)
1707399752222:library(scales)
1707399752249:# Ensure Type is ordered as desired
1707399752264:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707399752290:# Plot
1707399752306:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
1707399752328:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707399752346:scale_fill_brewer(palette = "Set1") +
1707399752362:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707399752379:# Example secondary axis (e.g., double the Mean for illustration)
1707399752395:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707399752411:labs(title = "",
1707399752426:y = "Meðalþekja", x = "") +
1707399752442:theme_minimal()+
1707399752458:theme(legend.title = element_blank(),
1707399752477:plot.background = element_rect(fill = "white", color = NA)) +
1707399752493:annotate("text", x = 3, y = Inf, label = "Allir reitir utan 15 nýrra frá 2014", hjust = 1, vjust = 1, size = 5, angle = 0)
1707399757604:p1
1707399879210:df_with_heildarþekja
1707399949153:joined_data <- data %>%
1707399949172:left_join(KM, by = c("Reitur", "Type", "species")) %>% # Ef þessi villa kemur upp þá Error in `left_join()`:  ! Join columns must be present in data.✖ Problem with `Type`, `species`, `2020`, and `2023`.
1707399949189:select(species, Type, Reitur, km, everything()) |>
1707399949208:select(-c(`1999`,`1976`,)) |>
1707399949226:filter(!Reitur %in% c( "R63", "R64", "R65", "R66", "R67", "R68", "R69",
1707399949244:"R70", "R71", "R72", "R73", "R74", "R75", "R76", "R77")) |>
1707399949263:#mutate(Type = if_else(species == "Ber klöpp", "Ber klöpp", Type)) |>
1707399949282:filter(!species %in% "Ber klöpp" &
1707399949301:!Type %in% c("Grænþörungar", "Cyanobacteria"))
1707399949398:# Dynamically identify year columns that exist after filtering
1707399949412:year_columns <- c('1976', '1997', '2006', '2011', '2014', '2017', '2020', '2023')
1707399949431:existing_year_columns <- year_columns[year_columns %in% colnames(joined_data)]
1707399949466:# Pivot longer only with existing year columns
1707399949482:jd_long <- joined_data %>%
1707399949499:pivot_longer(cols = existing_year_columns, names_to = "Year", values_to = "Coverage")
1707399949536:# Assuming jd_long is what you intended to use instead of jd_long_Engin_NA
1707399949556:jd_long_Engin_NA <- jd_long#[!is.na(jd_long$Coverage),]
1707399949585:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707399949600:if ("package:plyr" %in% search()) {
1707399949618:# Detach 'plyr' if it is loaded
1707399949634:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707399949648:}
1707399949686:species_counts <- jd_long_Engin_NA[!is.na(jd_long$Coverage),] %>%
1707399949704:group_by(Reitur, Year) %>%
1707399949722:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707399949769:# Meðalfjöldi tegunda í reit á ári
1707399949788:mean_species_per_year <- species_counts %>%
1707399949804:group_by(Year) %>%
1707399949823:summarise(Mean = mean(SpeciesCount)) |>
1707399949843:mutate(Type = "Tegundafjöldi")
1707399949879:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707399949897:library(plyr)
1707399949936:df <- jd_long_Engin_NA |>
1707399949953:ddply(.(Type,Year,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707399949970:ddply(.(Type,Year),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707399950220:#Leggja saman heildarþekju allra reita innan ára
1707399950238:df_summary <- df |>
1707399950256:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707399950278:sums_row <- df_summary %>%
1707399950295:mutate(Type = "Heildarþekja") |>
1707399950310:select(Type, Year, Mean)
1707399950343:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707399950371:df_with_heildarþekja <- bind_rows(df, combined_df)
1707399950411:library(scales)
1707399950439:# Ensure Type is ordered as desired
1707399950455:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707399950485:# Plot
1707399950500:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
1707399950517:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707399950531:scale_fill_brewer(palette = "Set1") +
1707399950549:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707399950566:# Example secondary axis (e.g., double the Mean for illustration)
1707399950582:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707399950603:labs(title = "",
1707399950621:y = "Meðalþekja", x = "") +
1707399950639:theme_minimal()+
1707399950655:theme(legend.title = element_blank(),
1707399950669:plot.background = element_rect(fill = "white", color = NA)) +
1707399950684:annotate("text", x = 3, y = Inf, label = "Allir reitir utan 15 nýrra frá 2014", hjust = 1, vjust = 1, size = 5, angle = 0)
1707399953995:p1
1707400003227:table(results)
1707400022347:as.data.frame(table(results))[,c(1,2,4)]
1707400029570:table(results)
1707400057802:as.data.frame(table(results))
1707400069848:dout(table(results))
1707400073176:dput(table(results))
1707400104371:structure(c(0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400104385:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400104398:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400104412:0L, 0L, 0L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 1L, 1L, 1L, 1L, 1L,
1707400104426:1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 0L, 0L,
1707400104439:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400104451:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400104463:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L,
1707400104475:1L, 1L, 1L, 1L, 1L, 1L, 0L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1707400104488:1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 0L, 1L, 1L, 1L, 1L, 1L,
1707400104502:1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1707400104515:1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1707400104530:1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 0L,
1707400104544:0L, 0L, 1L, 0L, 0L, 0L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1707400104558:1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400104575:0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400104590:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400104605:0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L,
1707400104620:0L, 0L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1707400104634:1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400104649:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400104666:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400104684:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 1L,
1707400104699:1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 0L, 1L,
1707400104715:1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L,
1707400104732:0L, 0L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400104747:1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 1L,
1707400104766:1L, 1L, 0L, 0L, 1L, 1L, 1L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400104788:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 1L, 1L, 0L, 0L, 0L,
1707400104808:0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L,
1707400104826:1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L,
1707400104842:0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 1L, 1L, 1L, 0L, 0L,
1707400104859:1L, 1L, 1L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400104875:0L, 0L, 0L, 0L, 0L, 0L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 1L, 0L, 0L,
1707400104893:0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 1L, 0L, 0L, 0L,
1707400104912:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400104928:0L, 0L, 0L, 1L, 0L, 0L, 0L, 1L, 1L, 1L, 0L, 1L, 1L, 1L, 1L, 0L,
1707400104945:1L, 1L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400104961:0L, 0L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L,
1707400104977:0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400104992:0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L,
1707400105008:0L, 1L, 0L, 1L, 1L, 1L, 0L, 0L, 1L, 1L, 1L, 0L, 1L, 1L, 0L, 0L,
1707400105025:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L), dim = c(76L,
1707400105041:9L, 1L), dimnames = list(Reitur = c("R1", "R10", "R11", "R12",
1707400105058:"R13", "R14", "R15", "R16", "R17", "R18", "R19", "R2", "R20",
1707400105074:"R21", "R22", "R23", "R24", "R25", "R26", "R27", "R28", "R29",
1707400105091:"R3", "R30", "R31", "R32", "R33", "R34", "R35", "R36", "R37",
1707400105107:"R38", "R39", "R4", "R40", "R41", "R42", "R43", "R44", "R45",
1707400105123:"R46", "R47", "R48", "R49", "R5", "R50", "R51", "R52", "R53",
1707400105140:"R54", "R55", "R56", "R57", "R58", "R59", "R6", "R60", "R61",
1707400105156:"R62", "R63", "R64", "R65", "R66", "R67", "R68", "R69", "R70",
1707400105173:"R71", "R72", "R73", "R74", "R75", "R76", "R77", "R8", "R9"),
1707400105189:Year = c("1976", "1997", "1999", "2006", "2011", "2014",
1707400105206:"2017", "2020", "2023"), HasValue = "FALSE"), class = "matrix")
1707400123258:structure(c(0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400123278:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400123293:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400123308:0L, 0L, 0L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 1L, 1L, 1L, 1L, 1L,
1707400123324:1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 0L, 0L,
1707400123341:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400123359:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400123376:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L,
1707400123391:1L, 1L, 1L, 1L, 1L, 1L, 0L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1707400123406:1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 0L, 1L, 1L, 1L, 1L, 1L,
1707400123423:1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1707400123440:1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1707400123456:1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 0L,
1707400123472:0L, 0L, 1L, 0L, 0L, 0L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1707400123488:1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400123505:0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400123523:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400123540:0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L,
1707400123557:0L, 0L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1707400123572:1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400123588:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400123603:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400123618:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 1L,
1707400123635:1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 0L, 1L,
1707400123654:1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L,
1707400123667:0L, 0L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400123679:1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 1L,
1707400123693:1L, 1L, 0L, 0L, 1L, 1L, 1L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400123706:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 1L, 1L, 0L, 0L, 0L,
1707400123722:0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L,
1707400123740:1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L,
1707400123756:0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 1L, 1L, 1L, 0L, 0L,
1707400123773:1L, 1L, 1L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400123788:0L, 0L, 0L, 0L, 0L, 0L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 1L, 0L, 0L,
1707400123806:0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 1L, 0L, 0L, 0L,
1707400123821:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400123840:0L, 0L, 0L, 1L, 0L, 0L, 0L, 1L, 1L, 1L, 0L, 1L, 1L, 1L, 1L, 0L,
1707400123858:1L, 1L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400123877:0L, 0L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L,
1707400123893:0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400123910:0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L,
1707400123929:0L, 1L, 0L, 1L, 1L, 1L, 0L, 0L, 1L, 1L, 1L, 0L, 1L, 1L, 0L, 0L,
1707400123946:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L), dim = c(76L,
1707400123962:9L, 1L), dimnames = list(Reitur = c("R1", "R10", "R11", "R12",
1707400123981:"R13", "R14", "R15", "R16", "R17", "R18", "R19", "R2", "R20",
1707400123999:"R21", "R22", "R23", "R24", "R25", "R26", "R27", "R28", "R29",
1707400124018:"R3", "R30", "R31", "R32", "R33", "R34", "R35", "R36", "R37",
1707400124035:"R38", "R39", "R4", "R40", "R41", "R42", "R43", "R44", "R45",
1707400124052:"R46", "R47", "R48", "R49", "R5", "R50", "R51", "R52", "R53",
1707400124069:"R54", "R55", "R56", "R57", "R58", "R59", "R6", "R60", "R61",
1707400124087:"R62", "R63", "R64", "R65", "R66", "R67", "R68", "R69", "R70",
1707400124104:"R71", "R72", "R73", "R74", "R75", "R76", "R77", "R8", "R9"),
1707400124122:Year = c("1976", "1997", "1999", "2006", "2011", "2014",
1707400124139:"2017", "2020", "2023"), class = "matrix")
1707400177361:structure(c(0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400177385:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400177408:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400177425:0L, 0L, 0L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 1L, 1L, 1L, 1L, 1L,
1707400177443:1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 0L, 0L,
1707400177459:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400177474:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400177491:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L,
1707400177507:1L, 1L, 1L, 1L, 1L, 1L, 0L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1707400177525:1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 0L, 1L, 1L, 1L, 1L, 1L,
1707400177546:1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1707400177562:1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1707400177579:1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 0L,
1707400177595:0L, 0L, 1L, 0L, 0L, 0L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1707400177616:1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400177637:0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400177654:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400177672:0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L,
1707400177692:0L, 0L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1707400177708:1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400177725:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400177741:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400177756:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 1L,
1707400177776:1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 0L, 1L,
1707400177798:1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L,
1707400177819:0L, 0L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400177840:1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 1L,
1707400177861:1L, 1L, 0L, 0L, 1L, 1L, 1L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400177877:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 1L, 1L, 0L, 0L, 0L,
1707400177895:0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L,
1707400177915:1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L,
1707400177930:0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 1L, 1L, 1L, 0L, 0L,
1707400177950:1L, 1L, 1L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400177967:0L, 0L, 0L, 0L, 0L, 0L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 1L, 0L, 0L,
1707400177983:0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 1L, 0L, 0L, 0L,
1707400178000:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400178018:0L, 0L, 0L, 1L, 0L, 0L, 0L, 1L, 1L, 1L, 0L, 1L, 1L, 1L, 1L, 0L,
1707400178034:1L, 1L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400178052:0L, 0L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L,
1707400178069:0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400178086:0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L,
1707400178102:0L, 1L, 0L, 1L, 1L, 1L, 0L, 0L, 1L, 1L, 1L, 0L, 1L, 1L, 0L, 0L,
1707400178121:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L), dim = c(76L,
1707400178140:9L, 1L), dimnames = list(Reitur = c("R1", "R10", "R11", "R12",
1707400178158:"R13", "R14", "R15", "R16", "R17", "R18", "R19", "R2", "R20",
1707400178176:"R21", "R22", "R23", "R24", "R25", "R26", "R27", "R28", "R29",
1707400178192:"R3", "R30", "R31", "R32", "R33", "R34", "R35", "R36", "R37",
1707400178208:"R38", "R39", "R4", "R40", "R41", "R42", "R43", "R44", "R45",
1707400178226:"R46", "R47", "R48", "R49", "R5", "R50", "R51", "R52", "R53",
1707400178242:"R54", "R55", "R56", "R57", "R58", "R59", "R6", "R60", "R61",
1707400178259:"R62", "R63", "R64", "R65", "R66", "R67", "R68", "R69", "R70",
1707400178280:"R71", "R72", "R73", "R74", "R75", "R76", "R77", "R8", "R9"),
1707400178296:Year = c("1976", "1997", "1999", "2006", "2011", "2014",
1707400178312:"2017", "2020", "2023")), class = "table")
1707400193583:structure(c(0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400193601:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400193616:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400193628:0L, 0L, 0L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 1L, 1L, 1L, 1L, 1L,
1707400193640:1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 0L, 0L,
1707400193651:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400193664:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400193676:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L,
1707400193690:1L, 1L, 1L, 1L, 1L, 1L, 0L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1707400193702:1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 0L, 1L, 1L, 1L, 1L, 1L,
1707400193715:1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1707400193727:1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1707400193741:1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 0L,
1707400193756:0L, 0L, 1L, 0L, 0L, 0L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1707400193775:1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400193794:0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400193811:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400193828:0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L,
1707400193845:0L, 0L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1707400193863:1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400193881:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400193902:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400193920:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 1L,
1707400193940:1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 0L, 1L,
1707400193958:1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L,
1707400193976:0L, 0L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400193994:1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 1L,
1707400194014:1L, 1L, 0L, 0L, 1L, 1L, 1L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400194030:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 1L, 1L, 0L, 0L, 0L,
1707400194048:0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L,
1707400194065:1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L,
1707400194081:0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 1L, 1L, 1L, 0L, 0L,
1707400194097:1L, 1L, 1L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400194115:0L, 0L, 0L, 0L, 0L, 0L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 1L, 0L, 0L,
1707400194134:0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 1L, 0L, 0L, 0L,
1707400194156:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400194178:0L, 0L, 0L, 1L, 0L, 0L, 0L, 1L, 1L, 1L, 0L, 1L, 1L, 1L, 1L, 0L,
1707400194197:1L, 1L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400194212:0L, 0L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L,
1707400194227:0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1707400194243:0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L,
1707400194259:0L, 1L, 0L, 1L, 1L, 1L, 0L, 0L, 1L, 1L, 1L, 0L, 1L, 1L, 0L, 0L,
1707400194274:0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L), dim = c(76L,
1707400194290:9L, 1L), dimnames = list(Reitur = c("R1", "R10", "R11", "R12",
1707400194306:"R13", "R14", "R15", "R16", "R17", "R18", "R19", "R2", "R20",
1707400194323:"R21", "R22", "R23", "R24", "R25", "R26", "R27", "R28", "R29",
1707400194338:"R3", "R30", "R31", "R32", "R33", "R34", "R35", "R36", "R37",
1707400194355:"R38", "R39", "R4", "R40", "R41", "R42", "R43", "R44", "R45",
1707400194373:"R46", "R47", "R48", "R49", "R5", "R50", "R51", "R52", "R53",
1707400194392:"R54", "R55", "R56", "R57", "R58", "R59", "R6", "R60", "R61",
1707400194408:"R62", "R63", "R64", "R65", "R66", "R67", "R68", "R69", "R70",
1707400194425:"R71", "R72", "R73", "R74", "R75", "R76", "R77", "R8", "R9"),
1707400194440:Year = c("1976", "1997", "1999", "2006", "2011", "2014",
1707400194458:"2017", "2020", "2023")), class = "matrix")
1707400345171:rass <- read.table(text = readClipboard(), header = TRUE, check.names = FALSE)
1707400367483:if (!requireNamespace("clipr", quietly = TRUE)) install.packages("clipr")
1707400379030:rass <- read.table(text = clipr::read_clip(), header = TRUE, check.names = FALSE)
1707400387137:rass <- read.table(text = readClipboard(), header = TRUE, check.names = FALSE)
1707400528186:str(table(results)
1707400531243:)
1707400655404:as.data.frame.matrix(results)
1707400682128:str(as.data.frame.matrix(results))
1707400943195:data_frame <- as.data.frame.matrix(results[, , 1])
1707400948003:data_frame
1707400987492:str(data_frame)
1707401032380:result
1707401035705:results
1707401078699:data_frame <- data.frame(
1707401078712:Reitur = unlist(results$Reitur),
1707401078729:Year = unlist(results$Year)
1707401078745:)
1707401081627:data_frame
1707401095003:table(data_frame )
1707401173019:KM <- read.csv("gogn/coverkm.csv", check.names = F)
1707401173068:KM <-  KM[, -c(7:9)]
1707401173087:data <- read.csv("gogn/hreinsad.csv", check.names = F)
1707401173145:joined_data <- data %>%
1707401173165:left_join(KM, by = c("Reitur", "Type", "species")) %>% # Ef þessi villa kemur upp þá Error in `left_join()`:  ! Join columns must be present in data.✖ Problem with `Type`, `species`, `2020`, and `2023`.
1707401173182:select(species, Type, Reitur, km, everything()) |>
1707401173200:select(-c(`1999`,`1976`,)) |>
1707401173221:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28", "R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62", "R63", "R64", "R65", "R66", "R67", "R68", "R69",
1707401173241:"R70", "R71", "R72", "R73", "R74", "R75", "R76", "R77")) |>
1707401173263:#mutate(Type = if_else(species == "Ber klöpp", "Ber klöpp", Type)) |>
1707401173284:filter(!species %in% "Ber klöpp" &
1707401173305:!Type %in% c("Grænþörungar", "Cyanobacteria"))
1707401173403:# Dynamically identify year columns that exist after filtering
1707401173443:year_columns <- c('1976', '1997', '2006', '2011', '2014', '2017', '2020', '2023')
1707401173469:existing_year_columns <- year_columns[year_columns %in% colnames(joined_data)]
1707401173501:# Pivot longer only with existing year columns
1707401173518:jd_long <- joined_data %>%
1707401173537:pivot_longer(cols = existing_year_columns, names_to = "Year", values_to = "Coverage")
1707401173588:# Assuming jd_long is what you intended to use instead of jd_long_Engin_NA
1707401173607:jd_long_Engin_NA <- jd_long#[!is.na(jd_long$Coverage),]
1707401173641:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707401173656:if ("package:plyr" %in% search()) {
1707401173672:# Detach 'plyr' if it is loaded
1707401173688:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707401173704:}
1707401173747:species_counts <- jd_long_Engin_NA[!is.na(jd_long$Coverage),] %>%
1707401173764:group_by(Reitur, Year) %>%
1707401173781:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707401173829:# Meðalfjöldi tegunda í reit á ári
1707401173848:mean_species_per_year <- species_counts %>%
1707401173869:group_by(Year) %>%
1707401173890:summarise(Mean = mean(SpeciesCount)) |>
1707401173912:mutate(Type = "Tegundafjöldi")
1707401173952:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707401173968:library(plyr)
1707401174008:df <- jd_long_Engin_NA |>
1707401174023:ddply(.(Type,Year,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707401174040:ddply(.(Type,Year),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707401174437:#Leggja saman heildarþekju allra reita innan ára
1707401174454:df_summary <- df |>
1707401174472:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707401174494:sums_row <- df_summary %>%
1707401174513:mutate(Type = "Heildarþekja") |>
1707401174528:select(Type, Year, Mean)
1707401174561:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707401174592:df_with_heildarþekja <- bind_rows(df, combined_df)
1707401174637:library(scales)
1707401174667:# Ensure Type is ordered as desired
1707401174685:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707401174715:# Plot
1707401174732:ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
1707401174749:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707401174764:scale_fill_brewer(palette = "Set1") +
1707401174780:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707401174797:# Example secondary axis (e.g., double the Mean for illustration)
1707401174813:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707401174830:labs(title = "",
1707401174846:y = "Meðalþekja", x = "") +
1707401174861:theme_minimal()+
1707401174879:theme(legend.title = element_blank(),
1707401174897:plot.background = element_rect(fill = "white", color = NA)) +
1707401174918:annotate("text", x = 3, y = Inf, label = "Allir reitir utan 15 nýrra frá 2014", hjust = 1, vjust = 1, size = 5, angle = 0)
1707401431803:joined_data
1707401479203:#KM <- read.csv("gogn/coverkm.csv", check.names = F)
1707401479220:#KM <-  KM[, -c(7:9)]
1707401479238:data <- read.csv("gogn/hreinsad.csv", check.names = F)
1707401481061:joined_data <- data %>%
1707401481084:#left_join(KM, by = c("Reitur", "Type", "species")) %>% # Ef þessi villa kemur upp þá Error in `left_join()`:  ! Join columns must be present in data.✖ Problem with `Type`, `species`, `2020`, and `2023`.
1707401481102:select(species, Type, Reitur, km, everything()) |>
1707401481119:select(-c(`1999`,`1976`,)) |>
1707401481137:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28", "R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62", "R63", "R64", "R65", "R66", "R67", "R68", "R69",
1707401481155:"R70", "R71", "R72", "R73", "R74", "R75", "R76", "R77")) |>
1707401481171:#mutate(Type = if_else(species == "Ber klöpp", "Ber klöpp", Type)) |>
1707401481189:filter(!species %in% "Ber klöpp" &
1707401481208:!Type %in% c("Grænþörungar", "Cyanobacteria"))
1707401491078:joined_data <- data %>%
1707401491101:#left_join(KM, by = c("Reitur", "Type", "species")) %>% # Ef þessi villa kemur upp þá Error in `left_join()`:  ! Join columns must be present in data.✖ Problem with `Type`, `species`, `2020`, and `2023`.
1707401491120:select(species, Type, Reitur, everything()) |>
1707401491141:select(-c(`1999`,`1976`,)) |>
1707401491160:filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28", "R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62", "R63", "R64", "R65", "R66", "R67", "R68", "R69",
1707401491178:"R70", "R71", "R72", "R73", "R74", "R75", "R76", "R77")) |>
1707401491198:#mutate(Type = if_else(species == "Ber klöpp", "Ber klöpp", Type)) |>
1707401491215:filter(!species %in% "Ber klöpp" &
1707401491232:!Type %in% c("Grænþörungar", "Cyanobacteria"))
1707401500603:year_columns <- c('1976', '1997', '2006', '2011', '2014', '2017', '2020', '2023')
1707401500619:existing_year_columns <- year_columns[year_columns %in% colnames(joined_data)]
1707401503811:existing_year_columns
1707401523369:joined_data
1707401571422:sapply(joined_data, function(x) sum(is.na(x)))
1707401644969:rowsum(joined_data[,4:10])
1707401650767:rowSums(joined_data[,4:10])
1707401659599:table(rowSums(joined_data[,4:10]))
1707401793407:apply(joined_data[,4:10], 1, function(x) !any(is.na(x)))
1707401798447:table(apply(joined_data[,4:10], 1, function(x) !any(is.na(x))))
1707401844126:# Pivot longer only with existing year columns
1707401844147:rass <- joined_data[apply(joined_data[,4:10], 1, function(x) !any(is.na(x)))]
1707401852908:# Pivot longer only with existing year columns
1707401852929:rass <- joined_data[apply(joined_data[,4:10], 1, function(x) !any(is.na(x))),]
1707401866889:jd_long <- rass %>%
1707401866906:pivot_longer(cols = existing_year_columns, names_to = "Year", values_to = "Coverage")
1707401868750:# Assuming jd_long is what you intended to use instead of jd_long_Engin_NA
1707401868773:jd_long_Engin_NA <- jd_long#[!is.na(jd_long$Coverage),]
1707401869761:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707401869784:if ("package:plyr" %in% search()) {
1707401869803:# Detach 'plyr' if it is loaded
1707401869820:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707401869837:}
1707401870604:species_counts <- jd_long_Engin_NA[!is.na(jd_long$Coverage),] %>%
1707401870626:group_by(Reitur, Year) %>%
1707401870639:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707401871460:# Meðalfjöldi tegunda í reit á ári
1707401871483:mean_species_per_year <- species_counts %>%
1707401871501:group_by(Year) %>%
1707401871518:summarise(Mean = mean(SpeciesCount)) |>
1707401871538:mutate(Type = "Tegundafjöldi")
1707401872513:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707401872532:library(plyr)
1707401874066:df <- jd_long_Engin_NA |>
1707401874088:ddply(.(Type,Year,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707401874109:ddply(.(Type,Year),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707401875780:#Leggja saman heildarþekju allra reita innan ára
1707401875799:df_summary <- df |>
1707401875815:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707401876525:sums_row <- df_summary %>%
1707401876548:mutate(Type = "Heildarþekja") |>
1707401876564:select(Type, Year, Mean)
1707401878392:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707401879414:df_with_heildarþekja <- bind_rows(df, combined_df)
1707401881076:library(scales)
1707401881644:# Ensure Type is ordered as desired
1707401881665:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707401882363:# Plot
1707401882385:ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
1707401882407:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707401882426:scale_fill_brewer(palette = "Set1") +
1707401882446:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707401882461:# Example secondary axis (e.g., double the Mean for illustration)
1707401882477:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707401882495:labs(title = "",
1707401882511:y = "Meðalþekja", x = "") +
1707401882526:theme_minimal()+
1707401882545:theme(legend.title = element_blank(),
1707401882560:plot.background = element_rect(fill = "white", color = NA)) +
1707401882576:annotate("text", x = 3, y = Inf, label = "Allir reitir utan 15 nýrra frá 2014", hjust = 1, vjust = 1, size = 5, angle = 0)
1707401924893:# Pivot longer only with existing year columns
1707401924914:rass <- joined_data[!apply(joined_data[,4:10], 1, function(x) !any(is.na(x))),]
1707401929445:jd_long <- rass %>%
1707401929461:pivot_longer(cols = existing_year_columns, names_to = "Year", values_to = "Coverage")
1707401929497:# Assuming jd_long is what you intended to use instead of jd_long_Engin_NA
1707401929515:jd_long_Engin_NA <- jd_long#[!is.na(jd_long$Coverage),]
1707401929540:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707401929551:if ("package:plyr" %in% search()) {
1707401929563:# Detach 'plyr' if it is loaded
1707401929577:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707401929589:}
1707401929631:species_counts <- jd_long_Engin_NA[!is.na(jd_long$Coverage),] %>%
1707401929649:group_by(Reitur, Year) %>%
1707401929664:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707401929704:# Meðalfjöldi tegunda í reit á ári
1707401929722:mean_species_per_year <- species_counts %>%
1707401929740:group_by(Year) %>%
1707401929757:summarise(Mean = mean(SpeciesCount)) |>
1707401929776:mutate(Type = "Tegundafjöldi")
1707401929814:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707401929831:library(plyr)
1707401929869:df <- jd_long_Engin_NA |>
1707401929884:ddply(.(Type,Year,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707401929902:ddply(.(Type,Year),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707401930123:#Leggja saman heildarþekju allra reita innan ára
1707401930147:df_summary <- df |>
1707401930165:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707401930183:sums_row <- df_summary %>%
1707401930198:mutate(Type = "Heildarþekja") |>
1707401930213:select(Type, Year, Mean)
1707401930245:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707401930274:df_with_heildarþekja <- bind_rows(df, combined_df)
1707401930315:library(scales)
1707401930347:# Ensure Type is ordered as desired
1707401930364:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707401930395:# Plot
1707401930415:ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
1707401930432:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707401930451:scale_fill_brewer(palette = "Set1") +
1707401930468:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707401930487:# Example secondary axis (e.g., double the Mean for illustration)
1707401930507:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707401930524:labs(title = "",
1707401930543:y = "Meðalþekja", x = "") +
1707401930560:theme_minimal()+
1707401930579:theme(legend.title = element_blank(),
1707401930595:plot.background = element_rect(fill = "white", color = NA)) +
1707401930611:annotate("text", x = 3, y = Inf, label = "Allir reitir utan 15 nýrra frá 2014", hjust = 1, vjust = 1, size = 5, angle = 0)
1707402080352:which(rowSums(!is.na(joined_data[,4:10][, sapply(joined_data[,4:10], is.numeric)])) == 0)
1707402092850:joined_data[10,]
1707402158243:rass <- joined_data[!which(rowSums(!is.na(joined_data[,4:10][, sapply(joined_data[,4:10], is.numeric)])) == 0)]
1707402166890:existing_year_columns
1707402173300:jd_long <- rass %>%
1707402173322:pivot_longer(cols = existing_year_columns, names_to = "Year", values_to = "Coverage")
1707402191343:rass <- joined_data[!which(rowSums(!is.na(joined_data[,4:10][, sapply(joined_data[,4:10], is.numeric)])) == 0),]
1707402192725:jd_long <- rass %>%
1707402192748:pivot_longer(cols = existing_year_columns, names_to = "Year", values_to = "Coverage")
1707402194026:# Assuming jd_long is what you intended to use instead of jd_long_Engin_NA
1707402194048:jd_long_Engin_NA <- jd_long#[!is.na(jd_long$Coverage),]
1707402194243:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707402194266:if ("package:plyr" %in% search()) {
1707402194286:# Detach 'plyr' if it is loaded
1707402194302:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707402194323:}
1707402194434:species_counts <- jd_long_Engin_NA[!is.na(jd_long$Coverage),] %>%
1707402194485:group_by(Reitur, Year) %>%
1707402194504:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707402194546:# Meðalfjöldi tegunda í reit á ári
1707402194569:mean_species_per_year <- species_counts %>%
1707402194587:group_by(Year) %>%
1707402194605:summarise(Mean = mean(SpeciesCount)) |>
1707402194628:mutate(Type = "Tegundafjöldi")
1707402194868:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707402194888:library(plyr)
1707402195155:df <- jd_long_Engin_NA |>
1707402195177:ddply(.(Type,Year,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707402195192:ddply(.(Type,Year),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707402195454:#Leggja saman heildarþekju allra reita innan ára
1707402195475:df_summary <- df |>
1707402195491:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707402195753:sums_row <- df_summary %>%
1707402195771:mutate(Type = "Heildarþekja") |>
1707402195785:select(Type, Year, Mean)
1707402196125:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707402196430:df_with_heildarþekja <- bind_rows(df, combined_df)
1707402196770:library(scales)
1707402197163:# Ensure Type is ordered as desired
1707402197181:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707402197547:# Plot
1707402197571:ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
1707402197586:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707402197603:scale_fill_brewer(palette = "Set1") +
1707402197623:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707402197640:# Example secondary axis (e.g., double the Mean for illustration)
1707402197656:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707402197673:labs(title = "",
1707402197691:y = "Meðalþekja", x = "") +
1707402197708:theme_minimal()+
1707402197724:theme(legend.title = element_blank(),
1707402197741:plot.background = element_rect(fill = "white", color = NA)) +
1707402197757:annotate("text", x = 3, y = Inf, label = "Allir reitir utan 15 nýrra frá 2014", hjust = 1, vjust = 1, size = 5, angle = 0)
1707402208929:rass
1707402224274:joined_data[!which(rowSums(!is.na(joined_data[,4:10][, sapply(joined_data[,4:10], is.numeric)])) == 0),]
1707402232143:rass <- joined_data[which(rowSums(!is.na(joined_data[,4:10][, sapply(joined_data[,4:10], is.numeric)])) == 0),]
1707402236212:rass
1707402266677:!is.na(joined_data[,4:10][, sapply(joined_data[,4:10], is.numeric)])) == 0)
1707402277573:which(rowSums(!is.na(joined_data[,4:10][, sapply(joined_data[,4:10], is.numeric)])) == 0)
1707402319607:rass <- which(rowSums(!is.na(joined_data[,4:10][, sapply(joined_data[,4:10], is.numeric)])) == 0)
1707402322052:rass
1707402338065:jd_long <- joined_data[!rass] %>%
1707402338081:pivot_longer(cols = existing_year_columns, names_to = "Year", values_to = "Coverage")
1707402343880:jd_long <- joined_data[!rass,] %>%
1707402343902:pivot_longer(cols = existing_year_columns, names_to = "Year", values_to = "Coverage")
1707402351851:joined_data[!rass,]
1707402368219:rownames(joined_data)
1707402420803:rownames(joined_data)
1707402454445:joined_data[rownames(joined_data)!=rass,]
1707402471893:ress <- joined_data[rownames(joined_data)!=rass,]
1707402482056:jd_long <- ress %>%
1707402482082:pivot_longer(cols = existing_year_columns, names_to = "Year", values_to = "Coverage")
1707402482805:# Assuming jd_long is what you intended to use instead of jd_long_Engin_NA
1707402482835:jd_long_Engin_NA <- jd_long#[!is.na(jd_long$Coverage),]
1707402483142:# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
1707402483166:if ("package:plyr" %in% search()) {
1707402483191:# Detach 'plyr' if it is loaded
1707402483211:detach("package:plyr", unload = TRUE, character.only = TRUE)
1707402483231:}
1707402483432:species_counts <- jd_long_Engin_NA[!is.na(jd_long$Coverage),] %>%
1707402483461:group_by(Reitur, Year) %>%
1707402483487:summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
1707402483679:# Meðalfjöldi tegunda í reit á ári
1707402483706:mean_species_per_year <- species_counts %>%
1707402483729:group_by(Year) %>%
1707402483752:summarise(Mean = mean(SpeciesCount)) |>
1707402483775:mutate(Type = "Tegundafjöldi")
1707402484139:#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
1707402484164:library(plyr)
1707402484432:df <- jd_long_Engin_NA |>
1707402484456:ddply(.(Type,Year,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
1707402484479:ddply(.(Type,Year),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
1707402484758:#Leggja saman heildarþekju allra reita innan ára
1707402484783:df_summary <- df |>
1707402484804:ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
1707402485022:sums_row <- df_summary %>%
1707402485047:mutate(Type = "Heildarþekja") |>
1707402485072:select(Type, Year, Mean)
1707402486303:combined_df <- bind_rows(sums_row, mean_species_per_year)
1707402486654:df_with_heildarþekja <- bind_rows(df, combined_df)
1707402487147:library(scales)
1707402487696:# Ensure Type is ordered as desired
1707402487720:df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
1707402488202:# Plot
1707402488230:ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
1707402488253:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707402488272:scale_fill_brewer(palette = "Set1") +
1707402488291:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707402488308:# Example secondary axis (e.g., double the Mean for illustration)
1707402488325:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707402488342:labs(title = "",
1707402488357:y = "Meðalþekja", x = "") +
1707402488370:theme_minimal()+
1707402488391:theme(legend.title = element_blank(),
1707402488408:plot.background = element_rect(fill = "white", color = NA)) +
1707402488424:annotate("text", x = 3, y = Inf, label = "Allir reitir utan 15 nýrra frá 2014", hjust = 1, vjust = 1, size = 5, angle = 0)
1707402576320:# Plot
1707402576344:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
1707402576365:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707402576385:scale_fill_brewer(palette = "Set1") +
1707402576402:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707402576420:# Example secondary axis (e.g., double the Mean for illustration)
1707402576438:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707402576457:labs(title = "",
1707402576475:y = "Meðalþekja", x = "") +
1707402576494:theme_minimal()+
1707402576514:theme(legend.title = element_blank(),
1707402576535:plot.background = element_rect(fill = "white", color = NA)) +
1707402576554:annotate("text", x = 3, y = Inf, label = "Allir reitir utan 15 nýrra frá 2014", hjust = 1, vjust = 1, size = 5, angle = 0)
1707402615581:# Plot
1707402615604:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
1707402615627:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707402615649:scale_fill_brewer(palette = "Set1") +
1707402615671:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707402615693:# Example secondary axis (e.g., double the Mean for illustration)
1707402615714:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707402615733:labs(title = "",
1707402615754:y = "Meðalþekja", x = "") +
1707402615773:theme_minimal()+
1707402615795:theme(legend.title = element_blank(),
1707402615812:plot.background = element_rect(fill = "white", color = NA)) +
1707402615832:annotate("text", x = 3, y = Inf, label = "Allir reitir utan 15 nýrra frá 2014", hjust = 1, vjust = 1, size = 5, angle = 0)
1707402623551:ggsave(filename = "mynd4.png", plot = p1, width = 11.7, height = 8.3, dpi = 300, units = "in")
1707403329531:# Plot
1707403329552:p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
1707403329578:geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
1707403329603:scale_fill_brewer(palette = "Set1") +
1707403329625:scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
1707403329649:# Example secondary axis (e.g., double the Mean for illustration)
1707403329672:sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
1707403329694:labs(title = "",
1707403329715:y = "Meðalþekja", x = "") +
1707403329732:theme_minimal()+
1707403329754:theme(legend.title = element_blank(),
1707403329770:plot.background = element_rect(fill = "white", color = NA)) +
1707403329790:annotate("text", x = 2, y = Inf, label = "Allir reitir", hjust = 1, vjust = 1, size = 5, angle = 0)
1707403330056:p1 <- p1 + theme(axis.title = element_text(size = 20), # Increase axis titles
1707403330073:axis.text = element_text(size = 16), # Increase axis text
1707403330090:legend.title = element_text(size = 18), # Increase legend title
1707403330108:legend.text = element_text(size = 16)) # Increase legend text
1707403335343:p1
1707403348301:ggsave(filename = "mynd3.png", plot = p1, width = 11.7, height = 8.3, dpi = 300, units = "in")
1707403403868:ggsave(filename = "myndrass.png", plot = p1, width = 11.7, height = 8.3, dpi = 300, units = "in")
1707405538588:df_with_heildarþekja
