0L, 0L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 1L,
1L, 1L, 0L, 0L, 1L, 1L, 1L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 1L, 1L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L,
1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 1L, 1L, 1L, 0L, 0L,
1L, 1L, 1L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 1L, 0L, 0L,
0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 1L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 1L, 0L, 0L, 0L, 1L, 1L, 1L, 0L, 1L, 1L, 1L, 1L, 0L,
1L, 1L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L,
0L, 1L, 0L, 1L, 1L, 1L, 0L, 0L, 1L, 1L, 1L, 0L, 1L, 1L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L), dim = c(76L,
9L, 1L), dimnames = list(Reitur = c("R1", "R10", "R11", "R12",
"R13", "R14", "R15", "R16", "R17", "R18", "R19", "R2", "R20",
"R21", "R22", "R23", "R24", "R25", "R26", "R27", "R28", "R29",
"R3", "R30", "R31", "R32", "R33", "R34", "R35", "R36", "R37",
"R38", "R39", "R4", "R40", "R41", "R42", "R43", "R44", "R45",
"R46", "R47", "R48", "R49", "R5", "R50", "R51", "R52", "R53",
"R54", "R55", "R56", "R57", "R58", "R59", "R6", "R60", "R61",
"R62", "R63", "R64", "R65", "R66", "R67", "R68", "R69", "R70",
"R71", "R72", "R73", "R74", "R75", "R76", "R77", "R8", "R9"),
Year = c("1976", "1997", "1999", "2006", "2011", "2014",
"2017", "2020", "2023"), class = "matrix")
structure(c(0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 0L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 0L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 1L, 0L, 0L, 0L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L,
0L, 0L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 0L, 1L,
1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 1L,
1L, 1L, 0L, 0L, 1L, 1L, 1L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 1L, 1L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L,
1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 1L, 1L, 1L, 0L, 0L,
1L, 1L, 1L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 1L, 0L, 0L,
0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 1L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 1L, 0L, 0L, 0L, 1L, 1L, 1L, 0L, 1L, 1L, 1L, 1L, 0L,
1L, 1L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L,
0L, 1L, 0L, 1L, 1L, 1L, 0L, 0L, 1L, 1L, 1L, 0L, 1L, 1L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L), dim = c(76L,
9L, 1L), dimnames = list(Reitur = c("R1", "R10", "R11", "R12",
"R13", "R14", "R15", "R16", "R17", "R18", "R19", "R2", "R20",
"R21", "R22", "R23", "R24", "R25", "R26", "R27", "R28", "R29",
"R3", "R30", "R31", "R32", "R33", "R34", "R35", "R36", "R37",
"R38", "R39", "R4", "R40", "R41", "R42", "R43", "R44", "R45",
"R46", "R47", "R48", "R49", "R5", "R50", "R51", "R52", "R53",
"R54", "R55", "R56", "R57", "R58", "R59", "R6", "R60", "R61",
"R62", "R63", "R64", "R65", "R66", "R67", "R68", "R69", "R70",
"R71", "R72", "R73", "R74", "R75", "R76", "R77", "R8", "R9"),
Year = c("1976", "1997", "1999", "2006", "2011", "2014",
"2017", "2020", "2023")), class = "table")
structure(c(0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 0L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 0L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 1L, 0L, 0L, 0L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L,
0L, 0L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L,
1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 1L,
1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 0L, 1L,
1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 1L,
1L, 1L, 0L, 0L, 1L, 1L, 1L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 1L, 1L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L,
1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 1L, 1L, 1L, 0L, 0L,
1L, 1L, 1L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 1L, 0L, 0L,
0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 1L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 1L, 0L, 0L, 0L, 1L, 1L, 1L, 0L, 1L, 1L, 1L, 1L, 0L,
1L, 1L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L,
0L, 1L, 0L, 1L, 1L, 1L, 0L, 0L, 1L, 1L, 1L, 0L, 1L, 1L, 0L, 0L,
0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L), dim = c(76L,
9L, 1L), dimnames = list(Reitur = c("R1", "R10", "R11", "R12",
"R13", "R14", "R15", "R16", "R17", "R18", "R19", "R2", "R20",
"R21", "R22", "R23", "R24", "R25", "R26", "R27", "R28", "R29",
"R3", "R30", "R31", "R32", "R33", "R34", "R35", "R36", "R37",
"R38", "R39", "R4", "R40", "R41", "R42", "R43", "R44", "R45",
"R46", "R47", "R48", "R49", "R5", "R50", "R51", "R52", "R53",
"R54", "R55", "R56", "R57", "R58", "R59", "R6", "R60", "R61",
"R62", "R63", "R64", "R65", "R66", "R67", "R68", "R69", "R70",
"R71", "R72", "R73", "R74", "R75", "R76", "R77", "R8", "R9"),
Year = c("1976", "1997", "1999", "2006", "2011", "2014",
"2017", "2020", "2023")), class = "matrix")
rass <- read.table(text = readClipboard(), header = TRUE, check.names = FALSE)
if (!requireNamespace("clipr", quietly = TRUE)) install.packages("clipr")
rass <- read.table(text = clipr::read_clip(), header = TRUE, check.names = FALSE)
rass <- read.table(text = readClipboard(), header = TRUE, check.names = FALSE)
str(table(results)
)
as.data.frame.matrix(results)
str(as.data.frame.matrix(results))
data_frame <- as.data.frame.matrix(results[, , 1])
data_frame
str(data_frame)
result
results
data_frame <- data.frame(
Reitur = unlist(results$Reitur),
Year = unlist(results$Year)
)
data_frame
table(data_frame )
KM <- read.csv("gogn/coverkm.csv", check.names = F)
KM <-  KM[, -c(7:9)]
data <- read.csv("gogn/hreinsad.csv", check.names = F)
joined_data <- data %>%
left_join(KM, by = c("Reitur", "Type", "species")) %>% # Ef þessi villa kemur upp þá Error in `left_join()`:  ! Join columns must be present in data.✖ Problem with `Type`, `species`, `2020`, and `2023`.
select(species, Type, Reitur, km, everything()) |>
select(-c(`1999`,`1976`,)) |>
filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28", "R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62", "R63", "R64", "R65", "R66", "R67", "R68", "R69",
"R70", "R71", "R72", "R73", "R74", "R75", "R76", "R77")) |>
#mutate(Type = if_else(species == "Ber klöpp", "Ber klöpp", Type)) |>
filter(!species %in% "Ber klöpp" &
!Type %in% c("Grænþörungar", "Cyanobacteria"))
# Dynamically identify year columns that exist after filtering
year_columns <- c('1976', '1997', '2006', '2011', '2014', '2017', '2020', '2023')
existing_year_columns <- year_columns[year_columns %in% colnames(joined_data)]
# Pivot longer only with existing year columns
jd_long <- joined_data %>%
pivot_longer(cols = existing_year_columns, names_to = "Year", values_to = "Coverage")
# Assuming jd_long is what you intended to use instead of jd_long_Engin_NA
jd_long_Engin_NA <- jd_long#[!is.na(jd_long$Coverage),]
# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
if ("package:plyr" %in% search()) {
# Detach 'plyr' if it is loaded
detach("package:plyr", unload = TRUE, character.only = TRUE)
}
species_counts <- jd_long_Engin_NA[!is.na(jd_long$Coverage),] %>%
group_by(Reitur, Year) %>%
summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
# Meðalfjöldi tegunda í reit á ári
mean_species_per_year <- species_counts %>%
group_by(Year) %>%
summarise(Mean = mean(SpeciesCount)) |>
mutate(Type = "Tegundafjöldi")
#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
library(plyr)
df <- jd_long_Engin_NA |>
ddply(.(Type,Year,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
ddply(.(Type,Year),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
#Leggja saman heildarþekju allra reita innan ára
df_summary <- df |>
ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
sums_row <- df_summary %>%
mutate(Type = "Heildarþekja") |>
select(Type, Year, Mean)
combined_df <- bind_rows(sums_row, mean_species_per_year)
df_with_heildarþekja <- bind_rows(df, combined_df)
library(scales)
# Ensure Type is ordered as desired
df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
# Plot
ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
scale_fill_brewer(palette = "Set1") +
scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
# Example secondary axis (e.g., double the Mean for illustration)
sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
labs(title = "",
y = "Meðalþekja", x = "") +
theme_minimal()+
theme(legend.title = element_blank(),
plot.background = element_rect(fill = "white", color = NA)) +
annotate("text", x = 3, y = Inf, label = "Allir reitir utan 15 nýrra frá 2014", hjust = 1, vjust = 1, size = 5, angle = 0)
joined_data
#KM <- read.csv("gogn/coverkm.csv", check.names = F)
#KM <-  KM[, -c(7:9)]
data <- read.csv("gogn/hreinsad.csv", check.names = F)
joined_data <- data %>%
#left_join(KM, by = c("Reitur", "Type", "species")) %>% # Ef þessi villa kemur upp þá Error in `left_join()`:  ! Join columns must be present in data.✖ Problem with `Type`, `species`, `2020`, and `2023`.
select(species, Type, Reitur, km, everything()) |>
select(-c(`1999`,`1976`,)) |>
filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28", "R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62", "R63", "R64", "R65", "R66", "R67", "R68", "R69",
"R70", "R71", "R72", "R73", "R74", "R75", "R76", "R77")) |>
#mutate(Type = if_else(species == "Ber klöpp", "Ber klöpp", Type)) |>
filter(!species %in% "Ber klöpp" &
!Type %in% c("Grænþörungar", "Cyanobacteria"))
joined_data <- data %>%
#left_join(KM, by = c("Reitur", "Type", "species")) %>% # Ef þessi villa kemur upp þá Error in `left_join()`:  ! Join columns must be present in data.✖ Problem with `Type`, `species`, `2020`, and `2023`.
select(species, Type, Reitur, everything()) |>
select(-c(`1999`,`1976`,)) |>
filter(!Reitur %in% c("R1", "R2", "R4", "R5", "R6", "R9", "R10", "R15", "R28", "R29", "R53", "R54", "R55", "R57", "R58", "R59", "R61", "R62", "R63", "R64", "R65", "R66", "R67", "R68", "R69",
"R70", "R71", "R72", "R73", "R74", "R75", "R76", "R77")) |>
#mutate(Type = if_else(species == "Ber klöpp", "Ber klöpp", Type)) |>
filter(!species %in% "Ber klöpp" &
!Type %in% c("Grænþörungar", "Cyanobacteria"))
year_columns <- c('1976', '1997', '2006', '2011', '2014', '2017', '2020', '2023')
existing_year_columns <- year_columns[year_columns %in% colnames(joined_data)]
existing_year_columns
joined_data
sapply(joined_data, function(x) sum(is.na(x)))
rowsum(joined_data[,4:10])
rowSums(joined_data[,4:10])
table(rowSums(joined_data[,4:10]))
apply(joined_data[,4:10], 1, function(x) !any(is.na(x)))
table(apply(joined_data[,4:10], 1, function(x) !any(is.na(x))))
# Pivot longer only with existing year columns
rass <- joined_data[apply(joined_data[,4:10], 1, function(x) !any(is.na(x)))]
# Pivot longer only with existing year columns
rass <- joined_data[apply(joined_data[,4:10], 1, function(x) !any(is.na(x))),]
jd_long <- rass %>%
pivot_longer(cols = existing_year_columns, names_to = "Year", values_to = "Coverage")
# Assuming jd_long is what you intended to use instead of jd_long_Engin_NA
jd_long_Engin_NA <- jd_long#[!is.na(jd_long$Coverage),]
# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
if ("package:plyr" %in% search()) {
# Detach 'plyr' if it is loaded
detach("package:plyr", unload = TRUE, character.only = TRUE)
}
species_counts <- jd_long_Engin_NA[!is.na(jd_long$Coverage),] %>%
group_by(Reitur, Year) %>%
summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
# Meðalfjöldi tegunda í reit á ári
mean_species_per_year <- species_counts %>%
group_by(Year) %>%
summarise(Mean = mean(SpeciesCount)) |>
mutate(Type = "Tegundafjöldi")
#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
library(plyr)
df <- jd_long_Engin_NA |>
ddply(.(Type,Year,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
ddply(.(Type,Year),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
#Leggja saman heildarþekju allra reita innan ára
df_summary <- df |>
ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
sums_row <- df_summary %>%
mutate(Type = "Heildarþekja") |>
select(Type, Year, Mean)
combined_df <- bind_rows(sums_row, mean_species_per_year)
df_with_heildarþekja <- bind_rows(df, combined_df)
library(scales)
# Ensure Type is ordered as desired
df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
# Plot
ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
scale_fill_brewer(palette = "Set1") +
scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
# Example secondary axis (e.g., double the Mean for illustration)
sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
labs(title = "",
y = "Meðalþekja", x = "") +
theme_minimal()+
theme(legend.title = element_blank(),
plot.background = element_rect(fill = "white", color = NA)) +
annotate("text", x = 3, y = Inf, label = "Allir reitir utan 15 nýrra frá 2014", hjust = 1, vjust = 1, size = 5, angle = 0)
# Pivot longer only with existing year columns
rass <- joined_data[!apply(joined_data[,4:10], 1, function(x) !any(is.na(x))),]
jd_long <- rass %>%
pivot_longer(cols = existing_year_columns, names_to = "Year", values_to = "Coverage")
# Assuming jd_long is what you intended to use instead of jd_long_Engin_NA
jd_long_Engin_NA <- jd_long#[!is.na(jd_long$Coverage),]
# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
if ("package:plyr" %in% search()) {
# Detach 'plyr' if it is loaded
detach("package:plyr", unload = TRUE, character.only = TRUE)
}
species_counts <- jd_long_Engin_NA[!is.na(jd_long$Coverage),] %>%
group_by(Reitur, Year) %>%
summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
# Meðalfjöldi tegunda í reit á ári
mean_species_per_year <- species_counts %>%
group_by(Year) %>%
summarise(Mean = mean(SpeciesCount)) |>
mutate(Type = "Tegundafjöldi")
#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
library(plyr)
df <- jd_long_Engin_NA |>
ddply(.(Type,Year,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
ddply(.(Type,Year),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
#Leggja saman heildarþekju allra reita innan ára
df_summary <- df |>
ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
sums_row <- df_summary %>%
mutate(Type = "Heildarþekja") |>
select(Type, Year, Mean)
combined_df <- bind_rows(sums_row, mean_species_per_year)
df_with_heildarþekja <- bind_rows(df, combined_df)
library(scales)
# Ensure Type is ordered as desired
df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
# Plot
ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
scale_fill_brewer(palette = "Set1") +
scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
# Example secondary axis (e.g., double the Mean for illustration)
sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
labs(title = "",
y = "Meðalþekja", x = "") +
theme_minimal()+
theme(legend.title = element_blank(),
plot.background = element_rect(fill = "white", color = NA)) +
annotate("text", x = 3, y = Inf, label = "Allir reitir utan 15 nýrra frá 2014", hjust = 1, vjust = 1, size = 5, angle = 0)
which(rowSums(!is.na(joined_data[,4:10][, sapply(joined_data[,4:10], is.numeric)])) == 0)
joined_data[10,]
rass <- joined_data[!which(rowSums(!is.na(joined_data[,4:10][, sapply(joined_data[,4:10], is.numeric)])) == 0)]
existing_year_columns
jd_long <- rass %>%
pivot_longer(cols = existing_year_columns, names_to = "Year", values_to = "Coverage")
rass <- joined_data[!which(rowSums(!is.na(joined_data[,4:10][, sapply(joined_data[,4:10], is.numeric)])) == 0),]
jd_long <- rass %>%
pivot_longer(cols = existing_year_columns, names_to = "Year", values_to = "Coverage")
# Assuming jd_long is what you intended to use instead of jd_long_Engin_NA
jd_long_Engin_NA <- jd_long#[!is.na(jd_long$Coverage),]
# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
if ("package:plyr" %in% search()) {
# Detach 'plyr' if it is loaded
detach("package:plyr", unload = TRUE, character.only = TRUE)
}
species_counts <- jd_long_Engin_NA[!is.na(jd_long$Coverage),] %>%
group_by(Reitur, Year) %>%
summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
# Meðalfjöldi tegunda í reit á ári
mean_species_per_year <- species_counts %>%
group_by(Year) %>%
summarise(Mean = mean(SpeciesCount)) |>
mutate(Type = "Tegundafjöldi")
#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
library(plyr)
df <- jd_long_Engin_NA |>
ddply(.(Type,Year,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
ddply(.(Type,Year),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
#Leggja saman heildarþekju allra reita innan ára
df_summary <- df |>
ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
sums_row <- df_summary %>%
mutate(Type = "Heildarþekja") |>
select(Type, Year, Mean)
combined_df <- bind_rows(sums_row, mean_species_per_year)
df_with_heildarþekja <- bind_rows(df, combined_df)
library(scales)
# Ensure Type is ordered as desired
df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
# Plot
ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
scale_fill_brewer(palette = "Set1") +
scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
# Example secondary axis (e.g., double the Mean for illustration)
sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
labs(title = "",
y = "Meðalþekja", x = "") +
theme_minimal()+
theme(legend.title = element_blank(),
plot.background = element_rect(fill = "white", color = NA)) +
annotate("text", x = 3, y = Inf, label = "Allir reitir utan 15 nýrra frá 2014", hjust = 1, vjust = 1, size = 5, angle = 0)
rass
joined_data[!which(rowSums(!is.na(joined_data[,4:10][, sapply(joined_data[,4:10], is.numeric)])) == 0),]
rass <- joined_data[which(rowSums(!is.na(joined_data[,4:10][, sapply(joined_data[,4:10], is.numeric)])) == 0),]
rass
!is.na(joined_data[,4:10][, sapply(joined_data[,4:10], is.numeric)])) == 0)
which(rowSums(!is.na(joined_data[,4:10][, sapply(joined_data[,4:10], is.numeric)])) == 0)
rass <- which(rowSums(!is.na(joined_data[,4:10][, sapply(joined_data[,4:10], is.numeric)])) == 0)
rass
jd_long <- joined_data[!rass] %>%
pivot_longer(cols = existing_year_columns, names_to = "Year", values_to = "Coverage")
jd_long <- joined_data[!rass,] %>%
pivot_longer(cols = existing_year_columns, names_to = "Year", values_to = "Coverage")
joined_data[!rass,]
rownames(joined_data)
rownames(joined_data)
joined_data[rownames(joined_data)!=rass,]
ress <- joined_data[rownames(joined_data)!=rass,]
jd_long <- ress %>%
pivot_longer(cols = existing_year_columns, names_to = "Year", values_to = "Coverage")
# Assuming jd_long is what you intended to use instead of jd_long_Engin_NA
jd_long_Engin_NA <- jd_long#[!is.na(jd_long$Coverage),]
# Heildarfjöldi tegunda á ári í hverjum reit. Passa að hafa ekki plyr pakkann í gangi.
if ("package:plyr" %in% search()) {
# Detach 'plyr' if it is loaded
detach("package:plyr", unload = TRUE, character.only = TRUE)
}
species_counts <- jd_long_Engin_NA[!is.na(jd_long$Coverage),] %>%
group_by(Reitur, Year) %>%
summarise(SpeciesCount = n_distinct(species), .groups = 'drop')
# Meðalfjöldi tegunda í reit á ári
mean_species_per_year <- species_counts %>%
group_by(Year) %>%
summarise(Mean = mean(SpeciesCount)) |>
mutate(Type = "Tegundafjöldi")
#ddply(jd_long_Engin_NA,.(Year, species), summarise, Fjoldi = length(species))
library(plyr)
df <- jd_long_Engin_NA |>
ddply(.(Type,Year,Reitur), summarize,  Summa = sum(Coverage, na.rm = TRUE)) |>
ddply(.(Type,Year),summarize,Mean=mean(Summa, na.rm=TRUE),SE = sd(Summa, na.rm = TRUE) / sqrt(length(Summa)))
#Leggja saman heildarþekju allra reita innan ára
df_summary <- df |>
ddply(.(Year),summarize,Mean=sum(Mean, na.rm=TRUE))
sums_row <- df_summary %>%
mutate(Type = "Heildarþekja") |>
select(Type, Year, Mean)
combined_df <- bind_rows(sums_row, mean_species_per_year)
df_with_heildarþekja <- bind_rows(df, combined_df)
library(scales)
# Ensure Type is ordered as desired
df_with_heildarþekja$Type <- factor(df_with_heildarþekja$Type, levels = c("Mosar","Blað- og runnfléttur", "Hrúðurfléttur","Heildarþekja",  "Tegundafjöldi"))
# Plot
ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
scale_fill_brewer(palette = "Set1") +
scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
# Example secondary axis (e.g., double the Mean for illustration)
sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
labs(title = "",
y = "Meðalþekja", x = "") +
theme_minimal()+
theme(legend.title = element_blank(),
plot.background = element_rect(fill = "white", color = NA)) +
annotate("text", x = 3, y = Inf, label = "Allir reitir utan 15 nýrra frá 2014", hjust = 1, vjust = 1, size = 5, angle = 0)
# Plot
p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
scale_fill_brewer(palette = "Set1") +
scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
# Example secondary axis (e.g., double the Mean for illustration)
sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
labs(title = "",
y = "Meðalþekja", x = "") +
theme_minimal()+
theme(legend.title = element_blank(),
plot.background = element_rect(fill = "white", color = NA)) +
annotate("text", x = 3, y = Inf, label = "Allir reitir utan 15 nýrra frá 2014", hjust = 1, vjust = 1, size = 5, angle = 0)
# Plot
p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
scale_fill_brewer(palette = "Set1") +
scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
# Example secondary axis (e.g., double the Mean for illustration)
sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
labs(title = "",
y = "Meðalþekja", x = "") +
theme_minimal()+
theme(legend.title = element_blank(),
plot.background = element_rect(fill = "white", color = NA)) +
annotate("text", x = 3, y = Inf, label = "Allir reitir utan 15 nýrra frá 2014", hjust = 1, vjust = 1, size = 5, angle = 0)
ggsave(filename = "mynd4.png", plot = p1, width = 11.7, height = 8.3, dpi = 300, units = "in")
# Plot
p1 <- ggplot(df_with_heildarþekja, aes(x = Type, y = Mean), fill = "white") +
geom_bar(aes(fill = Year), stat = "identity", color="black", linewidth =.6, position="dodge") +
scale_fill_brewer(palette = "Set1") +
scale_y_continuous(labels = label_dollar(prefix = "", suffix = " \n%"),
# Example secondary axis (e.g., double the Mean for illustration)
sec.axis = sec_axis(~ . , name = "Meðaltegundafjöldi")) +
labs(title = "",
y = "Meðalþekja", x = "") +
theme_minimal()+
theme(legend.title = element_blank(),
plot.background = element_rect(fill = "white", color = NA)) +
annotate("text", x = 2, y = Inf, label = "Allir reitir", hjust = 1, vjust = 1, size = 5, angle = 0)
p1 <- p1 + theme(axis.title = element_text(size = 20), # Increase axis titles
axis.text = element_text(size = 16), # Increase axis text
legend.title = element_text(size = 18), # Increase legend title
legend.text = element_text(size = 16)) # Increase legend text
p1
ggsave(filename = "mynd3.png", plot = p1, width = 11.7, height = 8.3, dpi = 300, units = "in")
ggsave(filename = "myndrass.png", plot = p1, width = 11.7, height = 8.3, dpi = 300, units = "in")
df_with_heildarþekja
